

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Jun 08 13:16:59 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Generated 22/03/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0000                     	;# 
    60     0001                     	;# 
    61     0002                     	;# 
    62     0003                     	;# 
    63     0004                     	;# 
    64     0005                     	;# 
    65     0006                     	;# 
    66     0007                     	;# 
    67     0008                     	;# 
    68     0009                     	;# 
    69     000A                     	;# 
    70     000B                     	;# 
    71     000C                     	;# 
    72     000D                     	;# 
    73     000E                     	;# 
    74     000E                     	;# 
    75     000F                     	;# 
    76     0010                     	;# 
    77     0011                     	;# 
    78     0012                     	;# 
    79     0013                     	;# 
    80     0014                     	;# 
    81     0015                     	;# 
    82     0015                     	;# 
    83     0016                     	;# 
    84     0017                     	;# 
    85     0018                     	;# 
    86     0019                     	;# 
    87     001A                     	;# 
    88     001B                     	;# 
    89     001B                     	;# 
    90     001C                     	;# 
    91     001D                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     0081                     	;# 
    95     0085                     	;# 
    96     0086                     	;# 
    97     0087                     	;# 
    98     0088                     	;# 
    99     0089                     	;# 
   100     008C                     	;# 
   101     008D                     	;# 
   102     008E                     	;# 
   103     0091                     	;# 
   104     0092                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009C                     	;# 
   110     009D                     	;# 
   111     009E                     	;# 
   112     009F                     	;# 
   113     010C                     	;# 
   114     010D                     	;# 
   115     010E                     	;# 
   116     010F                     	;# 
   117     018C                     	;# 
   118     018D                     	;# 
   119     0000                     	;# 
   120     0001                     	;# 
   121     0002                     	;# 
   122     0003                     	;# 
   123     0004                     	;# 
   124     0005                     	;# 
   125     0006                     	;# 
   126     0007                     	;# 
   127     0008                     	;# 
   128     0009                     	;# 
   129     000A                     	;# 
   130     000B                     	;# 
   131     000C                     	;# 
   132     000D                     	;# 
   133     000E                     	;# 
   134     000E                     	;# 
   135     000F                     	;# 
   136     0010                     	;# 
   137     0011                     	;# 
   138     0012                     	;# 
   139     0013                     	;# 
   140     0014                     	;# 
   141     0015                     	;# 
   142     0015                     	;# 
   143     0016                     	;# 
   144     0017                     	;# 
   145     0018                     	;# 
   146     0019                     	;# 
   147     001A                     	;# 
   148     001B                     	;# 
   149     001B                     	;# 
   150     001C                     	;# 
   151     001D                     	;# 
   152     001E                     	;# 
   153     001F                     	;# 
   154     0081                     	;# 
   155     0085                     	;# 
   156     0086                     	;# 
   157     0087                     	;# 
   158     0088                     	;# 
   159     0089                     	;# 
   160     008C                     	;# 
   161     008D                     	;# 
   162     008E                     	;# 
   163     0091                     	;# 
   164     0092                     	;# 
   165     0093                     	;# 
   166     0094                     	;# 
   167     0098                     	;# 
   168     0099                     	;# 
   169     009C                     	;# 
   170     009D                     	;# 
   171     009E                     	;# 
   172     009F                     	;# 
   173     010C                     	;# 
   174     010D                     	;# 
   175     010E                     	;# 
   176     010F                     	;# 
   177     018C                     	;# 
   178     018D                     	;# 
   179     0000                     	;# 
   180     0001                     	;# 
   181     0002                     	;# 
   182     0003                     	;# 
   183     0004                     	;# 
   184     0005                     	;# 
   185     0006                     	;# 
   186     0007                     	;# 
   187     0008                     	;# 
   188     0009                     	;# 
   189     000A                     	;# 
   190     000B                     	;# 
   191     000C                     	;# 
   192     000D                     	;# 
   193     000E                     	;# 
   194     000E                     	;# 
   195     000F                     	;# 
   196     0010                     	;# 
   197     0011                     	;# 
   198     0012                     	;# 
   199     0013                     	;# 
   200     0014                     	;# 
   201     0015                     	;# 
   202     0015                     	;# 
   203     0016                     	;# 
   204     0017                     	;# 
   205     0018                     	;# 
   206     0019                     	;# 
   207     001A                     	;# 
   208     001B                     	;# 
   209     001B                     	;# 
   210     001C                     	;# 
   211     001D                     	;# 
   212     001E                     	;# 
   213     001F                     	;# 
   214     0081                     	;# 
   215     0085                     	;# 
   216     0086                     	;# 
   217     0087                     	;# 
   218     0088                     	;# 
   219     0089                     	;# 
   220     008C                     	;# 
   221     008D                     	;# 
   222     008E                     	;# 
   223     0091                     	;# 
   224     0092                     	;# 
   225     0093                     	;# 
   226     0094                     	;# 
   227     0098                     	;# 
   228     0099                     	;# 
   229     009C                     	;# 
   230     009D                     	;# 
   231     009E                     	;# 
   232     009F                     	;# 
   233     010C                     	;# 
   234     010D                     	;# 
   235     010E                     	;# 
   236     010F                     	;# 
   237     018C                     	;# 
   238     018D                     	;# 
   239                           
   240                           	psect	idataBANK0
   241     05D9                     __pidataBANK0:
   242                           
   243                           ;initializer for main@F1032
   244     05D9  3441               	retlw	65
   245     05DA  3442               	retlw	66
   246     05DB  3443               	retlw	67
   247     05DC  3444               	retlw	68
   248     05DD  3445               	retlw	69
   249     0013                     _SSPBUF	set	19
   250     0014                     _SSPCON	set	20
   251     0063                     _SSPIF	set	99
   252     0094                     _SSPSTAT	set	148
   253     0093                     _SSPADD	set	147
   254     0091                     _SSPCON2	set	145
   255     0088                     _TRISD	set	136
   256     048C                     _ACKEN	set	1164
   257     048D                     _ACKDT	set	1165
   258     048B                     _RCEN	set	1163
   259     048E                     _ACKSTAT	set	1166
   260     048A                     _PEN	set	1162
   261     0489                     _RSEN	set	1161
   262     0488                     _SEN	set	1160
   263     043C                     _TRISC4	set	1084
   264     043B                     _TRISC3	set	1083
   265                           
   266                           	psect	cinit
   267     07DE                     start_initialization:	
   268                           ; #config settings
   269                           
   270     07DE                     __initialization:
   271                           
   272                           ; Initialize objects allocated to BANK0
   273     07DE  120A  118A  25D9  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   274     07E3  00B4               	movwf	__pdataBANK0& (0+127)
   275     07E4  120A  118A  25DA  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   276     07E9  00B5               	movwf	(__pdataBANK0+1)& (0+127)
   277     07EA  120A  118A  25DB  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   278     07EF  00B6               	movwf	(__pdataBANK0+2)& (0+127)
   279     07F0  120A  118A  25DC  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   280     07F5  00B7               	movwf	(__pdataBANK0+3)& (0+127)
   281     07F6  120A  118A  25DD  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   282     07FB  00B8               	movwf	(__pdataBANK0+4)& (0+127)
   283     07FC                     end_of_initialization:	
   284                           ;End of C runtime variable initialization code
   285                           
   286     07FC                     __end_of__initialization:
   287     07FC  0183               	clrf	3
   288     07FD  120A  118A  2ECC   	ljmp	_main	;jump to C main() function
   289                           
   290                           	psect	dataBANK0
   291     0034                     __pdataBANK0:
   292     0034                     main@F1032:
   293     0034                     	ds	5
   294                           
   295                           	psect	cstackCOMMON
   296     0070                     __pcstackCOMMON:
   297     0070                     ?_main:
   298     0070                     ?_I2C_Master_Wait:	
   299                           ; 1 bytes @ 0x0
   300                           
   301     0070                     ??_I2C_Master_Wait:	
   302                           ; 1 bytes @ 0x0
   303                           
   304     0070                     ?_I2C_Master_Start:	
   305                           ; 1 bytes @ 0x0
   306                           
   307     0070                     ??_I2C_Master_Start:	
   308                           ; 1 bytes @ 0x0
   309                           
   310     0070                     ?_I2C_Master_RepeatedStart:	
   311                           ; 1 bytes @ 0x0
   312                           
   313     0070                     ??_I2C_Master_RepeatedStart:	
   314                           ; 1 bytes @ 0x0
   315                           
   316     0070                     ?_I2C_Master_Stop:	
   317                           ; 1 bytes @ 0x0
   318                           
   319     0070                     ??_I2C_Master_Stop:	
   320                           ; 1 bytes @ 0x0
   321                           
   322     0070                     ?_I2C_Master_Write:	
   323                           ; 1 bytes @ 0x0
   324                           
   325     0070                     ??_I2C_Master_Write:	
   326                           ; 1 bytes @ 0x0
   327                           
   328     0070                     ?_I2C_Read_Byte:	
   329                           ; 1 bytes @ 0x0
   330                           
   331     0070                     ??_I2C_Read_Byte:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ?_I2C_ACK:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ??_I2C_ACK:	
   338                           ; 1 bytes @ 0x0
   339                           
   340     0070                     ?_I2C_NACK:	
   341                           ; 1 bytes @ 0x0
   342                           
   343     0070                     ??_I2C_NACK:	
   344                           ; 1 bytes @ 0x0
   345                           
   346     0070                     ?___lldiv:	
   347                           ; 1 bytes @ 0x0
   348                           
   349     0070                     I2C_Master_Write@data:	
   350                           ; 4 bytes @ 0x0
   351                           
   352     0070                     ___lldiv@divisor:	
   353                           ; 1 bytes @ 0x0
   354                           
   355                           
   356                           ; 4 bytes @ 0x0
   357     0070                     	ds	1
   358     0071                     ?_EEPROM_Write_Page:
   359     0071                     ?_EEPROM_Read_Page:	
   360                           ; 1 bytes @ 0x1
   361                           
   362     0071                     EEPROM_Write_Page@add:	
   363                           ; 1 bytes @ 0x1
   364                           
   365     0071                     EEPROM_Read_Page@add:	
   366                           ; 2 bytes @ 0x1
   367                           
   368                           
   369                           ; 2 bytes @ 0x1
   370     0071                     	ds	2
   371     0073                     EEPROM_Write_Page@data:
   372     0073                     EEPROM_Read_Page@data:	
   373                           ; 1 bytes @ 0x3
   374                           
   375                           
   376                           ; 1 bytes @ 0x3
   377     0073                     	ds	1
   378     0074                     EEPROM_Write_Page@len:
   379     0074                     EEPROM_Read_Page@len:	
   380                           ; 1 bytes @ 0x4
   381                           
   382     0074                     ___lldiv@dividend:	
   383                           ; 2 bytes @ 0x4
   384                           
   385                           
   386                           ; 4 bytes @ 0x4
   387     0074                     	ds	1
   388     0075                     ??_EEPROM_Write_Page:
   389                           
   390                           ; 1 bytes @ 0x5
   391     0075                     	ds	1
   392     0076                     ??_EEPROM_Read_Page:
   393                           
   394                           ; 1 bytes @ 0x6
   395     0076                     	ds	1
   396     0077                     EEPROM_Write_Page@i:
   397     0077                     EEPROM_Read_Page@i:	
   398                           ; 2 bytes @ 0x7
   399                           
   400                           
   401                           ; 2 bytes @ 0x7
   402     0077                     	ds	1
   403     0078                     ??___lldiv:
   404                           
   405                           ; 1 bytes @ 0x8
   406     0078                     	ds	1
   407     0079                     ___lldiv@quotient:
   408                           
   409                           ; 4 bytes @ 0x9
   410     0079                     	ds	4
   411     007D                     ___lldiv@counter:
   412                           
   413                           ; 1 bytes @ 0xD
   414     007D                     	ds	1
   415                           
   416                           	psect	cstackBANK0
   417     0020                     __pcstackBANK0:
   418     0020                     ?_I2C_Master_Init:
   419     0020                     I2C_Master_Init@baud:	
   420                           ; 1 bytes @ 0x0
   421                           
   422                           
   423                           ; 4 bytes @ 0x0
   424     0020                     	ds	4
   425     0024                     ??_I2C_Master_Init:
   426                           
   427                           ; 1 bytes @ 0x4
   428     0024                     	ds	4
   429     0028                     ??_main:
   430                           
   431                           ; 1 bytes @ 0x8
   432     0028                     	ds	2
   433     002A                     main@Data:
   434                           
   435                           ; 5 bytes @ 0xA
   436     002A                     	ds	5
   437     002F                     main@data:
   438                           
   439                           ; 5 bytes @ 0xF
   440     002F                     	ds	5
   441                           
   442                           	psect	maintext
   443     06CC                     __pmaintext:	
   444 ;;
   445 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   446 ;;
   447 ;; *************** function _main *****************
   448 ;; Defined at:
   449 ;;		line 22 in file "mian_1.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;  data            5   15[BANK0 ] unsigned char [5]
   454 ;;  Data            5   10[BANK0 ] unsigned char [5]
   455 ;;  Address         2    0        unsigned int 
   456 ;;  len             2    0        unsigned int 
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : B00/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   466 ;;      Params:         0       0       0       0       0
   467 ;;      Locals:         0      10       0       0       0
   468 ;;      Temps:          0       2       0       0       0
   469 ;;      Totals:         0      12       0       0       0
   470 ;;Total ram usage:       12 bytes
   471 ;; Hardware stack levels required when called: 3
   472 ;; This function calls:
   473 ;;		_EEPROM_Read_Page
   474 ;;		_EEPROM_Write_Page
   475 ;;		_I2C_Master_Init
   476 ;; This function is called by:
   477 ;;		Startup code after reset
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481     06CC                     _main:	
   482                           ;psect for function _main
   483                           
   484     06CC                     l928:	
   485                           ;incstack = 0
   486                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   487                           
   488                           
   489                           ;mian_1.c: 24:     I2C_Master_Init(100000);
   490     06CC  3000               	movlw	0
   491     06CD  1283               	bcf	3,5	;RP0=0, select bank0
   492     06CE  1303               	bcf	3,6	;RP1=0, select bank0
   493     06CF  00A3               	movwf	I2C_Master_Init@baud+3
   494     06D0  3001               	movlw	1
   495     06D1  00A2               	movwf	I2C_Master_Init@baud+2
   496     06D2  3086               	movlw	134
   497     06D3  00A1               	movwf	I2C_Master_Init@baud+1
   498     06D4  30A0               	movlw	160
   499     06D5  00A0               	movwf	I2C_Master_Init@baud
   500     06D6  120A  118A  264A  120A  118A  	fcall	_I2C_Master_Init
   501     06DB                     l930:
   502     06DB                     l932:
   503                           
   504                           ;mian_1.c: 26:           unsigned char Data[5] ={'A','B','C','D','E'};
   505     06DB  302A               	movlw	main@Data& (0+255)
   506     06DC  0084               	movwf	4
   507     06DD  1283               	bcf	3,5	;RP0=0, select bank0
   508     06DE  1303               	bcf	3,6	;RP1=0, select bank0
   509     06DF  0834               	movf	main@F1032,w
   510     06E0  1383               	bcf	3,7	;select IRP bank0
   511     06E1  0080               	movwf	0
   512     06E2  0A84               	incf	4,f
   513     06E3  0835               	movf	main@F1032+1,w
   514     06E4  0080               	movwf	0
   515     06E5  0A84               	incf	4,f
   516     06E6  0836               	movf	main@F1032+2,w
   517     06E7  0080               	movwf	0
   518     06E8  0A84               	incf	4,f
   519     06E9  0837               	movf	main@F1032+3,w
   520     06EA  0080               	movwf	0
   521     06EB  0A84               	incf	4,f
   522     06EC  0838               	movf	main@F1032+4,w
   523     06ED  0080               	movwf	0
   524     06EE                     l934:
   525     06EE                     l936:
   526                           
   527                           ;mian_1.c: 28:     EEPROM_Write_Page(Address, Data, len);
   528     06EE  3020               	movlw	32
   529     06EF  00F1               	movwf	EEPROM_Write_Page@add
   530     06F0  3000               	movlw	0
   531     06F1  00F2               	movwf	EEPROM_Write_Page@add+1
   532     06F2  302A               	movlw	(low (main@Data| 0))& (0+255)
   533     06F3  00F3               	movwf	EEPROM_Write_Page@data
   534     06F4  3005               	movlw	5
   535     06F5  00F4               	movwf	EEPROM_Write_Page@len
   536     06F6  120A  118A  2682  120A  118A  	fcall	_EEPROM_Write_Page
   537     06FB                     l938:
   538                           
   539                           ;mian_1.c: 29:   _delay((unsigned long)((100)*(6000000/4000.0)));
   540     06FB  30C3               	movlw	195
   541     06FC  1283               	bcf	3,5	;RP0=0, select bank0
   542     06FD  1303               	bcf	3,6	;RP1=0, select bank0
   543     06FE  00A9               	movwf	??_main+1
   544     06FF  30CC               	movlw	204
   545     0700  00A8               	movwf	??_main
   546     0701                     u377:
   547     0701  0BA8               	decfsz	??_main,f
   548     0702  2F01               	goto	u377
   549     0703  0BA9               	decfsz	??_main+1,f
   550     0704  2F01               	goto	u377
   551     0705  0000               	nop
   552     0706                     l940:
   553     0706                     l942:
   554                           
   555                           ;mian_1.c: 31:      unsigned char data[5];;mian_1.c: 33:          TRISD=0X00;
   556     0706  1683               	bsf	3,5	;RP0=1, select bank1
   557     0707  1303               	bcf	3,6	;RP1=0, select bank1
   558     0708  0188               	clrf	8	;volatile
   559     0709                     l944:
   560                           
   561                           ;mian_1.c: 34:     EEPROM_Read_Page(Address,data,len);
   562     0709  3020               	movlw	32
   563     070A  00F1               	movwf	EEPROM_Read_Page@add
   564     070B  3000               	movlw	0
   565     070C  00F2               	movwf	EEPROM_Read_Page@add+1
   566     070D  302F               	movlw	(low (main@data| 0))& (0+255)
   567     070E  00F3               	movwf	EEPROM_Read_Page@data
   568     070F  3005               	movlw	5
   569     0710  00F4               	movwf	EEPROM_Read_Page@len
   570     0711  3000               	movlw	0
   571     0712  00F5               	movwf	EEPROM_Read_Page@len+1
   572     0713  120A  118A  271C  120A  118A  	fcall	_EEPROM_Read_Page
   573     0718                     l17:	
   574                           ;mian_1.c: 37:     while(1);
   575                           
   576     0718                     l18:
   577     0718  2F18               	goto	l17
   578     0719  120A  118A  2800   	ljmp	start
   579     071C                     __end_of_main:
   580                           
   581                           	psect	text1
   582     064A                     __ptext1:	
   583 ;; *************** function _I2C_Master_Init *****************
   584 ;; Defined at:
   585 ;;		line 7 in file "driver_1.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  baud            4    0[BANK0 ] const unsigned long 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   599 ;;      Params:         0       4       0       0       0
   600 ;;      Locals:         0       0       0       0       0
   601 ;;      Temps:          0       4       0       0       0
   602 ;;      Totals:         0       8       0       0       0
   603 ;;Total ram usage:        8 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; Hardware stack levels required when called: 1
   606 ;; This function calls:
   607 ;;		___lldiv
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613     064A                     _I2C_Master_Init:	
   614                           ;psect for function _I2C_Master_Init
   615                           
   616     064A                     l882:	
   617                           ;incstack = 0
   618                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   619                           
   620                           
   621                           ;driver_1.c: 7: void I2C_Master_Init(const unsigned long baud);driver_1.c: 8: {;driver_1
      +                          .c: 9:     SSPCON = 0b00101000;
   622     064A  3028               	movlw	40
   623     064B  1283               	bcf	3,5	;RP0=0, select bank0
   624     064C  1303               	bcf	3,6	;RP1=0, select bank0
   625     064D  0094               	movwf	20	;volatile
   626     064E                     l884:
   627                           
   628                           ;driver_1.c: 10:     SSPCON2 = 0;
   629     064E  1683               	bsf	3,5	;RP0=1, select bank1
   630     064F  1303               	bcf	3,6	;RP1=0, select bank1
   631     0650  0191               	clrf	17	;volatile
   632     0651                     l886:
   633                           
   634                           ;driver_1.c: 11:     SSPADD = (6000000/(4*baud))-1;
   635     0651  1283               	bcf	3,5	;RP0=0, select bank0
   636     0652  1303               	bcf	3,6	;RP1=0, select bank0
   637     0653  0820               	movf	I2C_Master_Init@baud,w
   638     0654  00A4               	movwf	??_I2C_Master_Init
   639     0655  0821               	movf	I2C_Master_Init@baud+1,w
   640     0656  00A5               	movwf	??_I2C_Master_Init+1
   641     0657  0822               	movf	I2C_Master_Init@baud+2,w
   642     0658  00A6               	movwf	??_I2C_Master_Init+2
   643     0659  0823               	movf	I2C_Master_Init@baud+3,w
   644     065A  00A7               	movwf	??_I2C_Master_Init+3
   645     065B  3002               	movlw	2
   646     065C                     u305:
   647     065C  1003               	clrc
   648     065D  0DA4               	rlf	??_I2C_Master_Init,f
   649     065E  0DA5               	rlf	??_I2C_Master_Init+1,f
   650     065F  0DA6               	rlf	??_I2C_Master_Init+2,f
   651     0660  0DA7               	rlf	??_I2C_Master_Init+3,f
   652     0661                     u300:
   653     0661  3EFF               	addlw	-1
   654     0662  1D03               	skipz
   655     0663  2E5C               	goto	u305
   656     0664  0827               	movf	??_I2C_Master_Init+3,w
   657     0665  00F3               	movwf	___lldiv@divisor+3
   658     0666  0826               	movf	??_I2C_Master_Init+2,w
   659     0667  00F2               	movwf	___lldiv@divisor+2
   660     0668  0825               	movf	??_I2C_Master_Init+1,w
   661     0669  00F1               	movwf	___lldiv@divisor+1
   662     066A  0824               	movf	??_I2C_Master_Init,w
   663     066B  00F0               	movwf	___lldiv@divisor
   664     066C  3000               	movlw	0
   665     066D  00F7               	movwf	___lldiv@dividend+3
   666     066E  305B               	movlw	91
   667     066F  00F6               	movwf	___lldiv@dividend+2
   668     0670  308D               	movlw	141
   669     0671  00F5               	movwf	___lldiv@dividend+1
   670     0672  3080               	movlw	128
   671     0673  00F4               	movwf	___lldiv@dividend
   672     0674  120A  118A  2778  120A  118A  	fcall	___lldiv
   673     0679  0870               	movf	?___lldiv,w
   674     067A  3EFF               	addlw	255
   675     067B  1683               	bsf	3,5	;RP0=1, select bank1
   676     067C  1303               	bcf	3,6	;RP1=0, select bank1
   677     067D  0093               	movwf	19	;volatile
   678     067E                     l888:
   679                           
   680                           ;driver_1.c: 12:     SSPSTAT = 0;
   681     067E  0194               	clrf	20	;volatile
   682     067F                     l890:
   683                           
   684                           ;driver_1.c: 13:     TRISC3 = 1;
   685     067F  1587               	bsf	7,3	;volatile
   686     0680                     l892:
   687                           
   688                           ;driver_1.c: 14:     TRISC4 = 1;
   689     0680  1607               	bsf	7,4	;volatile
   690     0681                     l53:
   691     0681  0008               	return
   692     0682                     __end_of_I2C_Master_Init:
   693                           
   694                           	psect	text2
   695     0778                     __ptext2:	
   696 ;; *************** function ___lldiv *****************
   697 ;; Defined at:
   698 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  divisor         4    0[COMMON] unsigned long 
   701 ;;  dividend        4    4[COMMON] unsigned long 
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  quotient        4    9[COMMON] unsigned long 
   704 ;;  counter         1   13[COMMON] unsigned char 
   705 ;; Return value:  Size  Location     Type
   706 ;;                  4    0[COMMON] unsigned long 
   707 ;; Registers used:
   708 ;;		wreg, status,2, status,0, btemp+1
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   714 ;;      Params:         8       0       0       0       0
   715 ;;      Locals:         5       0       0       0       0
   716 ;;      Temps:          1       0       0       0       0
   717 ;;      Totals:        14       0       0       0       0
   718 ;;Total ram usage:       14 bytes
   719 ;; Hardware stack levels used: 1
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_I2C_Master_Init
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727     0778                     ___lldiv:	
   728                           ;psect for function ___lldiv
   729                           
   730     0778                     l856:	
   731                           ;incstack = 0
   732                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
   733                           
   734     0778  3000               	movlw	0
   735     0779  00FC               	movwf	___lldiv@quotient+3
   736     077A  3000               	movlw	0
   737     077B  00FB               	movwf	___lldiv@quotient+2
   738     077C  3000               	movlw	0
   739     077D  00FA               	movwf	___lldiv@quotient+1
   740     077E  3000               	movlw	0
   741     077F  00F9               	movwf	___lldiv@quotient
   742     0780  0873               	movf	___lldiv@divisor+3,w
   743     0781  0472               	iorwf	___lldiv@divisor+2,w
   744     0782  0471               	iorwf	___lldiv@divisor+1,w
   745     0783  0470               	iorwf	___lldiv@divisor,w
   746     0784  1903               	skipnz
   747     0785  2F87               	goto	u231
   748     0786  2F88               	goto	u230
   749     0787                     u231:
   750     0787  2FD5               	goto	l878
   751     0788                     u230:
   752     0788                     l858:
   753     0788  01FD               	clrf	___lldiv@counter
   754     0789  0AFD               	incf	___lldiv@counter,f
   755     078A  2F98               	goto	l864
   756     078B                     l860:
   757     078B  3001               	movlw	1
   758     078C  00F8               	movwf	??___lldiv
   759     078D                     u245:
   760     078D  1003               	clrc
   761     078E  0DF0               	rlf	___lldiv@divisor,f
   762     078F  0DF1               	rlf	___lldiv@divisor+1,f
   763     0790  0DF2               	rlf	___lldiv@divisor+2,f
   764     0791  0DF3               	rlf	___lldiv@divisor+3,f
   765     0792  0BF8               	decfsz	??___lldiv,f
   766     0793  2F8D               	goto	u245
   767     0794                     l862:
   768     0794  3001               	movlw	1
   769     0795  00FF               	movwf	btemp+1
   770     0796  087F               	movf	btemp+1,w
   771     0797  07FD               	addwf	___lldiv@counter,f
   772     0798                     l864:
   773     0798  1FF3               	btfss	___lldiv@divisor+3,7
   774     0799  2F9B               	goto	u251
   775     079A  2F9C               	goto	u250
   776     079B                     u251:
   777     079B  2F8B               	goto	l860
   778     079C                     u250:
   779     079C                     l866:
   780     079C  3001               	movlw	1
   781     079D  00F8               	movwf	??___lldiv
   782     079E                     u265:
   783     079E  1003               	clrc
   784     079F  0DF9               	rlf	___lldiv@quotient,f
   785     07A0  0DFA               	rlf	___lldiv@quotient+1,f
   786     07A1  0DFB               	rlf	___lldiv@quotient+2,f
   787     07A2  0DFC               	rlf	___lldiv@quotient+3,f
   788     07A3  0BF8               	decfsz	??___lldiv,f
   789     07A4  2F9E               	goto	u265
   790     07A5                     l868:
   791     07A5  0873               	movf	___lldiv@divisor+3,w
   792     07A6  0277               	subwf	___lldiv@dividend+3,w
   793     07A7  1D03               	skipz
   794     07A8  2FB3               	goto	u275
   795     07A9  0872               	movf	___lldiv@divisor+2,w
   796     07AA  0276               	subwf	___lldiv@dividend+2,w
   797     07AB  1D03               	skipz
   798     07AC  2FB3               	goto	u275
   799     07AD  0871               	movf	___lldiv@divisor+1,w
   800     07AE  0275               	subwf	___lldiv@dividend+1,w
   801     07AF  1D03               	skipz
   802     07B0  2FB3               	goto	u275
   803     07B1  0870               	movf	___lldiv@divisor,w
   804     07B2  0274               	subwf	___lldiv@dividend,w
   805     07B3                     u275:
   806     07B3  1C03               	skipc
   807     07B4  2FB6               	goto	u271
   808     07B5  2FB7               	goto	u270
   809     07B6                     u271:
   810     07B6  2FC6               	goto	l874
   811     07B7                     u270:
   812     07B7                     l870:
   813     07B7  0870               	movf	___lldiv@divisor,w
   814     07B8  02F4               	subwf	___lldiv@dividend,f
   815     07B9  0871               	movf	___lldiv@divisor+1,w
   816     07BA  1C03               	skipc
   817     07BB  0F71               	incfsz	___lldiv@divisor+1,w
   818     07BC  02F5               	subwf	___lldiv@dividend+1,f
   819     07BD  0872               	movf	___lldiv@divisor+2,w
   820     07BE  1C03               	skipc
   821     07BF  0F72               	incfsz	___lldiv@divisor+2,w
   822     07C0  02F6               	subwf	___lldiv@dividend+2,f
   823     07C1  0873               	movf	___lldiv@divisor+3,w
   824     07C2  1C03               	skipc
   825     07C3  0F73               	incfsz	___lldiv@divisor+3,w
   826     07C4  02F7               	subwf	___lldiv@dividend+3,f
   827     07C5                     l872:
   828     07C5  1479               	bsf	___lldiv@quotient,0
   829     07C6                     l874:
   830     07C6  3001               	movlw	1
   831     07C7                     u285:
   832     07C7  1003               	clrc
   833     07C8  0CF3               	rrf	___lldiv@divisor+3,f
   834     07C9  0CF2               	rrf	___lldiv@divisor+2,f
   835     07CA  0CF1               	rrf	___lldiv@divisor+1,f
   836     07CB  0CF0               	rrf	___lldiv@divisor,f
   837     07CC  3EFF               	addlw	-1
   838     07CD  1D03               	skipz
   839     07CE  2FC7               	goto	u285
   840     07CF                     l876:
   841     07CF  3001               	movlw	1
   842     07D0  02FD               	subwf	___lldiv@counter,f
   843     07D1  1D03               	btfss	3,2
   844     07D2  2FD4               	goto	u291
   845     07D3  2FD5               	goto	u290
   846     07D4                     u291:
   847     07D4  2F9C               	goto	l866
   848     07D5                     u290:
   849     07D5                     l878:
   850     07D5  087C               	movf	___lldiv@quotient+3,w
   851     07D6  00F3               	movwf	?___lldiv+3
   852     07D7  087B               	movf	___lldiv@quotient+2,w
   853     07D8  00F2               	movwf	?___lldiv+2
   854     07D9  087A               	movf	___lldiv@quotient+1,w
   855     07DA  00F1               	movwf	?___lldiv+1
   856     07DB  0879               	movf	___lldiv@quotient,w
   857     07DC  00F0               	movwf	?___lldiv
   858     07DD                     l238:
   859     07DD  0008               	return
   860     07DE                     __end_of___lldiv:
   861                           
   862                           	psect	text3
   863     0682                     __ptext3:	
   864 ;; *************** function _EEPROM_Write_Page *****************
   865 ;; Defined at:
   866 ;;		line 85 in file "driver_1.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  add             2    1[COMMON] unsigned int 
   869 ;;  data            1    3[COMMON] PTR unsigned char 
   870 ;;		 -> main@Data(5), 
   871 ;;  len             1    4[COMMON] unsigned char 
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  i               2    7[COMMON] unsigned int 
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   883 ;;      Params:         4       0       0       0       0
   884 ;;      Locals:         2       0       0       0       0
   885 ;;      Temps:          2       0       0       0       0
   886 ;;      Totals:         8       0       0       0       0
   887 ;;Total ram usage:        8 bytes
   888 ;; Hardware stack levels used: 1
   889 ;; Hardware stack levels required when called: 2
   890 ;; This function calls:
   891 ;;		_I2C_Master_RepeatedStart
   892 ;;		_I2C_Master_Start
   893 ;;		_I2C_Master_Stop
   894 ;;		_I2C_Master_Write
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900     0682                     _EEPROM_Write_Page:	
   901                           ;psect for function _EEPROM_Write_Page
   902                           
   903     0682                     l894:	
   904                           ;incstack = 0
   905                           ; Regs used in _EEPROM_Write_Page: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   906                           
   907                           
   908                           ;driver_1.c: 85: void EEPROM_Write_Page(unsigned int add, unsigned char* data, unsigned 
      +                          char len);driver_1.c: 86: {;driver_1.c: 87:    I2C_Master_Start();
   909     0682  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Start
   910                           
   911                           ;driver_1.c: 90:    while(I2C_Master_Write(0xA0))
   912     0687  2E8D               	goto	l95
   913     0688                     l896:
   914                           
   915                           ;driver_1.c: 91:      I2C_Master_RepeatedStart();
   916     0688  120A  118A  25DE  120A  118A  	fcall	_I2C_Master_RepeatedStart
   917     068D                     l95:
   918                           
   919                           ;driver_1.c: 90:    while(I2C_Master_Write(0xA0))
   920     068D  30A0               	movlw	160
   921     068E  120A  118A  261E  120A  118A  	fcall	_I2C_Master_Write
   922     0693  3A00               	xorlw	0
   923     0694  1D03               	skipz
   924     0695  2E97               	goto	u311
   925     0696  2E98               	goto	u310
   926     0697                     u311:
   927     0697  2E88               	goto	l896
   928     0698                     u310:
   929     0698                     l898:
   930                           
   931                           ;driver_1.c: 93:    I2C_Master_Write(add>>8);
   932     0698  0872               	movf	EEPROM_Write_Page@add+1,w
   933     0699  120A  118A  261E  120A  118A  	fcall	_I2C_Master_Write
   934                           
   935                           ;driver_1.c: 94:    I2C_Master_Write((unsigned char)add);
   936     069E  0871               	movf	EEPROM_Write_Page@add,w
   937     069F  120A  118A  261E  120A  118A  	fcall	_I2C_Master_Write
   938     06A4                     l900:
   939                           
   940                           ;driver_1.c: 95:    for(unsigned int i=0; i<len; i++)
   941     06A4  01F7               	clrf	EEPROM_Write_Page@i
   942     06A5  01F8               	clrf	EEPROM_Write_Page@i+1
   943     06A6  2EB9               	goto	l906
   944     06A7                     l902:
   945                           
   946                           ;driver_1.c: 96:        I2C_Master_Write(data[i]);
   947     06A7  0877               	movf	EEPROM_Write_Page@i,w
   948     06A8  0773               	addwf	EEPROM_Write_Page@data,w
   949     06A9  00F5               	movwf	??_EEPROM_Write_Page
   950     06AA  0875               	movf	??_EEPROM_Write_Page,w
   951     06AB  0084               	movwf	4
   952     06AC  1383               	bcf	3,7	;select IRP bank0
   953     06AD  0800               	movf	0,w
   954     06AE  120A  118A  261E  120A  118A  	fcall	_I2C_Master_Write
   955     06B3                     l904:
   956     06B3  3001               	movlw	1
   957     06B4  07F7               	addwf	EEPROM_Write_Page@i,f
   958     06B5  1803               	skipnc
   959     06B6  0AF8               	incf	EEPROM_Write_Page@i+1,f
   960     06B7  3000               	movlw	0
   961     06B8  07F8               	addwf	EEPROM_Write_Page@i+1,f
   962     06B9                     l906:
   963     06B9  0874               	movf	EEPROM_Write_Page@len,w
   964     06BA  00F5               	movwf	??_EEPROM_Write_Page
   965     06BB  01F6               	clrf	??_EEPROM_Write_Page+1
   966     06BC  0876               	movf	??_EEPROM_Write_Page+1,w
   967     06BD  0278               	subwf	EEPROM_Write_Page@i+1,w
   968     06BE  1D03               	skipz
   969     06BF  2EC2               	goto	u325
   970     06C0  0875               	movf	??_EEPROM_Write_Page,w
   971     06C1  0277               	subwf	EEPROM_Write_Page@i,w
   972     06C2                     u325:
   973     06C2  1C03               	skipc
   974     06C3  2EC5               	goto	u321
   975     06C4  2EC6               	goto	u320
   976     06C5                     u321:
   977     06C5  2EA7               	goto	l902
   978     06C6                     u320:
   979     06C6                     l908:
   980                           
   981                           ;driver_1.c: 97:    I2C_Master_Stop();
   982     06C6  120A  118A  25F0  120A  118A  	fcall	_I2C_Master_Stop
   983     06CB                     l101:
   984     06CB  0008               	return
   985     06CC                     __end_of_EEPROM_Write_Page:
   986                           
   987                           	psect	text4
   988     071C                     __ptext4:	
   989 ;; *************** function _EEPROM_Read_Page *****************
   990 ;; Defined at:
   991 ;;		line 123 in file "driver_1.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  add             2    1[COMMON] unsigned int 
   994 ;;  data            1    3[COMMON] PTR unsigned char 
   995 ;;		 -> main@data(5), 
   996 ;;  len             2    4[COMMON] unsigned int 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  i               2    7[COMMON] unsigned int 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         5       0       0       0       0
  1009 ;;      Locals:         2       0       0       0       0
  1010 ;;      Temps:          1       0       0       0       0
  1011 ;;      Totals:         8       0       0       0       0
  1012 ;;Total ram usage:        8 bytes
  1013 ;; Hardware stack levels used: 1
  1014 ;; Hardware stack levels required when called: 2
  1015 ;; This function calls:
  1016 ;;		_I2C_ACK
  1017 ;;		_I2C_Master_RepeatedStart
  1018 ;;		_I2C_Master_Start
  1019 ;;		_I2C_Master_Stop
  1020 ;;		_I2C_Master_Write
  1021 ;;		_I2C_NACK
  1022 ;;		_I2C_Read_Byte
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028     071C                     _EEPROM_Read_Page:	
  1029                           ;psect for function _EEPROM_Read_Page
  1030                           
  1031     071C                     l910:	
  1032                           ;incstack = 0
  1033                           ; Regs used in _EEPROM_Read_Page: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1034                           
  1035                           
  1036                           ;driver_1.c: 123: void EEPROM_Read_Page(unsigned int add, unsigned char* data, unsigned 
      +                          int len);driver_1.c: 124: {;driver_1.c: 125:    I2C_Master_Start();
  1037     071C  120A  118A  25E7  120A  118A  	fcall	_I2C_Master_Start
  1038                           
  1039                           ;driver_1.c: 128:    while(I2C_Master_Write(0xA0))
  1040     0721  2F27               	goto	l110
  1041     0722                     l912:
  1042                           
  1043                           ;driver_1.c: 129:      I2C_Master_RepeatedStart();
  1044     0722  120A  118A  25DE  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1045     0727                     l110:
  1046                           
  1047                           ;driver_1.c: 128:    while(I2C_Master_Write(0xA0))
  1048     0727  30A0               	movlw	160
  1049     0728  120A  118A  261E  120A  118A  	fcall	_I2C_Master_Write
  1050     072D  3A00               	xorlw	0
  1051     072E  1D03               	skipz
  1052     072F  2F31               	goto	u331
  1053     0730  2F32               	goto	u330
  1054     0731                     u331:
  1055     0731  2F22               	goto	l912
  1056     0732                     u330:
  1057     0732                     l914:
  1058                           
  1059                           ;driver_1.c: 131:    I2C_Master_Write(add>>8);
  1060     0732  0872               	movf	EEPROM_Read_Page@add+1,w
  1061     0733  120A  118A  261E  120A  118A  	fcall	_I2C_Master_Write
  1062                           
  1063                           ;driver_1.c: 132:    I2C_Master_Write((unsigned char)add);
  1064     0738  0871               	movf	EEPROM_Read_Page@add,w
  1065     0739  120A  118A  261E  120A  118A  	fcall	_I2C_Master_Write
  1066                           
  1067                           ;driver_1.c: 133:    I2C_Master_RepeatedStart();
  1068     073E  120A  118A  25DE  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1069                           
  1070                           ;driver_1.c: 134:    I2C_Master_Write(0xA1);
  1071     0743  30A1               	movlw	161
  1072     0744  120A  118A  261E  120A  118A  	fcall	_I2C_Master_Write
  1073     0749                     l916:
  1074                           
  1075                           ;driver_1.c: 135:    for(unsigned int i=0; i<len; i++)
  1076     0749  01F7               	clrf	EEPROM_Read_Page@i
  1077     074A  01F8               	clrf	EEPROM_Read_Page@i+1
  1078     074B  2F63               	goto	l924
  1079     074C                     l918:
  1080                           
  1081                           ;driver_1.c: 136:    {;driver_1.c: 137:        data[i] = I2C_Read_Byte();
  1082     074C  0877               	movf	EEPROM_Read_Page@i,w
  1083     074D  0773               	addwf	EEPROM_Read_Page@data,w
  1084     074E  00F6               	movwf	??_EEPROM_Read_Page
  1085     074F  0876               	movf	??_EEPROM_Read_Page,w
  1086     0750  0084               	movwf	4
  1087     0751  120A  118A  2633  120A  118A  	fcall	_I2C_Read_Byte
  1088     0756  1383               	bcf	3,7	;select IRP bank0
  1089     0757  0080               	movwf	0
  1090     0758                     l920:
  1091                           
  1092                           ;driver_1.c: 139:       I2C_ACK();
  1093     0758  120A  118A  25F9  120A  118A  	fcall	_I2C_ACK
  1094     075D                     l922:
  1095                           
  1096                           ;driver_1.c: 140:    }
  1097     075D  3001               	movlw	1
  1098     075E  07F7               	addwf	EEPROM_Read_Page@i,f
  1099     075F  1803               	skipnc
  1100     0760  0AF8               	incf	EEPROM_Read_Page@i+1,f
  1101     0761  3000               	movlw	0
  1102     0762  07F8               	addwf	EEPROM_Read_Page@i+1,f
  1103     0763                     l924:
  1104     0763  0875               	movf	EEPROM_Read_Page@len+1,w
  1105     0764  0278               	subwf	EEPROM_Read_Page@i+1,w
  1106     0765  1D03               	skipz
  1107     0766  2F69               	goto	u345
  1108     0767  0874               	movf	EEPROM_Read_Page@len,w
  1109     0768  0277               	subwf	EEPROM_Read_Page@i,w
  1110     0769                     u345:
  1111     0769  1C03               	skipc
  1112     076A  2F6C               	goto	u341
  1113     076B  2F6D               	goto	u340
  1114     076C                     u341:
  1115     076C  2F4C               	goto	l918
  1116     076D                     u340:
  1117     076D                     l926:
  1118                           
  1119                           ;driver_1.c: 141:    I2C_NACK();
  1120     076D  120A  118A  2605  120A  118A  	fcall	_I2C_NACK
  1121                           
  1122                           ;driver_1.c: 142:    I2C_Master_Stop();
  1123     0772  120A  118A  25F0  120A  118A  	fcall	_I2C_Master_Stop
  1124     0777                     l116:
  1125     0777  0008               	return
  1126     0778                     __end_of_EEPROM_Read_Page:
  1127                           
  1128                           	psect	text5
  1129     0633                     __ptext5:	
  1130 ;; *************** function _I2C_Read_Byte *****************
  1131 ;; Defined at:
  1132 ;;		line 43 in file "driver_1.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      unsigned char 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0
  1149 ;;      Totals:         0       0       0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; Hardware stack levels required when called: 1
  1153 ;; This function calls:
  1154 ;;		_I2C_Master_Wait
  1155 ;; This function is called by:
  1156 ;;		_EEPROM_Read_Page
  1157 ;;		_EEPROM_Read
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161     0633                     _I2C_Read_Byte:	
  1162                           ;psect for function _I2C_Read_Byte
  1163                           
  1164     0633                     l834:	
  1165                           ;incstack = 0
  1166                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  1167                           
  1168                           
  1169                           ;driver_1.c: 46:  I2C_Master_Wait();
  1170     0633  120A  118A  2611  120A  118A  	fcall	_I2C_Master_Wait
  1171     0638                     l836:
  1172                           
  1173                           ;driver_1.c: 47:     RCEN = 1;
  1174     0638  1683               	bsf	3,5	;RP0=1, select bank1
  1175     0639  1303               	bcf	3,6	;RP1=0, select bank1
  1176     063A  1591               	bsf	17,3	;volatile
  1177     063B                     l77:	
  1178                           ;driver_1.c: 48:  while(!SSPIF);
  1179                           
  1180     063B  1283               	bcf	3,5	;RP0=0, select bank0
  1181     063C  1D8C               	btfss	12,3	;volatile
  1182     063D  2E3F               	goto	u221
  1183     063E  2E40               	goto	u220
  1184     063F                     u221:
  1185     063F  2E3B               	goto	l77
  1186     0640                     u220:
  1187     0640                     l79:
  1188                           
  1189                           ;driver_1.c: 49:  SSPIF = 0;
  1190     0640  118C               	bcf	12,3	;volatile
  1191     0641                     l838:
  1192                           
  1193                           ;driver_1.c: 50:     I2C_Master_Wait();
  1194     0641  120A  118A  2611  120A  118A  	fcall	_I2C_Master_Wait
  1195     0646                     l840:
  1196                           
  1197                           ;driver_1.c: 51:     return SSPBUF;
  1198     0646  1283               	bcf	3,5	;RP0=0, select bank0
  1199     0647  1303               	bcf	3,6	;RP1=0, select bank0
  1200     0648  0813               	movf	19,w	;volatile
  1201     0649                     l80:
  1202     0649  0008               	return
  1203     064A                     __end_of_I2C_Read_Byte:
  1204                           
  1205                           	psect	text6
  1206     0605                     __ptext6:	
  1207 ;; *************** function _I2C_NACK *****************
  1208 ;; Defined at:
  1209 ;;		line 59 in file "driver_1.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0, pclath, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0
  1226 ;;      Totals:         0       0       0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used: 1
  1229 ;; Hardware stack levels required when called: 1
  1230 ;; This function calls:
  1231 ;;		_I2C_Master_Wait
  1232 ;; This function is called by:
  1233 ;;		_EEPROM_Read_Page
  1234 ;;		_EEPROM_Read
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238     0605                     _I2C_NACK:	
  1239                           ;psect for function _I2C_NACK
  1240                           
  1241     0605                     l850:	
  1242                           ;incstack = 0
  1243                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
  1244                           
  1245                           
  1246                           ;driver_1.c: 61:  ACKDT = 1;
  1247     0605  1683               	bsf	3,5	;RP0=1, select bank1
  1248     0606  1303               	bcf	3,6	;RP1=0, select bank1
  1249     0607  1691               	bsf	17,5	;volatile
  1250     0608                     l852:
  1251                           
  1252                           ;driver_1.c: 62:     I2C_Master_Wait();
  1253     0608  120A  118A  2611  120A  118A  	fcall	_I2C_Master_Wait
  1254     060D                     l854:
  1255                           
  1256                           ;driver_1.c: 63:  ACKEN = 1;
  1257     060D  1683               	bsf	3,5	;RP0=1, select bank1
  1258     060E  1303               	bcf	3,6	;RP1=0, select bank1
  1259     060F  1611               	bsf	17,4	;volatile
  1260     0610                     l86:
  1261     0610  0008               	return
  1262     0611                     __end_of_I2C_NACK:
  1263                           
  1264                           	psect	text7
  1265     061E                     __ptext7:	
  1266 ;; *************** function _I2C_Master_Write *****************
  1267 ;; Defined at:
  1268 ;;		line 35 in file "driver_1.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  data            1    wreg     unsigned char 
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;  data            1    0[COMMON] unsigned char 
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      unsigned char 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0, pclath, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1282 ;;      Params:         0       0       0       0       0
  1283 ;;      Locals:         1       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0
  1285 ;;      Totals:         1       0       0       0       0
  1286 ;;Total ram usage:        1 bytes
  1287 ;; Hardware stack levels used: 1
  1288 ;; Hardware stack levels required when called: 1
  1289 ;; This function calls:
  1290 ;;		_I2C_Master_Wait
  1291 ;; This function is called by:
  1292 ;;		_EEPROM_Write_Page
  1293 ;;		_EEPROM_Read_Page
  1294 ;;		_EEPROM_Write
  1295 ;;		_EEPROM_Read
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299     061E                     _I2C_Master_Write:	
  1300                           ;psect for function _I2C_Master_Write
  1301                           
  1302                           
  1303                           ;incstack = 0
  1304                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1305                           ;I2C_Master_Write@data stored from wreg
  1306     061E  00F0               	movwf	I2C_Master_Write@data
  1307     061F                     l826:
  1308                           
  1309                           ;driver_1.c: 35: unsigned char I2C_Master_Write(unsigned char data);driver_1.c: 36: {;dr
      +                          iver_1.c: 37:     I2C_Master_Wait();
  1310     061F  120A  118A  2611  120A  118A  	fcall	_I2C_Master_Wait
  1311     0624                     l828:
  1312                           
  1313                           ;driver_1.c: 38:     SSPBUF = data;
  1314     0624  0870               	movf	I2C_Master_Write@data,w
  1315     0625  1283               	bcf	3,5	;RP0=0, select bank0
  1316     0626  1303               	bcf	3,6	;RP1=0, select bank0
  1317     0627  0093               	movwf	19	;volatile
  1318     0628                     l71:	
  1319                           ;driver_1.c: 39:     while(!SSPIF);
  1320                           
  1321     0628  1D8C               	btfss	12,3	;volatile
  1322     0629  2E2B               	goto	u211
  1323     062A  2E2C               	goto	u210
  1324     062B                     u211:
  1325     062B  2E28               	goto	l71
  1326     062C                     u210:
  1327     062C                     l73:
  1328                           
  1329                           ;driver_1.c: 40:  SSPIF = 0;
  1330     062C  118C               	bcf	12,3	;volatile
  1331     062D                     l830:
  1332                           
  1333                           ;driver_1.c: 41:     return ACKSTAT;
  1334     062D  3000               	movlw	0
  1335     062E  1683               	bsf	3,5	;RP0=1, select bank1
  1336     062F  1303               	bcf	3,6	;RP1=0, select bank1
  1337     0630  1B11               	btfsc	17,6	;volatile
  1338     0631  3001               	movlw	1
  1339     0632                     l74:
  1340     0632  0008               	return
  1341     0633                     __end_of_I2C_Master_Write:
  1342                           
  1343                           	psect	text8
  1344     05F0                     __ptext8:	
  1345 ;; *************** function _I2C_Master_Stop *****************
  1346 ;; Defined at:
  1347 ;;		line 30 in file "driver_1.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2, status,0, pclath, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1361 ;;      Params:         0       0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0
  1364 ;;      Totals:         0       0       0       0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; Hardware stack levels required when called: 1
  1368 ;; This function calls:
  1369 ;;		_I2C_Master_Wait
  1370 ;; This function is called by:
  1371 ;;		_EEPROM_Write_Page
  1372 ;;		_EEPROM_Read_Page
  1373 ;;		_EEPROM_Write
  1374 ;;		_EEPROM_Read
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378     05F0                     _I2C_Master_Stop:	
  1379                           ;psect for function _I2C_Master_Stop
  1380                           
  1381     05F0                     l822:	
  1382                           ;incstack = 0
  1383                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1384                           
  1385                           
  1386                           ;driver_1.c: 32:     I2C_Master_Wait();
  1387     05F0  120A  118A  2611  120A  118A  	fcall	_I2C_Master_Wait
  1388     05F5                     l824:
  1389                           
  1390                           ;driver_1.c: 33:     PEN = 1;
  1391     05F5  1683               	bsf	3,5	;RP0=1, select bank1
  1392     05F6  1303               	bcf	3,6	;RP1=0, select bank1
  1393     05F7  1511               	bsf	17,2	;volatile
  1394     05F8                     l68:
  1395     05F8  0008               	return
  1396     05F9                     __end_of_I2C_Master_Stop:
  1397                           
  1398                           	psect	text9
  1399     05E7                     __ptext9:	
  1400 ;; *************** function _I2C_Master_Start *****************
  1401 ;; Defined at:
  1402 ;;		line 20 in file "driver_1.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0, pclath, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0
  1419 ;;      Totals:         0       0       0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; Hardware stack levels required when called: 1
  1423 ;; This function calls:
  1424 ;;		_I2C_Master_Wait
  1425 ;; This function is called by:
  1426 ;;		_EEPROM_Write_Page
  1427 ;;		_EEPROM_Read_Page
  1428 ;;		_EEPROM_Write
  1429 ;;		_EEPROM_Read
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433     05E7                     _I2C_Master_Start:	
  1434                           ;psect for function _I2C_Master_Start
  1435                           
  1436     05E7                     l814:	
  1437                           ;incstack = 0
  1438                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1439                           
  1440                           
  1441                           ;driver_1.c: 22:     I2C_Master_Wait();
  1442     05E7  120A  118A  2611  120A  118A  	fcall	_I2C_Master_Wait
  1443     05EC                     l816:
  1444                           
  1445                           ;driver_1.c: 23:     SEN = 1;
  1446     05EC  1683               	bsf	3,5	;RP0=1, select bank1
  1447     05ED  1303               	bcf	3,6	;RP1=0, select bank1
  1448     05EE  1411               	bsf	17,0	;volatile
  1449     05EF                     l62:
  1450     05EF  0008               	return
  1451     05F0                     __end_of_I2C_Master_Start:
  1452                           
  1453                           	psect	text10
  1454     05DE                     __ptext10:	
  1455 ;; *************** function _I2C_Master_RepeatedStart *****************
  1456 ;; Defined at:
  1457 ;;		line 25 in file "driver_1.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0, pclath, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1471 ;;      Params:         0       0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0
  1474 ;;      Totals:         0       0       0       0       0
  1475 ;;Total ram usage:        0 bytes
  1476 ;; Hardware stack levels used: 1
  1477 ;; Hardware stack levels required when called: 1
  1478 ;; This function calls:
  1479 ;;		_I2C_Master_Wait
  1480 ;; This function is called by:
  1481 ;;		_EEPROM_Write_Page
  1482 ;;		_EEPROM_Read_Page
  1483 ;;		_EEPROM_Write
  1484 ;;		_EEPROM_Read
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488     05DE                     _I2C_Master_RepeatedStart:	
  1489                           ;psect for function _I2C_Master_RepeatedStart
  1490                           
  1491     05DE                     l818:	
  1492                           ;incstack = 0
  1493                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  1494                           
  1495                           
  1496                           ;driver_1.c: 27:     I2C_Master_Wait();
  1497     05DE  120A  118A  2611  120A  118A  	fcall	_I2C_Master_Wait
  1498     05E3                     l820:
  1499                           
  1500                           ;driver_1.c: 28:     RSEN = 1;
  1501     05E3  1683               	bsf	3,5	;RP0=1, select bank1
  1502     05E4  1303               	bcf	3,6	;RP1=0, select bank1
  1503     05E5  1491               	bsf	17,1	;volatile
  1504     05E6                     l65:
  1505     05E6  0008               	return
  1506     05E7                     __end_of_I2C_Master_RepeatedStart:
  1507                           
  1508                           	psect	text11
  1509     05F9                     __ptext11:	
  1510 ;; *************** function _I2C_ACK *****************
  1511 ;; Defined at:
  1512 ;;		line 53 in file "driver_1.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, pclath, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0
  1529 ;;      Totals:         0       0       0       0       0
  1530 ;;Total ram usage:        0 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; Hardware stack levels required when called: 1
  1533 ;; This function calls:
  1534 ;;		_I2C_Master_Wait
  1535 ;; This function is called by:
  1536 ;;		_EEPROM_Read_Page
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540     05F9                     _I2C_ACK:	
  1541                           ;psect for function _I2C_ACK
  1542                           
  1543     05F9                     l844:	
  1544                           ;incstack = 0
  1545                           ; Regs used in _I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
  1546                           
  1547                           
  1548                           ;driver_1.c: 55:  ACKDT = 0;
  1549     05F9  1683               	bsf	3,5	;RP0=1, select bank1
  1550     05FA  1303               	bcf	3,6	;RP1=0, select bank1
  1551     05FB  1291               	bcf	17,5	;volatile
  1552     05FC                     l846:
  1553                           
  1554                           ;driver_1.c: 56:  I2C_Master_Wait();
  1555     05FC  120A  118A  2611  120A  118A  	fcall	_I2C_Master_Wait
  1556     0601                     l848:
  1557                           
  1558                           ;driver_1.c: 57:     ACKEN = 1;
  1559     0601  1683               	bsf	3,5	;RP0=1, select bank1
  1560     0602  1303               	bcf	3,6	;RP1=0, select bank1
  1561     0603  1611               	bsf	17,4	;volatile
  1562     0604                     l83:
  1563     0604  0008               	return
  1564     0605                     __end_of_I2C_ACK:
  1565                           
  1566                           	psect	text12
  1567     0611                     __ptext12:	
  1568 ;; *************** function _I2C_Master_Wait *****************
  1569 ;; Defined at:
  1570 ;;		line 16 in file "driver_1.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1584 ;;      Params:         0       0       0       0       0
  1585 ;;      Locals:         0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0
  1587 ;;      Totals:         0       0       0       0       0
  1588 ;;Total ram usage:        0 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_I2C_Master_Start
  1594 ;;		_I2C_Master_RepeatedStart
  1595 ;;		_I2C_Master_Stop
  1596 ;;		_I2C_Master_Write
  1597 ;;		_I2C_Read_Byte
  1598 ;;		_I2C_ACK
  1599 ;;		_I2C_NACK
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603     0611                     _I2C_Master_Wait:	
  1604                           ;psect for function _I2C_Master_Wait
  1605                           
  1606     0611                     l810:	
  1607                           ;incstack = 0
  1608                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1609                           
  1610     0611                     l56:	
  1611                           ;driver_1.c: 18:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1612                           
  1613     0611  1683               	bsf	3,5	;RP0=1, select bank1
  1614     0612  1303               	bcf	3,6	;RP1=0, select bank1
  1615     0613  1914               	btfsc	20,2	;volatile
  1616     0614  2E16               	goto	u191
  1617     0615  2E17               	goto	u190
  1618     0616                     u191:
  1619     0616  2E11               	goto	l56
  1620     0617                     u190:
  1621     0617                     l812:
  1622     0617  0811               	movf	17,w	;volatile
  1623     0618  391F               	andlw	31
  1624     0619  1D03               	btfss	3,2
  1625     061A  2E1C               	goto	u201
  1626     061B  2E1D               	goto	u200
  1627     061C                     u201:
  1628     061C  2E11               	goto	l56
  1629     061D                     u200:
  1630     061D                     l59:
  1631     061D  0008               	return
  1632     061E                     __end_of_I2C_Master_Wait:
  1633     007E                     btemp	set	126	;btemp
  1634     007E                     wtemp0	set	126
  1635                           
  1636                           	psect	config
  1637                           
  1638                           ;Config register CONFIG @ 0x2007
  1639                           ;	Oscillator Selection bits
  1640                           ;	FOSC = EXTRC, RC oscillator
  1641                           ;	Watchdog Timer Enable bit
  1642                           ;	WDTE = OFF, WDT disabled
  1643                           ;	Power-up Timer Enable bit
  1644                           ;	PWRTE = OFF, PWRT disabled
  1645                           ;	Brown-out Reset Enable bit
  1646                           ;	BOREN = OFF, BOR disabled
  1647                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1648                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1649                           ;	Data EEPROM Memory Code Protection bit
  1650                           ;	CPD = OFF, Data EEPROM code protection off
  1651                           ;	Flash Program Memory Write Enable bits
  1652                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1653                           ;	In-Circuit Debugger Mode bit
  1654                           ;	DEBUG = 0x1, unprogrammed default
  1655                           ;	Flash Program Memory Code Protection bit
  1656                           ;	CP = OFF, Code protection off
  1657     2007                     	org	8199
  1658     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    EEPROM_Read_Page@data	PTR unsigned char  size(1) Largest target is 5
		 -> main@data(BANK0[5]), 

    EEPROM_Write_Page@data	PTR unsigned char  size(1) Largest target is 5
		 -> main@Data(BANK0[5]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _EEPROM_Write_Page->_I2C_Master_Write
    _EEPROM_Read_Page->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    1319
                                              8 BANK0     12    12      0
                   _EEPROM_Read_Page
                  _EEPROM_Write_Page
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Page                                    8     4      4     384
                                              1 COMMON     8     4      4
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Page                                     8     3      5     384
                                              1 COMMON     8     3      5
                            _I2C_ACK
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_NACK                                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_ACK                                              0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read_Page
     _I2C_ACK
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_NACK
       _I2C_Master_Wait
     _I2C_Read_Byte
       _I2C_Master_Wait
   _EEPROM_Write_Page
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _I2C_Master_Init
     ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      19       5       31.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      27      12        0.0%
ABS                  0      0      27       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Jun 08 13:16:59 2024

                              l17 0718                                l18 0718                                l53 0681  
                              l62 05EF                                l71 0628                                l56 0611  
                              l80 0649                                l65 05E6                                l73 062C  
                              l74 0632                                l59 061D                                l83 0604  
                              l68 05F8                                l77 063B                                l86 0610  
                              l79 0640                                l95 068D                               l101 06CB  
                             l110 0727                               l116 0777                               l238 07DD  
                             l810 0611                               l812 0617                               l820 05E3  
                             l900 06A4                               l814 05E7                               l822 05F0  
                             l830 062D                               l910 071C                               l902 06A7  
                             l816 05EC                               l824 05F5                               l840 0646  
                             l920 0758                               l912 0722                               l904 06B3  
                             l818 05DE                               l826 061F                               l850 0605  
                             l834 0633                               l922 075D                               l914 0732  
                             l906 06B9                               l930 06DB                               l844 05F9  
                             l828 0624                               l852 0608                               l836 0638  
                             l924 0763                               l916 0749                               l908 06C6  
                             l860 078B                               l940 0706                               l932 06DB  
                             l846 05FC                               l854 060D                               l838 0641  
                             l926 076D                               l918 074C                               l870 07B7  
                             l862 0794                               l942 0706                               l934 06EE  
                             l848 0601                               l872 07C5                               l864 0798  
                             l856 0778                               l944 0709                               l936 06EE  
                             l928 06CC                               l874 07C6                               l866 079C  
                             l858 0788                               l890 067F                               l882 064A  
                             l938 06FB                               l876 07CF                               l868 07A5  
                             l892 0680                               l884 064E                               l894 0682  
                             l878 07D5                               l886 0651                               l896 0688  
                             l888 067E                               l898 0698                               u200 061D  
                             u201 061C                               u210 062C                               u211 062B  
                             u220 0640                               u300 0661                               u221 063F  
                             u310 0698                               u230 0788                               u311 0697  
                             u231 0787                               u320 06C6                               u321 06C5  
                             u305 065C                               u330 0732                               u250 079C  
                             u331 0731                               u251 079B                               u340 076D  
                             u341 076C                               u325 06C2                               u245 078D  
                             u190 0617                               u270 07B7                               u191 0616  
                             u271 07B6                               _PEN 048A                               u345 0769  
                             u265 079E                               u290 07D5                               u291 07D4  
                             u275 07B3                               u285 07C7                               u377 0701  
                             _SEN 0488                   __end_of_I2C_ACK 0605                               fsr0 0004  
                             indf 0000         __end_of_EEPROM_Write_Page 06CC                              _RCEN 048B  
                            _RSEN 0489                  __end_of_I2C_NACK 0611  __end_of_I2C_Master_RepeatedStart 05E7  
                            _main 06CC                              btemp 007E                              start 0000  
            EEPROM_Write_Page@add 0071              EEPROM_Write_Page@len 0074                  ?_I2C_Master_Init 0020  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_main 0070  
                           _ACKEN 048C                             _ACKDT 048D                   __end_of___lldiv 07DE  
                           _TRISD 0088                             _SSPIF 0063                             status 0003  
                           wtemp0 007E                   __initialization 07DE                      __end_of_main 071C  
                       ??_I2C_ACK 0070          __end_of_EEPROM_Read_Page 0778                            ??_main 0028  
           EEPROM_Write_Page@data 0073                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070  
              ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0070                            _SSPADD 0093  
                          _TRISC3 043B                            _TRISC4 043C                            _SSPCON 0014  
                          _SSPBUF 0013          _I2C_Master_RepeatedStart 05DE                     _I2C_Read_Byte 0633  
                       ??___lldiv 0078                         ?_I2C_NACK 0070           __end_of__initialization 07FC  
                  ?_I2C_Read_Byte 0070                    __pcstackCOMMON 0070                      __pidataBANK0 05D9  
                      ??_I2C_NACK 0070                        __pmaintext 06CC                           _I2C_ACK 05F9  
                         _ACKSTAT 048E                           _SSPCON2 0091                           _SSPSTAT 0094  
                 ??_I2C_Read_Byte 0070                           ___lldiv 0778                           __ptext1 064A  
                         __ptext2 0778                           __ptext3 0682                           __ptext4 071C  
                         __ptext5 0633                           __ptext6 0605                           __ptext7 061E  
                         __ptext8 05F0                           __ptext9 05E7                 ?_EEPROM_Read_Page 0071  
              ??_EEPROM_Read_Page 0076              end_of_initialization 07FC        ??_I2C_Master_RepeatedStart 0070  
                 ___lldiv@divisor 0070                   ___lldiv@counter 007D                EEPROM_Write_Page@i 0077  
             start_initialization 07DE                 ??_I2C_Master_Init 0024                 ??_I2C_Master_Wait 0070  
               ??_I2C_Master_Stop 0070                       __pdataBANK0 0034                          ?_I2C_ACK 0070  
                       ___latbits 0002                     __pcstackBANK0 0020                  _I2C_Master_Start 05E7  
                _I2C_Master_Write 061E                          ?___lldiv 0070              I2C_Master_Write@data 0070  
                        _I2C_NACK 0605             __end_of_I2C_Read_Byte 064A                         main@F1032 0034  
             I2C_Master_Init@baud 0020         ?_I2C_Master_RepeatedStart 0070                   _I2C_Master_Init 064A  
                 _I2C_Master_Wait 0611                   _I2C_Master_Stop 05F0                          __ptext10 05DE  
                        __ptext11 05F9                          __ptext12 0611                          main@Data 002A  
                        main@data 002F          __end_of_I2C_Master_Start 05F0          __end_of_I2C_Master_Write 0633  
            EEPROM_Read_Page@data 0073                  _EEPROM_Read_Page 071C                  ___lldiv@dividend 0074  
         __end_of_I2C_Master_Init 0682           __end_of_I2C_Master_Wait 061E           __end_of_I2C_Master_Stop 05F9  
             EEPROM_Read_Page@add 0071               EEPROM_Read_Page@len 0074                  ___lldiv@quotient 0079  
               _EEPROM_Write_Page 0682                ?_EEPROM_Write_Page 0071                 EEPROM_Read_Page@i 0077  
             ??_EEPROM_Write_Page 0075  
