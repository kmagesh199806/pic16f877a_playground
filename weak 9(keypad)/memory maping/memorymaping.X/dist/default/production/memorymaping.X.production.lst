

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Feb 10 14:54:57 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 22/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0000                     	;# 
   170     0001                     	;# 
   171     0002                     	;# 
   172     0003                     	;# 
   173     0004                     	;# 
   174     0005                     	;# 
   175     0006                     	;# 
   176     0007                     	;# 
   177     0008                     	;# 
   178     0009                     	;# 
   179     000A                     	;# 
   180     000B                     	;# 
   181     000C                     	;# 
   182     000D                     	;# 
   183     000E                     	;# 
   184     000E                     	;# 
   185     000F                     	;# 
   186     0010                     	;# 
   187     0011                     	;# 
   188     0012                     	;# 
   189     0013                     	;# 
   190     0014                     	;# 
   191     0015                     	;# 
   192     0015                     	;# 
   193     0016                     	;# 
   194     0017                     	;# 
   195     0018                     	;# 
   196     0019                     	;# 
   197     001A                     	;# 
   198     001B                     	;# 
   199     001B                     	;# 
   200     001C                     	;# 
   201     001D                     	;# 
   202     001E                     	;# 
   203     001F                     	;# 
   204     0081                     	;# 
   205     0085                     	;# 
   206     0086                     	;# 
   207     0087                     	;# 
   208     0088                     	;# 
   209     0089                     	;# 
   210     008C                     	;# 
   211     008D                     	;# 
   212     008E                     	;# 
   213     0091                     	;# 
   214     0092                     	;# 
   215     0093                     	;# 
   216     0094                     	;# 
   217     0098                     	;# 
   218     0099                     	;# 
   219     009C                     	;# 
   220     009D                     	;# 
   221     009E                     	;# 
   222     009F                     	;# 
   223     010C                     	;# 
   224     010D                     	;# 
   225     010E                     	;# 
   226     010F                     	;# 
   227     018C                     	;# 
   228     018D                     	;# 
   229                           
   230                           	psect	idataCOMMON
   231     0752                     __pidataCOMMON:
   232                           
   233                           ;initializer for _opreg
   234     0752  3481               	retlw	129
   235     0753  3400               	retlw	0
   236                           
   237                           ;initializer for _prc
   238     0754  3407               	retlw	7
   239     0755  3400               	retlw	0
   240                           
   241                           ;initializer for _trc
   242     0756  3487               	retlw	135
   243     0757  3400               	retlw	0
   244                           
   245                           ;initializer for _trb
   246     0758  3486               	retlw	134
   247     0759  3400               	retlw	0
   248                           
   249                           ;initializer for _prb
   250     075A  3406               	retlw	6
   251     075B  3400               	retlw	0
   252                           
   253                           	psect	cinit
   254     07C0                     start_initialization:	
   255                           ; #config settings
   256                           
   257     07C0                     __initialization:
   258                           
   259                           ; Initialize objects allocated to COMMON
   260     07C0  120A  118A  2752  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   261     07C5  00F0               	movwf	__pdataCOMMON& (0+127)
   262     07C6  120A  118A  2753  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   263     07CB  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   264     07CC  120A  118A  2754  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   265     07D1  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   266     07D2  120A  118A  2755  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   267     07D7  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   268     07D8  120A  118A  2756  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   269     07DD  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   270     07DE  120A  118A  2757  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   271     07E3  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   272     07E4  120A  118A  2758  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   273     07E9  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   274     07EA  120A  118A  2759  120A  118A  	fcall	__pidataCOMMON+7	;fetch initializer
   275     07EF  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   276     07F0  120A  118A  275A  120A  118A  	fcall	__pidataCOMMON+8	;fetch initializer
   277     07F5  00F8               	movwf	(__pdataCOMMON+8)& (0+127)
   278     07F6  120A  118A  275B  120A  118A  	fcall	__pidataCOMMON+9	;fetch initializer
   279     07FB  00F9               	movwf	(__pdataCOMMON+9)& (0+127)
   280     07FC                     end_of_initialization:	
   281                           ;End of C runtime variable initialization code
   282                           
   283     07FC                     __end_of__initialization:
   284     07FC  0183               	clrf	3
   285     07FD  120A  118A  2F81   	ljmp	_main	;jump to C main() function
   286                           
   287                           	psect	dataCOMMON
   288     0070                     __pdataCOMMON:
   289     0070                     _opreg:
   290     0070                     	ds	2
   291     0072                     _prc:
   292     0072                     	ds	2
   293     0074                     _trc:
   294     0074                     	ds	2
   295     0076                     _trb:
   296     0076                     	ds	2
   297     0078                     _prb:
   298     0078                     	ds	2
   299                           
   300                           	psect	inittext
   301     076E                     init_fetch0:	
   302                           ;	Called with low address in FSR and high address in W
   303                           
   304     076E  087E               	movf	btemp,w
   305     076F  008A               	movwf	10
   306     0770  087F               	movf	btemp+1,w
   307     0771  0082               	movwf	2
   308     0772                     init_ram0:	
   309                           ;Called with:
   310                           ;	high address of idata address in btemp 
   311                           ;	low address of idata address in btemp+1 
   312                           ;	low address of data in FSR
   313                           ;	high address + 1 of data in btemp-1
   314                           
   315     0772  120A  118A  276E  120A  118A  	fcall	init_fetch0
   316     0777  0080               	movwf	0
   317     0778  0A84               	incf	4,f
   318     0779  0804               	movf	4,w
   319     077A  067D               	xorwf	btemp+-1,w
   320     077B  1903               	btfsc	3,2
   321     077C  3400               	retlw	0
   322     077D  0AFF               	incf	btemp+1,f
   323     077E  1903               	btfsc	3,2
   324     077F  0AFE               	incf	btemp,f
   325     0780  2F72               	goto	init_ram0
   326                           
   327                           	psect	cstackCOMMON
   328     007A                     __pcstackCOMMON:
   329     007A                     ?_init:
   330     007A                     ??_init:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     007A                     ?_swh:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     007A                     ?_main:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     007A                     swh@i:	
   340                           ; 1 bytes @ 0x0
   341                           
   342                           
   343                           ; 2 bytes @ 0x0
   344     007A                     	ds	2
   345     007C                     ??_swh:
   346     007C                     ??_main:	
   347                           ; 1 bytes @ 0x2
   348                           
   349                           
   350                           ; 1 bytes @ 0x2
   351     007C                     	ds	2
   352                           
   353                           	psect	maintext
   354     0781                     __pmaintext:	
   355 ;;
   356 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   357 ;;
   358 ;; *************** function _main *****************
   359 ;; Defined at:
   360 ;;		line 18 in file "memmory.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   369 ;; Tracked objects:
   370 ;;		On entry : B00/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   374 ;;      Params:         0       0       0       0       0
   375 ;;      Locals:         0       0       0       0       0
   376 ;;      Temps:          2       0       0       0       0
   377 ;;      Totals:         2       0       0       0       0
   378 ;;Total ram usage:        2 bytes
   379 ;; Hardware stack levels required when called: 1
   380 ;; This function calls:
   381 ;;		_init
   382 ;;		_swh
   383 ;; This function is called by:
   384 ;;		Startup code after reset
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388     0781                     _main:	
   389                           ;psect for function _main
   390                           
   391     0781                     l650:	
   392                           ;incstack = 0
   393                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   394                           
   395                           
   396                           ;memmory.c: 20:     init();
   397     0781  120A  118A  275C  120A  118A  	fcall	_init
   398     0786                     l652:
   399                           
   400                           ;memmory.c: 23:         swh(*prb);
   401     0786  1283               	bcf	3,5	;RP0=0, select bank0
   402     0787  1303               	bcf	3,6	;RP1=0, select bank0
   403     0788  0806               	movf	6,w
   404     0789  00FC               	movwf	??_main
   405     078A  01FD               	clrf	??_main+1
   406     078B  087C               	movf	??_main,w
   407     078C  00FA               	movwf	swh@i
   408     078D  087D               	movf	??_main+1,w
   409     078E  00FB               	movwf	swh@i+1
   410     078F  120A  118A  2798  120A  118A  	fcall	_swh
   411     0794  2F86               	goto	l652
   412     0795  120A  118A  2800   	ljmp	start
   413     0798                     __end_of_main:
   414                           
   415                           	psect	text1
   416     0798                     __ptext1:	
   417 ;; *************** function _swh *****************
   418 ;; Defined at:
   419 ;;		line 22 in file "leddriver.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;  i               2    0[COMMON] int 
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         2       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0
   435 ;;      Temps:          0       0       0       0       0
   436 ;;      Totals:         2       0       0       0       0
   437 ;;Total ram usage:        2 bytes
   438 ;; Hardware stack levels used: 1
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446     0798                     _swh:	
   447                           ;psect for function _swh
   448                           
   449     0798                     l632:	
   450                           ;incstack = 0
   451                           ; Regs used in _swh: [wreg-fsr0h+status,2+status,0]
   452                           
   453                           
   454                           ;leddriver.c: 22: void swh(int i);leddriver.c: 23: {;leddriver.c: 24:     switch(i)
   455     0798  2FAC               	goto	l644
   456     0799                     l634:
   457                           
   458                           ;leddriver.c: 27:             *prc=0x04;
   459     0799  3004               	movlw	4
   460     079A  1283               	bcf	3,5	;RP0=0, select bank0
   461     079B  1303               	bcf	3,6	;RP1=0, select bank0
   462     079C  0087               	movwf	7
   463                           
   464                           ;leddriver.c: 28:             break;
   465     079D  2FBF               	goto	l36
   466     079E                     l636:
   467                           
   468                           ;leddriver.c: 30:             *prc=0x02;
   469     079E  3002               	movlw	2
   470     079F  1283               	bcf	3,5	;RP0=0, select bank0
   471     07A0  1303               	bcf	3,6	;RP1=0, select bank0
   472     07A1  0087               	movwf	7
   473                           
   474                           ;leddriver.c: 31:             break;
   475     07A2  2FBF               	goto	l36
   476     07A3                     l638:
   477                           
   478                           ;leddriver.c: 33:             *prc=0x00;
   479     07A3  1283               	bcf	3,5	;RP0=0, select bank0
   480     07A4  1303               	bcf	3,6	;RP1=0, select bank0
   481     07A5  0187               	clrf	7
   482                           
   483                           ;leddriver.c: 34:             break;
   484     07A6  2FBF               	goto	l36
   485     07A7                     l640:
   486                           
   487                           ;leddriver.c: 36:             *prc=0x06;
   488     07A7  3006               	movlw	6
   489     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   490     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   491     07AA  0087               	movwf	7
   492                           
   493                           ;leddriver.c: 37:             break;
   494     07AB  2FBF               	goto	l36
   495     07AC                     l644:
   496                           
   497                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   498                           ; Switch size 1, requested type "simple"
   499                           ; Number of cases is 1, Range of values is 0 to 0
   500                           ; switch strategies available:
   501                           ; Name         Instructions Cycles
   502                           ; simple_byte            4     3 (average)
   503                           ; direct_byte           11     8 (fixed)
   504                           ; jumptable            260     6 (fixed)
   505                           ;	Chosen strategy is simple_byte
   506     07AC  087B               	movf	swh@i+1,w
   507     07AD  3A00               	xorlw	0	; case 0
   508     07AE  1903               	skipnz
   509     07AF  2FB1               	goto	l674
   510     07B0  2FBF               	goto	l36
   511     07B1                     l674:
   512                           
   513                           ; Switch size 1, requested type "simple"
   514                           ; Number of cases is 4, Range of values is 112 to 224
   515                           ; switch strategies available:
   516                           ; Name         Instructions Cycles
   517                           ; simple_byte           13     7 (average)
   518                           ; jumptable            263     9 (fixed)
   519                           ;	Chosen strategy is simple_byte
   520     07B1  087A               	movf	swh@i,w
   521     07B2  3A70               	xorlw	112	; case 112
   522     07B3  1903               	skipnz
   523     07B4  2FA7               	goto	l640
   524     07B5  3AC0               	xorlw	192	; case 176
   525     07B6  1903               	skipnz
   526     07B7  2FA3               	goto	l638
   527     07B8  3A60               	xorlw	96	; case 208
   528     07B9  1903               	skipnz
   529     07BA  2F9E               	goto	l636
   530     07BB  3A30               	xorlw	48	; case 224
   531     07BC  1903               	skipnz
   532     07BD  2F99               	goto	l634
   533     07BE  2FBF               	goto	l36
   534     07BF                     l36:
   535     07BF  0008               	return
   536     07C0                     __end_of_swh:
   537                           
   538                           	psect	text2
   539     075C                     __ptext2:	
   540 ;; *************** function _init *****************
   541 ;; Defined at:
   542 ;;		line 14 in file "leddriver.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;		None
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0, btemp+1
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   556 ;;      Params:         0       0       0       0       0
   557 ;;      Locals:         0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0
   559 ;;      Totals:         0       0       0       0       0
   560 ;;Total ram usage:        0 bytes
   561 ;; Hardware stack levels used: 1
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569     075C                     _init:	
   570                           ;psect for function _init
   571                           
   572     075C                     l580:	
   573                           ;incstack = 0
   574                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1]
   575                           
   576                           
   577                           ;leddriver.c: 16:     *trb=0xF0;
   578     075C  30F0               	movlw	240
   579     075D  1683               	bsf	3,5	;RP0=1, select bank1
   580     075E  1303               	bcf	3,6	;RP1=0, select bank1
   581     075F  0086               	movwf	6
   582     0760                     l582:
   583                           
   584                           ;leddriver.c: 17:  *opreg&=0x7F;
   585     0760  307F               	movlw	127
   586     0761  00FF               	movwf	btemp+1
   587     0762  087F               	movf	btemp+1,w
   588     0763  0581               	andwf	1,f
   589     0764                     l584:
   590                           
   591                           ;leddriver.c: 18:     *prb=0x00;
   592     0764  1283               	bcf	3,5	;RP0=0, select bank0
   593     0765  1303               	bcf	3,6	;RP1=0, select bank0
   594     0766  0186               	clrf	6
   595     0767                     l586:
   596                           
   597                           ;leddriver.c: 19:     *trc=0x00;
   598     0767  1683               	bsf	3,5	;RP0=1, select bank1
   599     0768  1303               	bcf	3,6	;RP1=0, select bank1
   600     0769  0187               	clrf	7
   601     076A                     l588:
   602                           
   603                           ;leddriver.c: 20:     *prc=0x00;
   604     076A  1283               	bcf	3,5	;RP0=0, select bank0
   605     076B  1303               	bcf	3,6	;RP1=0, select bank0
   606     076C  0187               	clrf	7
   607     076D                     l27:
   608     076D  0008               	return
   609     076E                     __end_of_init:
   610     007E                     btemp	set	126	;btemp
   611     007E                     wtemp0	set	126
   612                           
   613                           	psect	config
   614                           
   615                           ;Config register CONFIG @ 0x2007
   616                           ;	Oscillator Selection bits
   617                           ;	FOSC = EXTRC, RC oscillator
   618                           ;	Watchdog Timer Enable bit
   619                           ;	WDTE = OFF, WDT disabled
   620                           ;	Power-up Timer Enable bit
   621                           ;	PWRTE = OFF, PWRT disabled
   622                           ;	Brown-out Reset Enable bit
   623                           ;	BOREN = OFF, BOR disabled
   624                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   625                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   626                           ;	Data EEPROM Memory Code Protection bit
   627                           ;	CPD = OFF, Data EEPROM code protection off
   628                           ;	Flash Program Memory Write Enable bits
   629                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   630                           ;	In-Circuit Debugger Mode bit
   631                           ;	DEBUG = 0x1, unprogrammed default
   632                           ;	Flash Program Memory Code Protection bit
   633                           ;	CP = OFF, Code protection off
   634     2007                     	org	8199
   635     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    opreg	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    prb	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    prc	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    trb	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    trc	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _main->_swh

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      98
                                              2 COMMON     2     2      0
                               _init
                                _swh
 ---------------------------------------------------------------------------------
 (1) _swh                                                  2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _swh

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E      12        0.0%
ABS                  0      0       E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Feb 10 14:54:57 2024

                      pc 0002                       l27 076D                       l36 07BF  
                     fsr 0004                      l640 07A7                      l632 0798  
                    l634 0799                      l650 0781                      l580 075C  
                    l636 079E                      l644 07AC                      l652 0786  
                    l582 0760                      l638 07A3                      l584 0764  
                    l586 0767                      l674 07B1                      l588 076A  
                    _prb 0078                      _prc 0072                      _trb 0076  
                    _trc 0074                      _swh 0798                      indf 0000  
                   ?_swh 007A                     _main 0781                     _init 075C  
                   btemp 007E                     swh@i 007A                     start 0000  
                  ??_swh 007C                    ?_main 007A                    ?_init 007A  
                  _opreg 0070                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07C0             __end_of_main 0798  
           __end_of_init 076E                   ??_main 007C                   ??_init 007A  
           __pdataCOMMON 0070  __end_of__initialization 07FC           __pcstackCOMMON 007A  
             __pmaintext 0781                  __ptext1 0798                  __ptext2 075C  
   end_of_initialization 07FC            __pidataCOMMON 0752      start_initialization 07C0  
            __end_of_swh 07C0               init_fetch0 076E                ___latbits 0002  
               init_ram0 0772  
