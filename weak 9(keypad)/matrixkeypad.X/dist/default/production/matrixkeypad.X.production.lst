

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Feb 10 14:00:15 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 22/03/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     0000                     	;# 
   174     0001                     	;# 
   175     0002                     	;# 
   176     0003                     	;# 
   177     0004                     	;# 
   178     0005                     	;# 
   179     0006                     	;# 
   180     0007                     	;# 
   181     0008                     	;# 
   182     0009                     	;# 
   183     000A                     	;# 
   184     000B                     	;# 
   185     000C                     	;# 
   186     000D                     	;# 
   187     000E                     	;# 
   188     000E                     	;# 
   189     000F                     	;# 
   190     0010                     	;# 
   191     0011                     	;# 
   192     0012                     	;# 
   193     0013                     	;# 
   194     0014                     	;# 
   195     0015                     	;# 
   196     0015                     	;# 
   197     0016                     	;# 
   198     0017                     	;# 
   199     0018                     	;# 
   200     0019                     	;# 
   201     001A                     	;# 
   202     001B                     	;# 
   203     001B                     	;# 
   204     001C                     	;# 
   205     001D                     	;# 
   206     001E                     	;# 
   207     001F                     	;# 
   208     0081                     	;# 
   209     0085                     	;# 
   210     0086                     	;# 
   211     0087                     	;# 
   212     0088                     	;# 
   213     0089                     	;# 
   214     008C                     	;# 
   215     008D                     	;# 
   216     008E                     	;# 
   217     0091                     	;# 
   218     0092                     	;# 
   219     0093                     	;# 
   220     0094                     	;# 
   221     0098                     	;# 
   222     0099                     	;# 
   223     009C                     	;# 
   224     009D                     	;# 
   225     009E                     	;# 
   226     009F                     	;# 
   227     010C                     	;# 
   228     010D                     	;# 
   229     010E                     	;# 
   230     010F                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233                           
   234                           	psect	idataBANK0
   235     05D9                     __pidataBANK0:
   236                           
   237                           ;initializer for _d
   238     05D9  344D               	retlw	77
   239     05DA  3441               	retlw	65
   240     05DB  3454               	retlw	84
   241     05DC  3452               	retlw	82
   242     05DD  3449               	retlw	73
   243     05DE  3458               	retlw	88
   244     05DF  3420               	retlw	32
   245     05E0  344B               	retlw	75
   246     05E1  3445               	retlw	69
   247     05E2  3459               	retlw	89
   248     05E3  3450               	retlw	80
   249     05E4  3441               	retlw	65
   250     05E5  3444               	retlw	68
   251     05E6  3400               	retlw	0
   252     05E7  3400               	retlw	0
   253     0008                     _PORTD	set	8
   254     0007                     _PORTC	set	7
   255     0006                     _PORTB	set	6
   256     0032                     _RB2	set	50
   257     0031                     _RB1	set	49
   258     0030                     _RB0	set	48
   259     0036                     _RB6	set	54
   260     0035                     _RB5	set	53
   261     0034                     _RB4	set	52
   262     0033                     _RB3	set	51
   263     0088                     _TRISD	set	136
   264     0087                     _TRISC	set	135
   265     0081                     _OPTION_REG	set	129
   266     0086                     _TRISB	set	134
   267                           
   268                           	psect	cinit
   269     07ED                     start_initialization:	
   270                           ; #config settings
   271                           
   272     07ED                     __initialization:
   273                           
   274                           ; Initialize objects allocated to BANK0
   275     07ED  1383               	bcf	3,7	;select IRP bank0
   276     07EE  302F               	movlw	low (__pdataBANK0+15)
   277     07EF  00FD               	movwf	btemp+-1
   278     07F0  3005               	movlw	high __pidataBANK0
   279     07F1  00FE               	movwf	btemp
   280     07F2  30D9               	movlw	low __pidataBANK0
   281     07F3  00FF               	movwf	btemp+1
   282     07F4  3020               	movlw	low __pdataBANK0
   283     07F5  0084               	movwf	4
   284     07F6  120A  118A  25EC  120A  118A  	fcall	init_ram0
   285                           
   286                           ; Clear objects allocated to COMMON
   287     07FB  01F5               	clrf	__pbssCOMMON& (0+127)
   288     07FC                     end_of_initialization:	
   289                           ;End of C runtime variable initialization code
   290                           
   291     07FC                     __end_of__initialization:
   292     07FC  0183               	clrf	3
   293     07FD  120A  118A  2E28   	ljmp	_main	;jump to C main() function
   294                           
   295                           	psect	bssCOMMON
   296     0075                     __pbssCOMMON:
   297     0075                     _scan:
   298     0075                     	ds	1
   299                           
   300                           	psect	dataBANK0
   301     0020                     __pdataBANK0:
   302     0020                     _d:
   303     0020                     	ds	15
   304                           
   305                           	psect	inittext
   306     05E8                     init_fetch0:	
   307                           ;	Called with low address in FSR and high address in W
   308                           
   309     05E8  087E               	movf	btemp,w
   310     05E9  008A               	movwf	10
   311     05EA  087F               	movf	btemp+1,w
   312     05EB  0082               	movwf	2
   313     05EC                     init_ram0:	
   314                           ;Called with:
   315                           ;	high address of idata address in btemp 
   316                           ;	low address of idata address in btemp+1 
   317                           ;	low address of data in FSR
   318                           ;	high address + 1 of data in btemp-1
   319                           
   320     05EC  120A  118A  25E8  120A  118A  	fcall	init_fetch0
   321     05F1  0080               	movwf	0
   322     05F2  0A84               	incf	4,f
   323     05F3  0804               	movf	4,w
   324     05F4  067D               	xorwf	btemp+-1,w
   325     05F5  1903               	btfsc	3,2
   326     05F6  3400               	retlw	0
   327     05F7  0AFF               	incf	btemp+1,f
   328     05F8  1903               	btfsc	3,2
   329     05F9  0AFE               	incf	btemp,f
   330     05FA  2DEC               	goto	init_ram0
   331                           
   332                           	psect	cstackCOMMON
   333     0070                     __pcstackCOMMON:
   334     0070                     ?_init:
   335     0070                     ?_keyscan:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0070                     ?_lcddata:	
   339                           ; 1 bytes @ 0x0
   340                           
   341     0070                     ?_lcdcmd:	
   342                           ; 1 bytes @ 0x0
   343                           
   344     0070                     ?_delay:	
   345                           ; 1 bytes @ 0x0
   346                           
   347     0070                     ?_main:	
   348                           ; 1 bytes @ 0x0
   349                           
   350     0070                     delay@delaycount:	
   351                           ; 1 bytes @ 0x0
   352                           
   353                           
   354                           ; 2 bytes @ 0x0
   355     0070                     	ds	2
   356     0072                     ??_keyscan:
   357     0072                     ??_lcddata:	
   358                           ; 1 bytes @ 0x2
   359                           
   360     0072                     ??_lcdcmd:	
   361                           ; 1 bytes @ 0x2
   362                           
   363     0072                     ??_delay:	
   364                           ; 1 bytes @ 0x2
   365                           
   366     0072                     lcdcmd@i:	
   367                           ; 1 bytes @ 0x2
   368                           
   369     0072                     lcddata@i:	
   370                           ; 1 bytes @ 0x2
   371                           
   372                           
   373                           ; 1 bytes @ 0x2
   374     0072                     	ds	1
   375     0073                     ??_init:
   376     0073                     init@i:	
   377                           ; 1 bytes @ 0x3
   378                           
   379                           
   380                           ; 2 bytes @ 0x3
   381     0073                     	ds	2
   382     0075                     ??_main:
   383                           
   384                           	psect	maintext
   385     0628                     __pmaintext:	
   386                           ; 1 bytes @ 0x5
   387 ;;
   388 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   389 ;;
   390 ;; *************** function _main *****************
   391 ;; Defined at:
   392 ;;		line 24 in file "matrix.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : B00/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   406 ;;      Params:         0       0       0       0       0
   407 ;;      Locals:         0       0       0       0       0
   408 ;;      Temps:          0       0       0       0       0
   409 ;;      Totals:         0       0       0       0       0
   410 ;;Total ram usage:        0 bytes
   411 ;; Hardware stack levels required when called: 3
   412 ;; This function calls:
   413 ;;		_init
   414 ;;		_keyscan
   415 ;;		_lcddata
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421     0628                     _main:	
   422                           ;psect for function _main
   423                           
   424     0628                     l989:	
   425                           ;incstack = 0
   426                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   427                           
   428                           
   429                           ;matrix.c: 26:     init();
   430     0628  120A  118A  2642  120A  118A  	fcall	_init
   431     062D                     l991:
   432                           
   433                           ;matrix.c: 28:    {;matrix.c: 29:         scan=keyscan();
   434     062D  120A  118A  26B1  120A  118A  	fcall	_keyscan
   435     0632  00F5               	movwf	_scan
   436     0633                     l993:
   437                           
   438                           ;matrix.c: 30:         if(scan!=((void*)0))
   439     0633  0875               	movf	_scan,w
   440     0634  1903               	btfsc	3,2
   441     0635  2E37               	goto	u541
   442     0636  2E38               	goto	u540
   443     0637                     u541:
   444     0637  2E2D               	goto	l991
   445     0638                     u540:
   446     0638                     l995:
   447                           
   448                           ;matrix.c: 31:         lcddata(scan);
   449     0638  0875               	movf	_scan,w
   450     0639  120A  118A  25FB  120A  118A  	fcall	_lcddata
   451     063E  2E2D               	goto	l991
   452     063F  120A  118A  2800   	ljmp	start
   453     0642                     __end_of_main:
   454                           
   455                           	psect	text1
   456     06B1                     __ptext1:	
   457 ;; *************** function _keyscan *****************
   458 ;; Defined at:
   459 ;;		line 64 in file "function.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      unsigned char 
   466 ;; Registers used:
   467 ;;		wreg, status,2, status,0, pclath, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   473 ;;      Params:         0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0
   475 ;;      Temps:          0       0       0       0       0
   476 ;;      Totals:         0       0       0       0       0
   477 ;;Total ram usage:        0 bytes
   478 ;; Hardware stack levels used: 1
   479 ;; Hardware stack levels required when called: 1
   480 ;; This function calls:
   481 ;;		_delay
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487     06B1                     _keyscan:	
   488                           ;psect for function _keyscan
   489                           
   490     06B1                     l895:	
   491                           ;incstack = 0
   492                           ; Regs used in _keyscan: [wreg+status,2+status,0+pclath+cstack]
   493                           
   494                           
   495                           ;function.c: 66:  RB3=0,RB4=1,RB5=1,RB6=1;
   496     06B1  1283               	bcf	3,5	;RP0=0, select bank0
   497     06B2  1303               	bcf	3,6	;RP1=0, select bank0
   498     06B3  1186               	bcf	6,3	;volatile
   499     06B4  1606               	bsf	6,4	;volatile
   500     06B5  1686               	bsf	6,5	;volatile
   501     06B6  1706               	bsf	6,6	;volatile
   502     06B7                     l897:
   503                           
   504                           ;function.c: 67:  delay(10);
   505     06B7  300A               	movlw	10
   506     06B8  00F0               	movwf	delay@delaycount
   507     06B9  3000               	movlw	0
   508     06BA  00F1               	movwf	delay@delaycount+1
   509     06BB  120A  118A  25CC  120A  118A  	fcall	_delay
   510     06C0                     l899:
   511                           
   512                           ;function.c: 68:     if(RB0==0){delay(100);while(RB0==0);return '1';}
   513     06C0  1283               	bcf	3,5	;RP0=0, select bank0
   514     06C1  1303               	bcf	3,6	;RP1=0, select bank0
   515     06C2  1806               	btfsc	6,0	;volatile
   516     06C3  2EC5               	goto	u301
   517     06C4  2EC6               	goto	u300
   518     06C5                     u301:
   519     06C5  2ED7               	goto	l73
   520     06C6                     u300:
   521     06C6                     l901:
   522     06C6  3064               	movlw	100
   523     06C7  00F0               	movwf	delay@delaycount
   524     06C8  3000               	movlw	0
   525     06C9  00F1               	movwf	delay@delaycount+1
   526     06CA  120A  118A  25CC  120A  118A  	fcall	_delay
   527     06CF                     l74:
   528     06CF  1283               	bcf	3,5	;RP0=0, select bank0
   529     06D0  1303               	bcf	3,6	;RP1=0, select bank0
   530     06D1  1C06               	btfss	6,0	;volatile
   531     06D2  2ED4               	goto	u311
   532     06D3  2ED5               	goto	u310
   533     06D4                     u311:
   534     06D4  2ECF               	goto	l74
   535     06D5                     u310:
   536     06D5                     l903:
   537     06D5  3031               	movlw	49
   538     06D6  2FEC               	goto	l77
   539     06D7                     l73:
   540                           
   541                           ;function.c: 69:     if(RB1==0){delay(100);while(RB1==0);return '2';}
   542     06D7  1886               	btfsc	6,1	;volatile
   543     06D8  2EDA               	goto	u321
   544     06D9  2EDB               	goto	u320
   545     06DA                     u321:
   546     06DA  2EEC               	goto	l78
   547     06DB                     u320:
   548     06DB                     l907:
   549     06DB  3064               	movlw	100
   550     06DC  00F0               	movwf	delay@delaycount
   551     06DD  3000               	movlw	0
   552     06DE  00F1               	movwf	delay@delaycount+1
   553     06DF  120A  118A  25CC  120A  118A  	fcall	_delay
   554     06E4                     l79:
   555     06E4  1283               	bcf	3,5	;RP0=0, select bank0
   556     06E5  1303               	bcf	3,6	;RP1=0, select bank0
   557     06E6  1C86               	btfss	6,1	;volatile
   558     06E7  2EE9               	goto	u331
   559     06E8  2EEA               	goto	u330
   560     06E9                     u331:
   561     06E9  2EE4               	goto	l79
   562     06EA                     u330:
   563     06EA                     l909:
   564     06EA  3032               	movlw	50
   565     06EB  2FEC               	goto	l77
   566     06EC                     l78:
   567                           
   568                           ;function.c: 70:     if(RB2==0){delay(100);while(RB2==0);return '3';}
   569     06EC  1906               	btfsc	6,2	;volatile
   570     06ED  2EEF               	goto	u341
   571     06EE  2EF0               	goto	u340
   572     06EF                     u341:
   573     06EF  2F01               	goto	l82
   574     06F0                     u340:
   575     06F0                     l913:
   576     06F0  3064               	movlw	100
   577     06F1  00F0               	movwf	delay@delaycount
   578     06F2  3000               	movlw	0
   579     06F3  00F1               	movwf	delay@delaycount+1
   580     06F4  120A  118A  25CC  120A  118A  	fcall	_delay
   581     06F9                     l83:
   582     06F9  1283               	bcf	3,5	;RP0=0, select bank0
   583     06FA  1303               	bcf	3,6	;RP1=0, select bank0
   584     06FB  1D06               	btfss	6,2	;volatile
   585     06FC  2EFE               	goto	u351
   586     06FD  2EFF               	goto	u350
   587     06FE                     u351:
   588     06FE  2EF9               	goto	l83
   589     06FF                     u350:
   590     06FF                     l915:
   591     06FF  3033               	movlw	51
   592     0700  2FEC               	goto	l77
   593     0701                     l82:
   594                           
   595                           ;function.c: 73:     RB3=1,RB4=0,RB5=1,RB6=1;
   596     0701  1586               	bsf	6,3	;volatile
   597     0702  1206               	bcf	6,4	;volatile
   598     0703  1686               	bsf	6,5	;volatile
   599     0704  1706               	bsf	6,6	;volatile
   600     0705                     l919:
   601                           
   602                           ;function.c: 74:     delay(10);
   603     0705  300A               	movlw	10
   604     0706  00F0               	movwf	delay@delaycount
   605     0707  3000               	movlw	0
   606     0708  00F1               	movwf	delay@delaycount+1
   607     0709  120A  118A  25CC  120A  118A  	fcall	_delay
   608     070E                     l921:
   609                           
   610                           ;function.c: 75:     if(RB0==0){delay(100);while(RB0==0);return '4';}
   611     070E  1283               	bcf	3,5	;RP0=0, select bank0
   612     070F  1303               	bcf	3,6	;RP1=0, select bank0
   613     0710  1806               	btfsc	6,0	;volatile
   614     0711  2F13               	goto	u361
   615     0712  2F14               	goto	u360
   616     0713                     u361:
   617     0713  2F25               	goto	l86
   618     0714                     u360:
   619     0714                     l923:
   620     0714  3064               	movlw	100
   621     0715  00F0               	movwf	delay@delaycount
   622     0716  3000               	movlw	0
   623     0717  00F1               	movwf	delay@delaycount+1
   624     0718  120A  118A  25CC  120A  118A  	fcall	_delay
   625     071D                     l87:
   626     071D  1283               	bcf	3,5	;RP0=0, select bank0
   627     071E  1303               	bcf	3,6	;RP1=0, select bank0
   628     071F  1C06               	btfss	6,0	;volatile
   629     0720  2F22               	goto	u371
   630     0721  2F23               	goto	u370
   631     0722                     u371:
   632     0722  2F1D               	goto	l87
   633     0723                     u370:
   634     0723                     l925:
   635     0723  3034               	movlw	52
   636     0724  2FEC               	goto	l77
   637     0725                     l86:
   638                           
   639                           ;function.c: 76:     if(RB1==0){delay(100);while(RB1==0);return '5';}
   640     0725  1886               	btfsc	6,1	;volatile
   641     0726  2F28               	goto	u381
   642     0727  2F29               	goto	u380
   643     0728                     u381:
   644     0728  2F3A               	goto	l90
   645     0729                     u380:
   646     0729                     l929:
   647     0729  3064               	movlw	100
   648     072A  00F0               	movwf	delay@delaycount
   649     072B  3000               	movlw	0
   650     072C  00F1               	movwf	delay@delaycount+1
   651     072D  120A  118A  25CC  120A  118A  	fcall	_delay
   652     0732                     l91:
   653     0732  1283               	bcf	3,5	;RP0=0, select bank0
   654     0733  1303               	bcf	3,6	;RP1=0, select bank0
   655     0734  1C86               	btfss	6,1	;volatile
   656     0735  2F37               	goto	u391
   657     0736  2F38               	goto	u390
   658     0737                     u391:
   659     0737  2F32               	goto	l91
   660     0738                     u390:
   661     0738                     l931:
   662     0738  3035               	movlw	53
   663     0739  2FEC               	goto	l77
   664     073A                     l90:
   665                           
   666                           ;function.c: 77:     if(RB2==0){delay(100);while(RB2==0);return '6';}
   667     073A  1906               	btfsc	6,2	;volatile
   668     073B  2F3D               	goto	u401
   669     073C  2F3E               	goto	u400
   670     073D                     u401:
   671     073D  2F4F               	goto	l94
   672     073E                     u400:
   673     073E                     l935:
   674     073E  3064               	movlw	100
   675     073F  00F0               	movwf	delay@delaycount
   676     0740  3000               	movlw	0
   677     0741  00F1               	movwf	delay@delaycount+1
   678     0742  120A  118A  25CC  120A  118A  	fcall	_delay
   679     0747                     l95:
   680     0747  1283               	bcf	3,5	;RP0=0, select bank0
   681     0748  1303               	bcf	3,6	;RP1=0, select bank0
   682     0749  1D06               	btfss	6,2	;volatile
   683     074A  2F4C               	goto	u411
   684     074B  2F4D               	goto	u410
   685     074C                     u411:
   686     074C  2F47               	goto	l95
   687     074D                     u410:
   688     074D                     l937:
   689     074D  3036               	movlw	54
   690     074E  2FEC               	goto	l77
   691     074F                     l94:
   692                           
   693                           ;function.c: 79:     RB3=1,RB4=1,RB5=0,RB6=1;
   694     074F  1586               	bsf	6,3	;volatile
   695     0750  1606               	bsf	6,4	;volatile
   696     0751  1286               	bcf	6,5	;volatile
   697     0752  1706               	bsf	6,6	;volatile
   698     0753                     l941:
   699                           
   700                           ;function.c: 80:     delay(10);
   701     0753  300A               	movlw	10
   702     0754  00F0               	movwf	delay@delaycount
   703     0755  3000               	movlw	0
   704     0756  00F1               	movwf	delay@delaycount+1
   705     0757  120A  118A  25CC  120A  118A  	fcall	_delay
   706     075C                     l943:
   707                           
   708                           ;function.c: 81:     if(RB0==0){delay(100);while(RB0==0);return '7';}
   709     075C  1283               	bcf	3,5	;RP0=0, select bank0
   710     075D  1303               	bcf	3,6	;RP1=0, select bank0
   711     075E  1806               	btfsc	6,0	;volatile
   712     075F  2F61               	goto	u421
   713     0760  2F62               	goto	u420
   714     0761                     u421:
   715     0761  2F73               	goto	l98
   716     0762                     u420:
   717     0762                     l945:
   718     0762  3064               	movlw	100
   719     0763  00F0               	movwf	delay@delaycount
   720     0764  3000               	movlw	0
   721     0765  00F1               	movwf	delay@delaycount+1
   722     0766  120A  118A  25CC  120A  118A  	fcall	_delay
   723     076B                     l99:
   724     076B  1283               	bcf	3,5	;RP0=0, select bank0
   725     076C  1303               	bcf	3,6	;RP1=0, select bank0
   726     076D  1C06               	btfss	6,0	;volatile
   727     076E  2F70               	goto	u431
   728     076F  2F71               	goto	u430
   729     0770                     u431:
   730     0770  2F6B               	goto	l99
   731     0771                     u430:
   732     0771                     l947:
   733     0771  3037               	movlw	55
   734     0772  2FEC               	goto	l77
   735     0773                     l98:
   736                           
   737                           ;function.c: 82:     if(RB1==0){delay(100);while(RB1==0);return '8';}
   738     0773  1886               	btfsc	6,1	;volatile
   739     0774  2F76               	goto	u441
   740     0775  2F77               	goto	u440
   741     0776                     u441:
   742     0776  2F88               	goto	l102
   743     0777                     u440:
   744     0777                     l951:
   745     0777  3064               	movlw	100
   746     0778  00F0               	movwf	delay@delaycount
   747     0779  3000               	movlw	0
   748     077A  00F1               	movwf	delay@delaycount+1
   749     077B  120A  118A  25CC  120A  118A  	fcall	_delay
   750     0780                     l103:
   751     0780  1283               	bcf	3,5	;RP0=0, select bank0
   752     0781  1303               	bcf	3,6	;RP1=0, select bank0
   753     0782  1C86               	btfss	6,1	;volatile
   754     0783  2F85               	goto	u451
   755     0784  2F86               	goto	u450
   756     0785                     u451:
   757     0785  2F80               	goto	l103
   758     0786                     u450:
   759     0786                     l953:
   760     0786  3038               	movlw	56
   761     0787  2FEC               	goto	l77
   762     0788                     l102:
   763                           
   764                           ;function.c: 83:     if(RB2==0){delay(100);while(RB2==0);return '9';}
   765     0788  1906               	btfsc	6,2	;volatile
   766     0789  2F8B               	goto	u461
   767     078A  2F8C               	goto	u460
   768     078B                     u461:
   769     078B  2F9D               	goto	l106
   770     078C                     u460:
   771     078C                     l957:
   772     078C  3064               	movlw	100
   773     078D  00F0               	movwf	delay@delaycount
   774     078E  3000               	movlw	0
   775     078F  00F1               	movwf	delay@delaycount+1
   776     0790  120A  118A  25CC  120A  118A  	fcall	_delay
   777     0795                     l107:
   778     0795  1283               	bcf	3,5	;RP0=0, select bank0
   779     0796  1303               	bcf	3,6	;RP1=0, select bank0
   780     0797  1D06               	btfss	6,2	;volatile
   781     0798  2F9A               	goto	u471
   782     0799  2F9B               	goto	u470
   783     079A                     u471:
   784     079A  2F95               	goto	l107
   785     079B                     u470:
   786     079B                     l959:
   787     079B  3039               	movlw	57
   788     079C  2FEC               	goto	l77
   789     079D                     l106:
   790                           
   791                           ;function.c: 85:     RB3=1,RB4=1,RB5=1,RB6=0;
   792     079D  1586               	bsf	6,3	;volatile
   793     079E  1606               	bsf	6,4	;volatile
   794     079F  1686               	bsf	6,5	;volatile
   795     07A0  1306               	bcf	6,6	;volatile
   796     07A1                     l963:
   797                           
   798                           ;function.c: 86:     delay(10);
   799     07A1  300A               	movlw	10
   800     07A2  00F0               	movwf	delay@delaycount
   801     07A3  3000               	movlw	0
   802     07A4  00F1               	movwf	delay@delaycount+1
   803     07A5  120A  118A  25CC  120A  118A  	fcall	_delay
   804     07AA                     l965:
   805                           
   806                           ;function.c: 87:     if(RB0==0){delay(100);while(RB0==0);return'*';}
   807     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   808     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   809     07AC  1806               	btfsc	6,0	;volatile
   810     07AD  2FAF               	goto	u481
   811     07AE  2FB0               	goto	u480
   812     07AF                     u481:
   813     07AF  2FC1               	goto	l110
   814     07B0                     u480:
   815     07B0                     l967:
   816     07B0  3064               	movlw	100
   817     07B1  00F0               	movwf	delay@delaycount
   818     07B2  3000               	movlw	0
   819     07B3  00F1               	movwf	delay@delaycount+1
   820     07B4  120A  118A  25CC  120A  118A  	fcall	_delay
   821     07B9                     l111:
   822     07B9  1283               	bcf	3,5	;RP0=0, select bank0
   823     07BA  1303               	bcf	3,6	;RP1=0, select bank0
   824     07BB  1C06               	btfss	6,0	;volatile
   825     07BC  2FBE               	goto	u491
   826     07BD  2FBF               	goto	u490
   827     07BE                     u491:
   828     07BE  2FB9               	goto	l111
   829     07BF                     u490:
   830     07BF                     l969:
   831     07BF  302A               	movlw	42
   832     07C0  2FEC               	goto	l77
   833     07C1                     l110:
   834                           
   835                           ;function.c: 88:     if(RB1==0){delay(100);while(RB1==0);return '0';}
   836     07C1  1886               	btfsc	6,1	;volatile
   837     07C2  2FC4               	goto	u501
   838     07C3  2FC5               	goto	u500
   839     07C4                     u501:
   840     07C4  2FD6               	goto	l114
   841     07C5                     u500:
   842     07C5                     l973:
   843     07C5  3064               	movlw	100
   844     07C6  00F0               	movwf	delay@delaycount
   845     07C7  3000               	movlw	0
   846     07C8  00F1               	movwf	delay@delaycount+1
   847     07C9  120A  118A  25CC  120A  118A  	fcall	_delay
   848     07CE                     l115:
   849     07CE  1283               	bcf	3,5	;RP0=0, select bank0
   850     07CF  1303               	bcf	3,6	;RP1=0, select bank0
   851     07D0  1C86               	btfss	6,1	;volatile
   852     07D1  2FD3               	goto	u511
   853     07D2  2FD4               	goto	u510
   854     07D3                     u511:
   855     07D3  2FCE               	goto	l115
   856     07D4                     u510:
   857     07D4                     l975:
   858     07D4  3030               	movlw	48
   859     07D5  2FEC               	goto	l77
   860     07D6                     l114:
   861                           
   862                           ;function.c: 89:     if(RB2==0){delay(100);while(RB2==0);return '#';}
   863     07D6  1906               	btfsc	6,2	;volatile
   864     07D7  2FD9               	goto	u521
   865     07D8  2FDA               	goto	u520
   866     07D9                     u521:
   867     07D9  2FEB               	goto	l985
   868     07DA                     u520:
   869     07DA                     l979:
   870     07DA  3064               	movlw	100
   871     07DB  00F0               	movwf	delay@delaycount
   872     07DC  3000               	movlw	0
   873     07DD  00F1               	movwf	delay@delaycount+1
   874     07DE  120A  118A  25CC  120A  118A  	fcall	_delay
   875     07E3                     l119:
   876     07E3  1283               	bcf	3,5	;RP0=0, select bank0
   877     07E4  1303               	bcf	3,6	;RP1=0, select bank0
   878     07E5  1D06               	btfss	6,2	;volatile
   879     07E6  2FE8               	goto	u531
   880     07E7  2FE9               	goto	u530
   881     07E8                     u531:
   882     07E8  2FE3               	goto	l119
   883     07E9                     u530:
   884     07E9                     l981:
   885     07E9  3023               	movlw	35
   886     07EA  2FEC               	goto	l77
   887     07EB                     l985:
   888                           
   889                           ;function.c: 90:    return ((void*)0);
   890     07EB  3000               	movlw	0
   891     07EC                     l77:
   892     07EC  0008               	return
   893     07ED                     __end_of_keyscan:
   894                           
   895                           	psect	text2
   896     0642                     __ptext2:	
   897 ;; *************** function _init *****************
   898 ;; Defined at:
   899 ;;		line 22 in file "function.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  i               2    3[COMMON] int 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   913 ;;      Params:         0       0       0       0       0
   914 ;;      Locals:         2       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0
   916 ;;      Totals:         2       0       0       0       0
   917 ;;Total ram usage:        2 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; Hardware stack levels required when called: 2
   920 ;; This function calls:
   921 ;;		_delay
   922 ;;		_lcdcmd
   923 ;;		_lcddata
   924 ;; This function is called by:
   925 ;;		_main
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929     0642                     _init:	
   930                           ;psect for function _init
   931                           
   932     0642                     l855:	
   933                           ;incstack = 0
   934                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   935                           
   936                           
   937                           ;function.c: 24:     TRISB=0x07;
   938     0642  3007               	movlw	7
   939     0643  1683               	bsf	3,5	;RP0=1, select bank1
   940     0644  1303               	bcf	3,6	;RP1=0, select bank1
   941     0645  0086               	movwf	6	;volatile
   942                           
   943                           ;function.c: 25:     OPTION_REG=0x7F;
   944     0646  307F               	movlw	127
   945     0647  0081               	movwf	1	;volatile
   946     0648                     l857:
   947                           
   948                           ;function.c: 26:     PORTB=0x00;
   949     0648  1283               	bcf	3,5	;RP0=0, select bank0
   950     0649  1303               	bcf	3,6	;RP1=0, select bank0
   951     064A  0186               	clrf	6	;volatile
   952     064B                     l859:
   953                           
   954                           ;function.c: 27:     TRISC=0x00;
   955     064B  1683               	bsf	3,5	;RP0=1, select bank1
   956     064C  1303               	bcf	3,6	;RP1=0, select bank1
   957     064D  0187               	clrf	7	;volatile
   958     064E                     l861:
   959                           
   960                           ;function.c: 28:     TRISD=0x00;
   961     064E  0188               	clrf	8	;volatile
   962     064F                     l863:
   963                           
   964                           ;function.c: 29:     lcdcmd(0x30);
   965     064F  3030               	movlw	48
   966     0650  120A  118A  2610  120A  118A  	fcall	_lcdcmd
   967     0655                     l865:
   968                           
   969                           ;function.c: 30:     delay(100);
   970     0655  3064               	movlw	100
   971     0656  00F0               	movwf	delay@delaycount
   972     0657  3000               	movlw	0
   973     0658  00F1               	movwf	delay@delaycount+1
   974     0659  120A  118A  25CC  120A  118A  	fcall	_delay
   975     065E                     l867:
   976                           
   977                           ;function.c: 31:     lcdcmd(0x30);
   978     065E  3030               	movlw	48
   979     065F  120A  118A  2610  120A  118A  	fcall	_lcdcmd
   980     0664                     l869:
   981                           
   982                           ;function.c: 32:     delay(100);
   983     0664  3064               	movlw	100
   984     0665  00F0               	movwf	delay@delaycount
   985     0666  3000               	movlw	0
   986     0667  00F1               	movwf	delay@delaycount+1
   987     0668  120A  118A  25CC  120A  118A  	fcall	_delay
   988     066D                     l871:
   989                           
   990                           ;function.c: 33:     lcdcmd(0x30);
   991     066D  3030               	movlw	48
   992     066E  120A  118A  2610  120A  118A  	fcall	_lcdcmd
   993     0673                     l873:
   994                           
   995                           ;function.c: 34:     lcdcmd(0x38);
   996     0673  3038               	movlw	56
   997     0674  120A  118A  2610  120A  118A  	fcall	_lcdcmd
   998     0679                     l875:
   999                           
  1000                           ;function.c: 35:     lcdcmd(0x0C);
  1001     0679  300C               	movlw	12
  1002     067A  120A  118A  2610  120A  118A  	fcall	_lcdcmd
  1003     067F                     l877:
  1004                           
  1005                           ;function.c: 36:     lcddata(0x00);
  1006     067F  3000               	movlw	0
  1007     0680  120A  118A  25FB  120A  118A  	fcall	_lcddata
  1008     0685                     l879:
  1009                           
  1010                           ;function.c: 37:             lcdcmd(0x80);
  1011     0685  3080               	movlw	128
  1012     0686  120A  118A  2610  120A  118A  	fcall	_lcdcmd
  1013     068B                     l881:
  1014                           
  1015                           ;function.c: 38:     for(int i=0;i<13;i++)
  1016     068B  01F3               	clrf	init@i
  1017     068C  01F4               	clrf	init@i+1
  1018     068D                     l887:
  1019                           
  1020                           ;function.c: 39:         lcddata(d[i]);
  1021     068D  0873               	movf	init@i,w
  1022     068E  3E20               	addlw	(low (_d| 0))& (0+255)
  1023     068F  0084               	movwf	4
  1024     0690  1383               	bcf	3,7	;select IRP bank0
  1025     0691  0800               	movf	0,w
  1026     0692  120A  118A  25FB  120A  118A  	fcall	_lcddata
  1027     0697                     l889:
  1028     0697  3001               	movlw	1
  1029     0698  07F3               	addwf	init@i,f
  1030     0699  1803               	skipnc
  1031     069A  0AF4               	incf	init@i+1,f
  1032     069B  3000               	movlw	0
  1033     069C  07F4               	addwf	init@i+1,f
  1034     069D                     l891:
  1035     069D  0874               	movf	init@i+1,w
  1036     069E  3A80               	xorlw	128
  1037     069F  00FF               	movwf	btemp+1
  1038     06A0  3080               	movlw	128
  1039     06A1  027F               	subwf	btemp+1,w
  1040     06A2  1D03               	skipz
  1041     06A3  2EA6               	goto	u295
  1042     06A4  300D               	movlw	13
  1043     06A5  0273               	subwf	init@i,w
  1044     06A6                     u295:
  1045     06A6  1C03               	skipc
  1046     06A7  2EA9               	goto	u291
  1047     06A8  2EAA               	goto	u290
  1048     06A9                     u291:
  1049     06A9  2E8D               	goto	l887
  1050     06AA                     u290:
  1051     06AA                     l893:
  1052                           
  1053                           ;function.c: 40:         lcdcmd(0xC0);
  1054     06AA  30C0               	movlw	192
  1055     06AB  120A  118A  2610  120A  118A  	fcall	_lcdcmd
  1056     06B0                     l58:
  1057     06B0  0008               	return
  1058     06B1                     __end_of_init:
  1059                           
  1060                           	psect	text3
  1061     05FB                     __ptext3:	
  1062 ;; *************** function _lcddata *****************
  1063 ;; Defined at:
  1064 ;;		line 51 in file "function.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  i               1    wreg     unsigned char 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  i               1    2[COMMON] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         0       0       0       0       0
  1079 ;;      Locals:         1       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0
  1081 ;;      Totals:         1       0       0       0       0
  1082 ;;Total ram usage:        1 bytes
  1083 ;; Hardware stack levels used: 1
  1084 ;; Hardware stack levels required when called: 1
  1085 ;; This function calls:
  1086 ;;		_delay
  1087 ;; This function is called by:
  1088 ;;		_main
  1089 ;;		_init
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093     05FB                     _lcddata:	
  1094                           ;psect for function _lcddata
  1095                           
  1096                           
  1097                           ;incstack = 0
  1098                           ; Regs used in _lcddata: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1099                           ;lcddata@i stored from wreg
  1100     05FB  00F2               	movwf	lcddata@i
  1101     05FC                     l835:
  1102                           
  1103                           ;function.c: 51: void lcddata(unsigned char i);function.c: 52: {;function.c: 53:     POR
      +                          TC|=0x01;
  1104     05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1105     05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1106     05FE  1407               	bsf	7,0	;volatile
  1107     05FF                     l837:
  1108                           
  1109                           ;function.c: 54:     PORTD=i;
  1110     05FF  0872               	movf	lcddata@i,w
  1111     0600  0088               	movwf	8	;volatile
  1112     0601                     l839:
  1113                           
  1114                           ;function.c: 55:     PORTC|=0x02;
  1115     0601  1487               	bsf	7,1	;volatile
  1116     0602                     l841:
  1117                           
  1118                           ;function.c: 56:     PORTC&=~0x02;
  1119     0602  30FD               	movlw	253
  1120     0603  00FF               	movwf	btemp+1
  1121     0604  087F               	movf	btemp+1,w
  1122     0605  0587               	andwf	7,f	;volatile
  1123     0606                     l843:
  1124                           
  1125                           ;function.c: 57:     delay(100);
  1126     0606  3064               	movlw	100
  1127     0607  00F0               	movwf	delay@delaycount
  1128     0608  3000               	movlw	0
  1129     0609  00F1               	movwf	delay@delaycount+1
  1130     060A  120A  118A  25CC  120A  118A  	fcall	_delay
  1131     060F                     l64:
  1132     060F  0008               	return
  1133     0610                     __end_of_lcddata:
  1134                           
  1135                           	psect	text4
  1136     0610                     __ptext4:	
  1137 ;; *************** function _lcdcmd *****************
  1138 ;; Defined at:
  1139 ;;		line 42 in file "function.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  i               1    wreg     unsigned char 
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  i               1    2[COMMON] unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1153 ;;      Params:         0       0       0       0       0
  1154 ;;      Locals:         1       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0
  1156 ;;      Totals:         1       0       0       0       0
  1157 ;;Total ram usage:        1 bytes
  1158 ;; Hardware stack levels used: 1
  1159 ;; Hardware stack levels required when called: 1
  1160 ;; This function calls:
  1161 ;;		_delay
  1162 ;; This function is called by:
  1163 ;;		_init
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167     0610                     _lcdcmd:	
  1168                           ;psect for function _lcdcmd
  1169                           
  1170                           
  1171                           ;incstack = 0
  1172                           ; Regs used in _lcdcmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1173                           ;lcdcmd@i stored from wreg
  1174     0610  00F2               	movwf	lcdcmd@i
  1175     0611                     l845:
  1176                           
  1177                           ;function.c: 42: void lcdcmd(unsigned char i);function.c: 43: {;function.c: 44:     PORT
      +                          C&=~0x01;
  1178     0611  30FE               	movlw	254
  1179     0612  00FF               	movwf	btemp+1
  1180     0613  087F               	movf	btemp+1,w
  1181     0614  1283               	bcf	3,5	;RP0=0, select bank0
  1182     0615  1303               	bcf	3,6	;RP1=0, select bank0
  1183     0616  0587               	andwf	7,f	;volatile
  1184     0617                     l847:
  1185                           
  1186                           ;function.c: 45:     PORTD=i;
  1187     0617  0872               	movf	lcdcmd@i,w
  1188     0618  0088               	movwf	8	;volatile
  1189     0619                     l849:
  1190                           
  1191                           ;function.c: 46:     PORTC|=0x02;
  1192     0619  1487               	bsf	7,1	;volatile
  1193     061A                     l851:
  1194                           
  1195                           ;function.c: 47:     PORTC&=~0x02;
  1196     061A  30FD               	movlw	253
  1197     061B  00FF               	movwf	btemp+1
  1198     061C  087F               	movf	btemp+1,w
  1199     061D  0587               	andwf	7,f	;volatile
  1200     061E                     l853:
  1201                           
  1202                           ;function.c: 48:     delay(100);
  1203     061E  3064               	movlw	100
  1204     061F  00F0               	movwf	delay@delaycount
  1205     0620  3000               	movlw	0
  1206     0621  00F1               	movwf	delay@delaycount+1
  1207     0622  120A  118A  25CC  120A  118A  	fcall	_delay
  1208     0627                     l61:
  1209     0627  0008               	return
  1210     0628                     __end_of_lcdcmd:
  1211                           
  1212                           	psect	text5
  1213     05CC                     __ptext5:	
  1214 ;; *************** function _delay *****************
  1215 ;; Defined at:
  1216 ;;		line 60 in file "function.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  delaycount      2    0[COMMON] unsigned int 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         2       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0
  1233 ;;      Totals:         2       0       0       0       0
  1234 ;;Total ram usage:        2 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_init
  1240 ;;		_lcdcmd
  1241 ;;		_lcddata
  1242 ;;		_keyscan
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246     05CC                     _delay:	
  1247                           ;psect for function _delay
  1248                           
  1249     05CC                     l831:	
  1250                           ;incstack = 0
  1251                           ; Regs used in _delay: [wreg+status,2+status,0]
  1252                           
  1253     05CC                     l833:	
  1254                           ;function.c: 60: void delay(unsigned int delaycount);function.c: 61: {;function.c: 62:  
      +                             while(--delaycount);
  1255                           
  1256     05CC  3001               	movlw	1
  1257     05CD  02F0               	subwf	delay@delaycount,f
  1258     05CE  3000               	movlw	0
  1259     05CF  1C03               	skipc
  1260     05D0  03F1               	decf	delay@delaycount+1,f
  1261     05D1  02F1               	subwf	delay@delaycount+1,f
  1262     05D2  0870               	movf	delay@delaycount,w
  1263     05D3  0471               	iorwf	delay@delaycount+1,w
  1264     05D4  1D03               	btfss	3,2
  1265     05D5  2DD7               	goto	u281
  1266     05D6  2DD8               	goto	u280
  1267     05D7                     u281:
  1268     05D7  2DCC               	goto	l833
  1269     05D8                     u280:
  1270     05D8                     l70:
  1271     05D8  0008               	return
  1272     05D9                     __end_of_delay:
  1273     007E                     btemp	set	126	;btemp
  1274     007E                     wtemp0	set	126
  1275                           
  1276                           	psect	config
  1277                           
  1278                           ;Config register CONFIG @ 0x2007
  1279                           ;	Oscillator Selection bits
  1280                           ;	FOSC = EXTRC, RC oscillator
  1281                           ;	Watchdog Timer Enable bit
  1282                           ;	WDTE = OFF, WDT disabled
  1283                           ;	Power-up Timer Enable bit
  1284                           ;	PWRTE = OFF, PWRT disabled
  1285                           ;	Brown-out Reset Enable bit
  1286                           ;	BOREN = OFF, BOR disabled
  1287                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1288                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1289                           ;	Data EEPROM Memory Code Protection bit
  1290                           ;	CPD = OFF, Data EEPROM code protection off
  1291                           ;	Flash Program Memory Write Enable bits
  1292                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1293                           ;	In-Circuit Debugger Mode bit
  1294                           ;	DEBUG = 0x1, unprogrammed default
  1295                           ;	Flash Program Memory Code Protection bit
  1296                           ;	CP = OFF, Code protection off
  1297     2007                     	org	8199
  1298     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_init
    _keyscan->_delay
    _init->_lcdcmd
    _init->_lcddata
    _lcddata->_delay
    _lcdcmd->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7844
                               _init
                            _keyscan
                            _lcddata
 ---------------------------------------------------------------------------------
 (1) _keyscan                                              0     0      0    1542
                              _delay
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0    4738
                                              3 COMMON     2     2      0
                              _delay
                             _lcdcmd
                            _lcddata
 ---------------------------------------------------------------------------------
 (1) _lcddata                                              1     1      0    1564
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _lcdcmd                                               1     1      0    1564
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                2     0      2    1542
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _delay
     _lcdcmd
       _delay
     _lcddata
       _delay
   _keyscan
     _delay
   _lcddata

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       F       5       18.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       6       1       42.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      15      12        0.0%
ABS                  0      0      15       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Feb 10 14:00:15 2024

                      _d 0020                        pc 0002                       l61 0627  
                     l70 05D8                       l64 060F                       l73 06D7  
                     l58 06B0                       l90 073A                       l82 0701  
                     l74 06CF                       l91 0732                       l83 06F9  
                     l77 07EC                       l94 074F                       l86 0725  
                     l78 06EC                       l95 0747                       l87 071D  
                     l79 06E4                       l98 0773                       l99 076B  
                     fsr 0004                      l110 07C1                      l102 0788  
                    l111 07B9                      l103 0780                      l114 07D6  
                    l106 079D                      l115 07CE                      l107 0795  
                    l119 07E3                      l901 06C6                      l831 05CC  
                    l903 06D5                      l833 05CC                      l841 0602  
                    l921 070E                      l913 06F0                      l851 061A  
                    l843 0606                      l835 05FC                      l931 0738  
                    l923 0714                      l915 06FF                      l907 06DB  
                    l853 061E                      l845 0611                      l837 05FF  
                    l861 064E                      l941 0753                      l925 0723  
                    l909 06EA                      l847 0617                      l839 0601  
                    l871 066D                      l863 064F                      l855 0642  
                    l951 0777                      l943 075C                      l935 073E  
                    l919 0705                      l849 0619                      l881 068B  
                    l873 0673                      l865 0655                      l857 0648  
                    l953 0786                      l945 0762                      l937 074D  
                    l929 0729                      l891 069D                      l875 0679  
                    l867 065E                      l859 064B                      l963 07A1  
                    l947 0771                      l893 06AA                      l877 067F  
                    l869 0664                      l981 07E9                      l973 07C5  
                    l965 07AA                      l957 078C                      l887 068D  
                    l879 0685                      l975 07D4                      l967 07B0  
                    l959 079B                      l895 06B1                      l991 062D  
                    l889 0697                      l985 07EB                      l969 07BF  
                    l897 06B7                      l993 0633                      l979 07DA  
                    l899 06C0                      l995 0638                      l989 0628  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      _RB4 0034                      _RB5 0035  
                    _RB6 0036                      u300 06C6                      u301 06C5  
                    u310 06D5                      u311 06D4                      u400 073E  
                    u320 06DB                      u401 073D                      u321 06DA  
                    u410 074D                      u330 06EA                      u411 074C  
                    u331 06E9                      u500 07C5                      u420 0762  
                    u340 06F0                      u501 07C4                      u421 0761  
                    u341 06EF                      u510 07D4                      u430 0771  
                    u350 06FF                      u511 07D3                      u431 0770  
                    u351 06FE                      u280 05D8                      u520 07DA  
                    u440 0777                      u360 0714                      u281 05D7  
                    u521 07D9                      u441 0776                      u361 0713  
                    u290 06AA                      u530 07E9                      u450 0786  
                    u370 0723                      u291 06A9                      u531 07E8  
                    u451 0785                      u371 0722                      u460 078C  
                    u380 0729                      u540 0638                      u461 078B  
                    u381 0728                      u541 0637                      u470 079B  
                    u390 0738                      u295 06A6                      u471 079A  
                    u391 0737                      u480 07B0                      u481 07AF  
                    u490 07BF                      u491 07BE                      fsr0 0004  
                    indf 0000                     _main 0628                     _init 0642  
                   _scan 0075                     btemp 007E                     start 0000  
                  ?_main 0070                    ?_init 0070                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088          __end_of_lcddata 0610  
                  _delay 05CC          __end_of_keyscan 07ED                    init@i 0073  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07ED             __end_of_main 0642             __end_of_init 06B1  
                 ??_main 0075                   ??_init 0073                   ?_delay 0070  
                 _lcdcmd 0610                ??_lcddata 0072                ??_keyscan 0072  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 05D9  
          __end_of_delay 05D9                  ??_delay 0072               __pmaintext 0628  
                ?_lcdcmd 0070                  __ptext1 06B1                  __ptext2 0642  
                __ptext3 05FB                  __ptext4 0610                  __ptext5 05CC  
                _lcddata 05FB                  _keyscan 06B1                  lcdcmd@i 0072  
   end_of_initialization 07FC           __end_of_lcdcmd 0628      start_initialization 07ED  
             init_fetch0 05E8                 ??_lcdcmd 0072              __pdataBANK0 0020  
        delay@delaycount 0070              __pbssCOMMON 0075                ___latbits 0002  
               ?_lcddata 0070                 ?_keyscan 0070                 lcddata@i 0072  
               init_ram0 05EC               _OPTION_REG 0081  
