

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Jan 12 11:25:39 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 22/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167                           
   168                           	psect	nvCOMMON
   169     0070                     __pnvCOMMON:
   170     0070                     _msb90:
   171     0070                     	ds	1
   172     0071                     _lsb90:
   173     0071                     	ds	1
   174     0072                     _msb60:
   175     0072                     	ds	1
   176     0073                     _lsb60:
   177     0073                     	ds	1
   178     0074                     _msb20:
   179     0074                     	ds	1
   180     0075                     _lsb20:
   181     0075                     	ds	1
   182     0012                     _T2CON	set	18
   183     0015                     _CCPR1L	set	21
   184     0017                     _CCP1CON	set	23
   185     0092                     _PR2	set	146
   186     0087                     _TRISC	set	135
   187                           
   188                           	psect	cinit
   189     07FC                     start_initialization:	
   190                           ; #config settings
   191                           
   192     07FC                     __initialization:
   193     07FC                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196     07FC                     __end_of__initialization:
   197     07FC  0183               	clrf	3
   198     07FD  120A  118A  2F91   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	cstackCOMMON
   201     0076                     __pcstackCOMMON:
   202     0076                     ?_init:
   203     0076                     ??_init:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0076                     ?_pwmchange:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0076                     ??_pwmchange:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0076                     ?_main:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 1 bytes @ 0x0
   217     0076                     	ds	3
   218     0079                     ??_main:
   219                           
   220                           	psect	maintext
   221     0791                     __pmaintext:	
   222                           ; 1 bytes @ 0x3
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 26 in file "task.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          0       0       0       0       0
   245 ;;      Totals:         0       0       0       0       0
   246 ;;Total ram usage:        0 bytes
   247 ;; Hardware stack levels required when called: 1
   248 ;; This function calls:
   249 ;;		_init
   250 ;;		_pwmchange
   251 ;; This function is called by:
   252 ;;		Startup code after reset
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256     0791                     _main:	
   257                           ;psect for function _main
   258                           
   259     0791                     l602:	
   260                           ;incstack = 0
   261                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   262                           
   263                           
   264                           ;task.c: 27:         init();
   265     0791  120A  118A  279F  120A  118A  	fcall	_init
   266     0796                     l33:	
   267                           ;task.c: 28:         while(1)
   268                           
   269                           
   270                           ;task.c: 29:             pwmchange();
   271     0796  120A  118A  27BC  120A  118A  	fcall	_pwmchange
   272     079B  2F96               	goto	l33
   273     079C  120A  118A  2800   	ljmp	start
   274     079F                     __end_of_main:
   275                           
   276                           	psect	text1
   277     07BC                     __ptext1:	
   278 ;; *************** function _pwmchange *****************
   279 ;; Defined at:
   280 ;;		line 45 in file "task.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;		None
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2, status,0
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   294 ;;      Params:         0       0       0       0       0
   295 ;;      Locals:         0       0       0       0       0
   296 ;;      Temps:          3       0       0       0       0
   297 ;;      Totals:         3       0       0       0       0
   298 ;;Total ram usage:        3 bytes
   299 ;; Hardware stack levels used: 1
   300 ;; This function calls:
   301 ;;		Nothing
   302 ;; This function is called by:
   303 ;;		_main
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307     07BC                     _pwmchange:	
   308                           ;psect for function _pwmchange
   309                           
   310     07BC                     l588:	
   311                           ;incstack = 0
   312                           ; Regs used in _pwmchange: [wreg+status,2+status,0]
   313                           
   314                           
   315                           ;task.c: 47:     CCPR1L=msb20;
   316     07BC  0874               	movf	_msb20,w
   317     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   318     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   319     07BF  0095               	movwf	21	;volatile
   320     07C0                     l590:
   321                           
   322                           ;task.c: 48:     CCP1CON=((CCP1CON&0xCF)|lsb20);
   323     07C0  0817               	movf	23,w	;volatile
   324     07C1  39CF               	andlw	207
   325     07C2  0475               	iorwf	_lsb20,w
   326     07C3  0097               	movwf	23	;volatile
   327     07C4                     l592:
   328                           
   329                           ;task.c: 49:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   330     07C4  3017               	movlw	23
   331     07C5  00F8               	movwf	??_pwmchange+2
   332     07C6  30D5               	movlw	213
   333     07C7  00F7               	movwf	??_pwmchange+1
   334     07C8  3016               	movlw	22
   335     07C9  00F6               	movwf	??_pwmchange
   336     07CA                     u17:
   337     07CA  0BF6               	decfsz	??_pwmchange,f
   338     07CB  2FCA               	goto	u17
   339     07CC  0BF7               	decfsz	??_pwmchange+1,f
   340     07CD  2FCA               	goto	u17
   341     07CE  0BF8               	decfsz	??_pwmchange+2,f
   342     07CF  2FCA               	goto	u17
   343     07D0  0000               	nop
   344     07D1                     l594:
   345                           
   346                           ;task.c: 50:     CCPR1L=msb60;
   347     07D1  0872               	movf	_msb60,w
   348     07D2  1283               	bcf	3,5	;RP0=0, select bank0
   349     07D3  1303               	bcf	3,6	;RP1=0, select bank0
   350     07D4  0095               	movwf	21	;volatile
   351     07D5                     l596:
   352                           
   353                           ;task.c: 51:     CCP1CON=((CCP1CON&0xCF)|lsb60);
   354     07D5  0817               	movf	23,w	;volatile
   355     07D6  39CF               	andlw	207
   356     07D7  0473               	iorwf	_lsb60,w
   357     07D8  0097               	movwf	23	;volatile
   358                           
   359                           ;task.c: 52:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   360     07D9  3017               	movlw	23
   361     07DA  00F8               	movwf	??_pwmchange+2
   362     07DB  30D5               	movlw	213
   363     07DC  00F7               	movwf	??_pwmchange+1
   364     07DD  3016               	movlw	22
   365     07DE  00F6               	movwf	??_pwmchange
   366     07DF                     u27:
   367     07DF  0BF6               	decfsz	??_pwmchange,f
   368     07E0  2FDF               	goto	u27
   369     07E1  0BF7               	decfsz	??_pwmchange+1,f
   370     07E2  2FDF               	goto	u27
   371     07E3  0BF8               	decfsz	??_pwmchange+2,f
   372     07E4  2FDF               	goto	u27
   373     07E5  0000               	nop
   374                           
   375                           ;task.c: 53:     CCPR1L=msb90;
   376     07E6  0870               	movf	_msb90,w
   377     07E7  1283               	bcf	3,5	;RP0=0, select bank0
   378     07E8  1303               	bcf	3,6	;RP1=0, select bank0
   379     07E9  0095               	movwf	21	;volatile
   380     07EA                     l598:
   381                           
   382                           ;task.c: 54:     CCP1CON=((CCP1CON&0xCF)|lsb90);
   383     07EA  0817               	movf	23,w	;volatile
   384     07EB  39CF               	andlw	207
   385     07EC  0471               	iorwf	_lsb90,w
   386     07ED  0097               	movwf	23	;volatile
   387     07EE                     l600:
   388                           
   389                           ;task.c: 55:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   390     07EE  3017               	movlw	23
   391     07EF  00F8               	movwf	??_pwmchange+2
   392     07F0  30D5               	movlw	213
   393     07F1  00F7               	movwf	??_pwmchange+1
   394     07F2  3016               	movlw	22
   395     07F3  00F6               	movwf	??_pwmchange
   396     07F4                     u37:
   397     07F4  0BF6               	decfsz	??_pwmchange,f
   398     07F5  2FF4               	goto	u37
   399     07F6  0BF7               	decfsz	??_pwmchange+1,f
   400     07F7  2FF4               	goto	u37
   401     07F8  0BF8               	decfsz	??_pwmchange+2,f
   402     07F9  2FF4               	goto	u37
   403     07FA  0000               	nop
   404     07FB                     l42:
   405     07FB  0008               	return
   406     07FC                     __end_of_pwmchange:
   407                           
   408                           	psect	text2
   409     079F                     __ptext2:	
   410 ;; *************** function _init *****************
   411 ;; Defined at:
   412 ;;		line 31 in file "task.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0
   429 ;;      Totals:         0       0       0       0       0
   430 ;;Total ram usage:        0 bytes
   431 ;; Hardware stack levels used: 1
   432 ;; This function calls:
   433 ;;		Nothing
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439     079F                     _init:	
   440                           ;psect for function _init
   441                           
   442     079F                     l586:	
   443                           ;incstack = 0
   444                           ; Regs used in _init: [wreg]
   445                           
   446                           
   447                           ;task.c: 33:         TRISC=0xFB;
   448     079F  30FB               	movlw	251
   449     07A0  1683               	bsf	3,5	;RP0=1, select bank1
   450     07A1  1303               	bcf	3,6	;RP1=0, select bank1
   451     07A2  0087               	movwf	7	;volatile
   452                           
   453                           ;task.c: 34:         CCP1CON=0x3C;
   454     07A3  303C               	movlw	60
   455     07A4  1283               	bcf	3,5	;RP0=0, select bank0
   456     07A5  1303               	bcf	3,6	;RP1=0, select bank0
   457     07A6  0097               	movwf	23	;volatile
   458                           
   459                           ;task.c: 35:         CCPR1L=0x2E;
   460     07A7  302E               	movlw	46
   461     07A8  0095               	movwf	21	;volatile
   462                           
   463                           ;task.c: 36:         T2CON=0x06;
   464     07A9  3006               	movlw	6
   465     07AA  0092               	movwf	18	;volatile
   466                           
   467                           ;task.c: 37:         PR2=0x2E;
   468     07AB  302E               	movlw	46
   469     07AC  1683               	bsf	3,5	;RP0=1, select bank1
   470     07AD  1303               	bcf	3,6	;RP1=0, select bank1
   471     07AE  0092               	movwf	18	;volatile
   472                           
   473                           ;task.c: 38:         lsb20=0x20;
   474     07AF  3020               	movlw	32
   475     07B0  00F5               	movwf	_lsb20
   476                           
   477                           ;task.c: 39:         msb20=0x09;
   478     07B1  3009               	movlw	9
   479     07B2  00F4               	movwf	_msb20
   480                           
   481                           ;task.c: 40:         lsb60=0x10;
   482     07B3  3010               	movlw	16
   483     07B4  00F3               	movwf	_lsb60
   484                           
   485                           ;task.c: 41:         msb60=0x1C;
   486     07B5  301C               	movlw	28
   487     07B6  00F2               	movwf	_msb60
   488                           
   489                           ;task.c: 42:         lsb90=0x10;
   490     07B7  3010               	movlw	16
   491     07B8  00F1               	movwf	_lsb90
   492                           
   493                           ;task.c: 43:         msb90=0x2A;
   494     07B9  302A               	movlw	42
   495     07BA  00F0               	movwf	_msb90
   496     07BB                     l39:
   497     07BB  0008               	return
   498     07BC                     __end_of_init:
   499     007E                     btemp	set	126	;btemp
   500     007E                     wtemp0	set	126
   501                           
   502                           	psect	config
   503                           
   504                           ;Config register CONFIG @ 0x2007
   505                           ;	Oscillator Selection bits
   506                           ;	FOSC = EXTRC, RC oscillator
   507                           ;	Watchdog Timer Enable bit
   508                           ;	WDTE = OFF, WDT disabled
   509                           ;	Power-up Timer Enable bit
   510                           ;	PWRTE = OFF, PWRT disabled
   511                           ;	Brown-out Reset Enable bit
   512                           ;	BOREN = OFF, BOR disabled
   513                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   514                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   515                           ;	Data EEPROM Memory Code Protection bit
   516                           ;	CPD = OFF, Data EEPROM code protection off
   517                           ;	Flash Program Memory Write Enable bits
   518                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   519                           ;	In-Circuit Debugger Mode bit
   520                           ;	DEBUG = 0x1, unprogrammed default
   521                           ;	Flash Program Memory Code Protection bit
   522                           ;	CP = OFF, Code protection off
   523     2007                     	org	8199
   524     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_pwmchange

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
                          _pwmchange
 ---------------------------------------------------------------------------------
 (1) _pwmchange                                            3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _pwmchange

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Jan 12 11:25:39 2024

                     l33 0796                       l42 07FB                       l39 07BB  
                     u17 07CA                       u27 07DF                       u37 07F4  
                    l600 07EE                      l602 0791                      l590 07C0  
                    l592 07C4                      l586 079F                      l594 07D1  
                    l596 07D5                      l588 07BC                      l598 07EA  
                    _PR2 0092                     _main 0791                     _init 079F  
                   btemp 007E                     start 0000                    ?_main 0076  
                  ?_init 0076                    _T2CON 0012                    _TRISC 0087  
                  _lsb20 0075                    _lsb60 0073                    _lsb90 0071  
                  _msb20 0074                    _msb60 0072                    _msb90 0070  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 079F             __end_of_init 07BC                   ??_main 0079  
                 ??_init 0076                   _CCPR1L 0015  __end_of__initialization 07FC  
         __pcstackCOMMON 0076               __pnvCOMMON 0070               __pmaintext 0791  
                _CCP1CON 0017                  __ptext1 07BC                  __ptext2 079F  
   end_of_initialization 07FC        __end_of_pwmchange 07FC      start_initialization 07FC  
              ___latbits 0002                _pwmchange 07BC               ?_pwmchange 0076  
            ??_pwmchange 0076  
