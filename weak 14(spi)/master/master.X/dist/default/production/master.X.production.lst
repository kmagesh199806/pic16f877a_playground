

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Apr 30 21:33:41 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0000                     	;# 
   169     0001                     	;# 
   170     0002                     	;# 
   171     0003                     	;# 
   172     0004                     	;# 
   173     0005                     	;# 
   174     0006                     	;# 
   175     0007                     	;# 
   176     0008                     	;# 
   177     0009                     	;# 
   178     000A                     	;# 
   179     000B                     	;# 
   180     000C                     	;# 
   181     000D                     	;# 
   182     000E                     	;# 
   183     000E                     	;# 
   184     000F                     	;# 
   185     0010                     	;# 
   186     0011                     	;# 
   187     0012                     	;# 
   188     0013                     	;# 
   189     0014                     	;# 
   190     0015                     	;# 
   191     0015                     	;# 
   192     0016                     	;# 
   193     0017                     	;# 
   194     0018                     	;# 
   195     0019                     	;# 
   196     001A                     	;# 
   197     001B                     	;# 
   198     001B                     	;# 
   199     001C                     	;# 
   200     001D                     	;# 
   201     001E                     	;# 
   202     001F                     	;# 
   203     0081                     	;# 
   204     0085                     	;# 
   205     0086                     	;# 
   206     0087                     	;# 
   207     0088                     	;# 
   208     0089                     	;# 
   209     008C                     	;# 
   210     008D                     	;# 
   211     008E                     	;# 
   212     0091                     	;# 
   213     0092                     	;# 
   214     0093                     	;# 
   215     0094                     	;# 
   216     0098                     	;# 
   217     0099                     	;# 
   218     009C                     	;# 
   219     009D                     	;# 
   220     009E                     	;# 
   221     009F                     	;# 
   222     010C                     	;# 
   223     010D                     	;# 
   224     010E                     	;# 
   225     010F                     	;# 
   226     018C                     	;# 
   227     018D                     	;# 
   228     0013                     _SSPBUF	set	19
   229     0008                     _PORTD	set	8
   230     0006                     _PORTB	set	6
   231     0014                     _SSPCON	set	20
   232     0032                     _RB2	set	50
   233     0031                     _RB1	set	49
   234     0030                     _RB0	set	48
   235     0088                     _TRISD	set	136
   236     0086                     _TRISB	set	134
   237     0087                     _TRISC	set	135
   238     04A7                     _SMP	set	1191
   239     04A6                     _CKE	set	1190
   240                           
   241                           	psect	cinit
   242     07FA                     start_initialization:	
   243                           ; #config settings
   244                           
   245     07FA                     __initialization:
   246                           
   247                           ; Clear objects allocated to COMMON
   248     07FA  01F7               	clrf	__pbssCOMMON& (0+127)
   249     07FB  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   250     07FC                     end_of_initialization:	
   251                           ;End of C runtime variable initialization code
   252                           
   253     07FC                     __end_of__initialization:
   254     07FC  0183               	clrf	3
   255     07FD  120A  118A  2F81   	ljmp	_main	;jump to C main() function
   256                           
   257                           	psect	bssCOMMON
   258     0077                     __pbssCOMMON:
   259     0077                     _data:
   260     0077                     	ds	2
   261                           
   262                           	psect	cstackCOMMON
   263     0070                     __pcstackCOMMON:
   264     0070                     ?_spi_intialize:
   265     0070                     ??_spi_intialize:	
   266                           ; 1 bytes @ 0x0
   267                           
   268     0070                     ?_switchp:	
   269                           ; 1 bytes @ 0x0
   270                           
   271     0070                     ?_spiwrite:	
   272                           ; 1 bytes @ 0x0
   273                           
   274     0070                     ?_main:	
   275                           ; 1 bytes @ 0x0
   276                           
   277     0070                     spiwrite@i:	
   278                           ; 1 bytes @ 0x0
   279                           
   280                           
   281                           ; 2 bytes @ 0x0
   282     0070                     	ds	2
   283     0072                     ??_spiwrite:
   284                           
   285                           ; 1 bytes @ 0x2
   286     0072                     	ds	2
   287     0074                     ??_switchp:
   288                           
   289                           ; 1 bytes @ 0x4
   290     0074                     	ds	3
   291     0077                     ??_main:
   292                           
   293                           	psect	maintext
   294     0781                     __pmaintext:	
   295                           ; 1 bytes @ 0x7
   296 ;;
   297 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   298 ;;
   299 ;; *************** function _main *****************
   300 ;; Defined at:
   301 ;;		line 20 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, pclath, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : B00/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   315 ;;      Params:         0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0
   318 ;;      Totals:         0       0       0       0       0
   319 ;;Total ram usage:        0 bytes
   320 ;; Hardware stack levels required when called: 2
   321 ;; This function calls:
   322 ;;		_spi_intialize
   323 ;;		_switchp
   324 ;; This function is called by:
   325 ;;		Startup code after reset
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329     0781                     _main:	
   330                           ;psect for function _main
   331                           
   332     0781                     l646:	
   333                           ;incstack = 0
   334                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   335                           
   336                           
   337                           ;main.c: 22: spi_intialize();
   338     0781  120A  118A  278F  120A  118A  	fcall	_spi_intialize
   339     0786                     l9:	
   340                           ;main.c: 23: while(1)
   341                           
   342                           
   343                           ;main.c: 24: {;main.c: 25:     switchp();
   344     0786  120A  118A  27A7  120A  118A  	fcall	_switchp
   345     078B  2F86               	goto	l9
   346     078C  120A  118A  2800   	ljmp	start
   347     078F                     __end_of_main:
   348                           
   349                           	psect	text1
   350     07A7                     __ptext1:	
   351 ;; *************** function _switchp *****************
   352 ;; Defined at:
   353 ;;		line 18 in file "function.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      void 
   360 ;; Registers used:
   361 ;;		wreg, status,2, status,0, pclath, cstack
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   367 ;;      Params:         0       0       0       0       0
   368 ;;      Locals:         0       0       0       0       0
   369 ;;      Temps:          3       0       0       0       0
   370 ;;      Totals:         3       0       0       0       0
   371 ;;Total ram usage:        3 bytes
   372 ;; Hardware stack levels used: 1
   373 ;; Hardware stack levels required when called: 1
   374 ;; This function calls:
   375 ;;		_spiwrite
   376 ;; This function is called by:
   377 ;;		_main
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381     07A7                     _switchp:	
   382                           ;psect for function _switchp
   383                           
   384     07A7                     l630:	
   385                           ;incstack = 0
   386                           ; Regs used in _switchp: [wreg+status,2+status,0+pclath+cstack]
   387                           
   388                           
   389                           ;function.c: 21: if(RB0)
   390     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   391     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   392     07A9  1C06               	btfss	6,0	;volatile
   393     07AA  2FAC               	goto	u41
   394     07AB  2FAD               	goto	u40
   395     07AC                     u41:
   396     07AC  2FC0               	goto	l634
   397     07AD                     u40:
   398     07AD                     l632:
   399                           
   400                           ;function.c: 22: {;function.c: 23: data++;
   401     07AD  3001               	movlw	1
   402     07AE  07F7               	addwf	_data,f
   403     07AF  1803               	skipnc
   404     07B0  0AF8               	incf	_data+1,f
   405     07B1  3000               	movlw	0
   406     07B2  07F8               	addwf	_data+1,f
   407                           
   408                           ;function.c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
   409     07B3  3002               	movlw	2
   410     07B4  00F6               	movwf	??_switchp+2
   411     07B5  3045               	movlw	69
   412     07B6  00F5               	movwf	??_switchp+1
   413     07B7  30A9               	movlw	169
   414     07B8  00F4               	movwf	??_switchp
   415     07B9                     u77:
   416     07B9  0BF4               	decfsz	??_switchp,f
   417     07BA  2FB9               	goto	u77
   418     07BB  0BF5               	decfsz	??_switchp+1,f
   419     07BC  2FB9               	goto	u77
   420     07BD  0BF6               	decfsz	??_switchp+2,f
   421     07BE  2FB9               	goto	u77
   422     07BF  2FC0               	nop2
   423     07C0                     l634:
   424                           
   425                           ;function.c: 26: if(RB1)
   426     07C0  1283               	bcf	3,5	;RP0=0, select bank0
   427     07C1  1303               	bcf	3,6	;RP1=0, select bank0
   428     07C2  1C86               	btfss	6,1	;volatile
   429     07C3  2FC5               	goto	u51
   430     07C4  2FC6               	goto	u50
   431     07C5                     u51:
   432     07C5  2FD9               	goto	l638
   433     07C6                     u50:
   434     07C6                     l636:
   435                           
   436                           ;function.c: 27: {;function.c: 28: data--;
   437     07C6  3001               	movlw	1
   438     07C7  02F7               	subwf	_data,f
   439     07C8  3000               	movlw	0
   440     07C9  1C03               	skipc
   441     07CA  03F8               	decf	_data+1,f
   442     07CB  02F8               	subwf	_data+1,f
   443                           
   444                           ;function.c: 29: _delay((unsigned long)((50)*(20000000/4000.0)));
   445     07CC  3002               	movlw	2
   446     07CD  00F6               	movwf	??_switchp+2
   447     07CE  3045               	movlw	69
   448     07CF  00F5               	movwf	??_switchp+1
   449     07D0  30A9               	movlw	169
   450     07D1  00F4               	movwf	??_switchp
   451     07D2                     u87:
   452     07D2  0BF4               	decfsz	??_switchp,f
   453     07D3  2FD2               	goto	u87
   454     07D4  0BF5               	decfsz	??_switchp+1,f
   455     07D5  2FD2               	goto	u87
   456     07D6  0BF6               	decfsz	??_switchp+2,f
   457     07D7  2FD2               	goto	u87
   458     07D8  2FD9               	nop2
   459     07D9                     l638:
   460                           
   461                           ;function.c: 31: if(RB2)
   462     07D9  1283               	bcf	3,5	;RP0=0, select bank0
   463     07DA  1303               	bcf	3,6	;RP1=0, select bank0
   464     07DB  1D06               	btfss	6,2	;volatile
   465     07DC  2FDE               	goto	u61
   466     07DD  2FDF               	goto	u60
   467     07DE                     u61:
   468     07DE  2FF5               	goto	l644
   469     07DF                     u60:
   470     07DF                     l640:
   471                           
   472                           ;function.c: 32: {;function.c: 33: spiwrite(data);
   473     07DF  0878               	movf	_data+1,w
   474     07E0  00F1               	movwf	spiwrite@i+1
   475     07E1  0877               	movf	_data,w
   476     07E2  00F0               	movwf	spiwrite@i
   477     07E3  120A  118A  2773  120A  118A  	fcall	_spiwrite
   478     07E8                     l642:
   479                           
   480                           ;function.c: 34: _delay((unsigned long)((50)*(20000000/4000.0)));
   481     07E8  3002               	movlw	2
   482     07E9  00F6               	movwf	??_switchp+2
   483     07EA  3045               	movlw	69
   484     07EB  00F5               	movwf	??_switchp+1
   485     07EC  30A9               	movlw	169
   486     07ED  00F4               	movwf	??_switchp
   487     07EE                     u97:
   488     07EE  0BF4               	decfsz	??_switchp,f
   489     07EF  2FEE               	goto	u97
   490     07F0  0BF5               	decfsz	??_switchp+1,f
   491     07F1  2FEE               	goto	u97
   492     07F2  0BF6               	decfsz	??_switchp+2,f
   493     07F3  2FEE               	goto	u97
   494     07F4  2FF5               	nop2
   495     07F5                     l644:
   496                           
   497                           ;function.c: 36: PORTD=data;
   498     07F5  0877               	movf	_data,w
   499     07F6  1283               	bcf	3,5	;RP0=0, select bank0
   500     07F7  1303               	bcf	3,6	;RP1=0, select bank0
   501     07F8  0088               	movwf	8	;volatile
   502     07F9                     l51:
   503     07F9  0008               	return
   504     07FA                     __end_of_switchp:
   505                           
   506                           	psect	text2
   507     0773                     __ptext2:	
   508 ;; *************** function _spiwrite *****************
   509 ;; Defined at:
   510 ;;		line 39 in file "function.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;  i               2    0[COMMON] unsigned int 
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         2       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          2       0       0       0       0
   527 ;;      Totals:         4       0       0       0       0
   528 ;;Total ram usage:        4 bytes
   529 ;; Hardware stack levels used: 1
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		_switchp
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537     0773                     _spiwrite:	
   538                           ;psect for function _spiwrite
   539                           
   540     0773                     l628:	
   541                           ;incstack = 0
   542                           ; Regs used in _spiwrite: [wreg]
   543                           
   544                           
   545                           ;function.c: 39: void spiwrite(unsigned int i);function.c: 40: {;function.c: 41: SSPBUF=
      +                          i;
   546     0773  0870               	movf	spiwrite@i,w
   547     0774  1283               	bcf	3,5	;RP0=0, select bank0
   548     0775  1303               	bcf	3,6	;RP1=0, select bank0
   549     0776  0093               	movwf	19	;volatile
   550                           
   551                           ;function.c: 42: _delay((unsigned long)((20)*(20000000/4000.0)));
   552     0777  3082               	movlw	130
   553     0778  00F3               	movwf	??_spiwrite+1
   554     0779  30DD               	movlw	221
   555     077A  00F2               	movwf	??_spiwrite
   556     077B                     u107:
   557     077B  0BF2               	decfsz	??_spiwrite,f
   558     077C  2F7B               	goto	u107
   559     077D  0BF3               	decfsz	??_spiwrite+1,f
   560     077E  2F7B               	goto	u107
   561     077F  2F80               	nop2
   562     0780                     l54:
   563     0780  0008               	return
   564     0781                     __end_of_spiwrite:
   565                           
   566                           	psect	text3
   567     078F                     __ptext3:	
   568 ;; *************** function _spi_intialize *****************
   569 ;; Defined at:
   570 ;;		line 7 in file "function.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;		None
   573 ;; Auto vars:     Size  Location     Type
   574 ;;		None
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg, status,2
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   584 ;;      Params:         0       0       0       0       0
   585 ;;      Locals:         0       0       0       0       0
   586 ;;      Temps:          0       0       0       0       0
   587 ;;      Totals:         0       0       0       0       0
   588 ;;Total ram usage:        0 bytes
   589 ;; Hardware stack levels used: 1
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597     078F                     _spi_intialize:	
   598                           ;psect for function _spi_intialize
   599                           
   600     078F                     l600:	
   601                           ;incstack = 0
   602                           ; Regs used in _spi_intialize: [wreg+status,2]
   603                           
   604                           
   605                           ;function.c: 9: CKE=0;
   606     078F  1683               	bsf	3,5	;RP0=1, select bank1
   607     0790  1303               	bcf	3,6	;RP1=0, select bank1
   608     0791  1314               	bcf	20,6	;volatile
   609                           
   610                           ;function.c: 10: SMP=0;
   611     0792  1394               	bcf	20,7	;volatile
   612     0793                     l602:
   613                           
   614                           ;function.c: 11: SSPCON=0x20;
   615     0793  3020               	movlw	32
   616     0794  1283               	bcf	3,5	;RP0=0, select bank0
   617     0795  1303               	bcf	3,6	;RP1=0, select bank0
   618     0796  0094               	movwf	20	;volatile
   619                           
   620                           ;function.c: 12: TRISC=0x10;
   621     0797  3010               	movlw	16
   622     0798  1683               	bsf	3,5	;RP0=1, select bank1
   623     0799  1303               	bcf	3,6	;RP1=0, select bank1
   624     079A  0087               	movwf	7	;volatile
   625                           
   626                           ;function.c: 13: TRISB=0x07;
   627     079B  3007               	movlw	7
   628     079C  0086               	movwf	6	;volatile
   629     079D                     l604:
   630                           
   631                           ;function.c: 14: PORTB=0x00;
   632     079D  1283               	bcf	3,5	;RP0=0, select bank0
   633     079E  1303               	bcf	3,6	;RP1=0, select bank0
   634     079F  0186               	clrf	6	;volatile
   635     07A0                     l606:
   636                           
   637                           ;function.c: 15: TRISD=0x00;
   638     07A0  1683               	bsf	3,5	;RP0=1, select bank1
   639     07A1  1303               	bcf	3,6	;RP1=0, select bank1
   640     07A2  0188               	clrf	8	;volatile
   641     07A3                     l608:
   642                           
   643                           ;function.c: 16: PORTD=0x00;
   644     07A3  1283               	bcf	3,5	;RP0=0, select bank0
   645     07A4  1303               	bcf	3,6	;RP1=0, select bank0
   646     07A5  0188               	clrf	8	;volatile
   647     07A6                     l45:
   648     07A6  0008               	return
   649     07A7                     __end_of_spi_intialize:
   650     007E                     btemp	set	126	;btemp
   651     007E                     wtemp0	set	126
   652                           
   653                           	psect	config
   654                           
   655                           ;Config register CONFIG @ 0x2007
   656                           ;	Oscillator Selection bits
   657                           ;	FOSC = EXTRC, RC oscillator
   658                           ;	Watchdog Timer Enable bit
   659                           ;	WDTE = OFF, WDT disabled
   660                           ;	Power-up Timer Enable bit
   661                           ;	PWRTE = OFF, PWRT disabled
   662                           ;	Brown-out Reset Enable bit
   663                           ;	BOREN = OFF, BOR disabled
   664                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   665                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   666                           ;	Data EEPROM Memory Code Protection bit
   667                           ;	CPD = OFF, Data EEPROM code protection off
   668                           ;	Flash Program Memory Write Enable bits
   669                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   670                           ;	In-Circuit Debugger Mode bit
   671                           ;	DEBUG = 0x1, unprogrammed default
   672                           ;	Flash Program Memory Code Protection bit
   673                           ;	CP = OFF, Code protection off
   674     2007                     	org	8199
   675     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_switchp
    _switchp->_spiwrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      98
                      _spi_intialize
                            _switchp
 ---------------------------------------------------------------------------------
 (1) _switchp                                              3     3      0      98
                                              4 COMMON     3     3      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (2) _spiwrite                                             4     2      2      98
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _spi_intialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _spi_intialize
   _switchp
     _spiwrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Apr 30 21:33:41 2024

                      l9 0786                       l51 07F9                       l45 07A6  
                     l54 0780                       u40 07AD                       u41 07AC  
                     u50 07C6                       u51 07C5                       u60 07DF  
                     u61 07DE                       u77 07B9                       u87 07D2  
                     u97 07EE                      l600 078F                      l602 0793  
                    l604 079D                      l606 07A0                      l630 07A7  
                    l608 07A3                      l640 07DF                      l632 07AD  
                    l642 07E8                      l634 07C0                      l628 0773  
                    l644 07F5                      l636 07C6                      l638 07D9  
                    l646 0781                      _CKE 04A6                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      u107 077B  
                    _SMP 04A7                     _data 0077                     _main 0781  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    status 0003  
                  wtemp0 007E          __end_of_switchp 07FA          ??_spi_intialize 0070  
        __initialization 07FA             __end_of_main 078F                   ??_main 0077  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_spiwrite 0781  
              ??_switchp 0074  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 0781                ?_spiwrite 0070                  __ptext1 07A7  
                __ptext2 0773                  __ptext3 078F                  _switchp 07A7  
   end_of_initialization 07FC    __end_of_spi_intialize 07A7               ??_spiwrite 0072  
    start_initialization 07FA              __pbssCOMMON 0077                ___latbits 0002  
               ?_switchp 0070                 _spiwrite 0773                spiwrite@i 0070  
          _spi_intialize 078F           ?_spi_intialize 0070  
