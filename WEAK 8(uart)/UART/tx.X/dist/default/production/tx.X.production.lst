

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 01 20:03:12 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 22/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171                           
   172                           	psect	idataBANK0
   173     06A4                     __pidataBANK0:
   174                           
   175                           ;initializer for _rx
   176     06A4  3452               	retlw	82
   177     06A5  3458               	retlw	88
   178     06A6  3420               	retlw	32
   179     06A7  3444               	retlw	68
   180     06A8  3441               	retlw	65
   181     06A9  3454               	retlw	84
   182     06AA  3441               	retlw	65
   183     06AB  343D               	retlw	61
   184     06AC  3400               	retlw	0
   185     06AD  3400               	retlw	0
   186                           
   187                           ;initializer for _tx
   188     06AE  3454               	retlw	84
   189     06AF  3458               	retlw	88
   190     06B0  3420               	retlw	32
   191     06B1  3444               	retlw	68
   192     06B2  3441               	retlw	65
   193     06B3  3454               	retlw	84
   194     06B4  3441               	retlw	65
   195     06B5  343D               	retlw	61
   196     06B6  3400               	retlw	0
   197     06B7  3400               	retlw	0
   198     0008                     _PORTD	set	8
   199     0018                     _RCSTA	set	24
   200     001A                     _RCREG	set	26
   201     000C                     _PIR1	set	12
   202     0019                     _TXREG	set	25
   203     0006                     _PORTB	set	6
   204     0099                     _SPBRG	set	153
   205     0098                     _TXSTA	set	152
   206     0087                     _TRISC	set	135
   207     0081                     _OPTION_REG	set	129
   208     0088                     _TRISD	set	136
   209     0086                     _TRISB	set	134
   210                           
   211                           	psect	cinit
   212     07EA                     start_initialization:	
   213                           ; #config settings
   214                           
   215     07EA                     __initialization:
   216                           
   217                           ; Initialize objects allocated to BANK0
   218     07EA  1383               	bcf	3,7	;select IRP bank0
   219     07EB  3034               	movlw	low (__pdataBANK0+20)
   220     07EC  00FD               	movwf	btemp+-1
   221     07ED  3006               	movlw	high __pidataBANK0
   222     07EE  00FE               	movwf	btemp
   223     07EF  30A4               	movlw	low __pidataBANK0
   224     07F0  00FF               	movwf	btemp+1
   225     07F1  3020               	movlw	low __pdataBANK0
   226     07F2  0084               	movwf	4
   227     07F3  120A  118A  2695  120A  118A  	fcall	init_ram0
   228                           
   229                           ; Clear objects allocated to COMMON
   230     07F8  01F7               	clrf	__pbssCOMMON& (0+127)
   231     07F9  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   232     07FA  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   233     07FB  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   234     07FC                     end_of_initialization:	
   235                           ;End of C runtime variable initialization code
   236                           
   237     07FC                     __end_of__initialization:
   238     07FC  0183               	clrf	3
   239     07FD  120A  118A  2F48   	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssCOMMON
   242     0077                     __pbssCOMMON:
   243     0077                     _j:
   244     0077                     	ds	1
   245     0078                     _rxval:
   246     0078                     	ds	1
   247     0079                     _val:
   248     0079                     	ds	1
   249     007A                     _i:
   250     007A                     	ds	1
   251                           
   252                           	psect	dataBANK0
   253     0020                     __pdataBANK0:
   254     0020                     _rx:
   255     0020                     	ds	10
   256     002A                     _tx:
   257     002A                     	ds	10
   258                           
   259                           	psect	inittext
   260     0691                     init_fetch0:	
   261                           ;	Called with low address in FSR and high address in W
   262                           
   263     0691  087E               	movf	btemp,w
   264     0692  008A               	movwf	10
   265     0693  087F               	movf	btemp+1,w
   266     0694  0082               	movwf	2
   267     0695                     init_ram0:	
   268                           ;Called with:
   269                           ;	high address of idata address in btemp 
   270                           ;	low address of idata address in btemp+1 
   271                           ;	low address of data in FSR
   272                           ;	high address + 1 of data in btemp-1
   273                           
   274     0695  120A  118A  2691  120A  118A  	fcall	init_fetch0
   275     069A  0080               	movwf	0
   276     069B  0A84               	incf	4,f
   277     069C  0804               	movf	4,w
   278     069D  067D               	xorwf	btemp+-1,w
   279     069E  1903               	btfsc	3,2
   280     069F  3400               	retlw	0
   281     06A0  0AFF               	incf	btemp+1,f
   282     06A1  1903               	btfsc	3,2
   283     06A2  0AFE               	incf	btemp,f
   284     06A3  2E95               	goto	init_ram0
   285                           
   286                           	psect	cstackCOMMON
   287     0070                     __pcstackCOMMON:
   288     0070                     ?_init:
   289     0070                     ?_lcdcmd:	
   290                           ; 1 bytes @ 0x0
   291                           
   292     0070                     ??_lcdcmd:	
   293                           ; 1 bytes @ 0x0
   294                           
   295     0070                     ?_lcddata:	
   296                           ; 1 bytes @ 0x0
   297                           
   298     0070                     ??_lcddata:	
   299                           ; 1 bytes @ 0x0
   300                           
   301     0070                     ?_main:	
   302                           ; 1 bytes @ 0x0
   303                           
   304                           
   305                           ; 1 bytes @ 0x0
   306     0070                     	ds	2
   307     0072                     lcdcmd@j:
   308     0072                     lcddata@j:	
   309                           ; 1 bytes @ 0x2
   310                           
   311                           
   312                           ; 1 bytes @ 0x2
   313     0072                     	ds	1
   314     0073                     ??_init:
   315                           
   316                           ; 1 bytes @ 0x3
   317     0073                     	ds	2
   318     0075                     ??_main:
   319                           
   320                           ; 1 bytes @ 0x5
   321     0075                     	ds	2
   322                           
   323                           	psect	maintext
   324     0748                     __pmaintext:	
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 28 in file "tx.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : B00/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   344 ;;      Params:         0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0
   346 ;;      Temps:          2       0       0       0       0
   347 ;;      Totals:         2       0       0       0       0
   348 ;;Total ram usage:        2 bytes
   349 ;; Hardware stack levels required when called: 2
   350 ;; This function calls:
   351 ;;		_init
   352 ;;		_lcdcmd
   353 ;;		_lcddata
   354 ;; This function is called by:
   355 ;;		Startup code after reset
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359     0748                     _main:	
   360                           ;psect for function _main
   361                           
   362     0748                     l804:	
   363                           ;incstack = 0
   364                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   365                           
   366                           
   367                           ;tx.c: 30: init();
   368     0748  120A  118A  26E9  120A  118A  	fcall	_init
   369                           
   370                           ;tx.c: 31: lcdcmd(0x80);
   371     074D  3080               	movlw	128
   372     074E  120A  118A  26CF  120A  118A  	fcall	_lcdcmd
   373     0753                     l806:
   374                           
   375                           ;tx.c: 32: for(i=0;i!=8;i++)
   376     0753  01FA               	clrf	_i
   377     0754                     l812:
   378                           
   379                           ;tx.c: 33:     lcddata(tx[i]);
   380     0754  087A               	movf	_i,w
   381     0755  3E2A               	addlw	(low (_tx| 0))& (0+255)
   382     0756  0084               	movwf	4
   383     0757  1383               	bcf	3,7	;select IRP bank0
   384     0758  0800               	movf	0,w
   385     0759  120A  118A  26B8  120A  118A  	fcall	_lcddata
   386     075E                     l814:
   387     075E  3001               	movlw	1
   388     075F  00FF               	movwf	btemp+1
   389     0760  087F               	movf	btemp+1,w
   390     0761  07FA               	addwf	_i,f
   391     0762                     l816:
   392     0762  3008               	movlw	8
   393     0763  067A               	xorwf	_i,w
   394     0764  1D03               	btfss	3,2
   395     0765  2F67               	goto	u41
   396     0766  2F68               	goto	u40
   397     0767                     u41:
   398     0767  2F54               	goto	l812
   399     0768                     u40:
   400     0768                     l818:
   401                           
   402                           ;tx.c: 34: lcdcmd(0xC0);
   403     0768  30C0               	movlw	192
   404     0769  120A  118A  26CF  120A  118A  	fcall	_lcdcmd
   405     076E                     l820:
   406                           
   407                           ;tx.c: 35: for(i=0;i!=8;i++)
   408     076E  01FA               	clrf	_i
   409     076F                     l826:
   410                           
   411                           ;tx.c: 36:     lcddata(rx[i]);
   412     076F  087A               	movf	_i,w
   413     0770  3E20               	addlw	(low (_rx| 0))& (0+255)
   414     0771  0084               	movwf	4
   415     0772  1383               	bcf	3,7	;select IRP bank0
   416     0773  0800               	movf	0,w
   417     0774  120A  118A  26B8  120A  118A  	fcall	_lcddata
   418     0779                     l828:
   419     0779  3001               	movlw	1
   420     077A  00FF               	movwf	btemp+1
   421     077B  087F               	movf	btemp+1,w
   422     077C  07FA               	addwf	_i,f
   423     077D                     l830:
   424     077D  3008               	movlw	8
   425     077E  067A               	xorwf	_i,w
   426     077F  1D03               	btfss	3,2
   427     0780  2F82               	goto	u51
   428     0781  2F83               	goto	u50
   429     0782                     u51:
   430     0782  2F6F               	goto	l826
   431     0783                     u50:
   432     0783                     l832:
   433                           
   434                           ;tx.c: 38: {;tx.c: 39: val=PORTB;
   435     0783  1283               	bcf	3,5	;RP0=0, select bank0
   436     0784  1303               	bcf	3,6	;RP1=0, select bank0
   437     0785  0806               	movf	6,w	;volatile
   438     0786  00F9               	movwf	_val
   439     0787                     l834:
   440                           
   441                           ;tx.c: 40: lcdcmd(0x88);
   442     0787  3088               	movlw	136
   443     0788  120A  118A  26CF  120A  118A  	fcall	_lcdcmd
   444                           
   445                           ;tx.c: 41: switch(val)
   446     078D  2FBA               	goto	l854
   447     078E                     l836:
   448                           
   449                           ;tx.c: 44:   TXREG='A';
   450     078E  3041               	movlw	65
   451     078F  1283               	bcf	3,5	;RP0=0, select bank0
   452     0790  1303               	bcf	3,6	;RP1=0, select bank0
   453     0791  0099               	movwf	25	;volatile
   454     0792                     l838:
   455                           
   456                           ;tx.c: 45:         lcddata('A');
   457     0792  3041               	movlw	65
   458     0793  120A  118A  26B8  120A  118A  	fcall	_lcddata
   459                           
   460                           ;tx.c: 46:  break;
   461     0798  2FD0               	goto	l56
   462     0799                     l840:
   463                           
   464                           ;tx.c: 48:   TXREG='B';
   465     0799  3042               	movlw	66
   466     079A  1283               	bcf	3,5	;RP0=0, select bank0
   467     079B  1303               	bcf	3,6	;RP1=0, select bank0
   468     079C  0099               	movwf	25	;volatile
   469     079D                     l842:
   470                           
   471                           ;tx.c: 49:         lcddata('B');
   472     079D  3042               	movlw	66
   473     079E  120A  118A  26B8  120A  118A  	fcall	_lcddata
   474                           
   475                           ;tx.c: 50:  break;
   476     07A3  2FD0               	goto	l56
   477     07A4                     l844:
   478                           
   479                           ;tx.c: 52:   TXREG='C';
   480     07A4  3043               	movlw	67
   481     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   482     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   483     07A7  0099               	movwf	25	;volatile
   484     07A8                     l846:
   485                           
   486                           ;tx.c: 53:         lcddata('C');
   487     07A8  3043               	movlw	67
   488     07A9  120A  118A  26B8  120A  118A  	fcall	_lcddata
   489                           
   490                           ;tx.c: 54:  break;
   491     07AE  2FD0               	goto	l56
   492     07AF                     l848:
   493                           
   494                           ;tx.c: 56:   TXREG='D';
   495     07AF  3044               	movlw	68
   496     07B0  1283               	bcf	3,5	;RP0=0, select bank0
   497     07B1  1303               	bcf	3,6	;RP1=0, select bank0
   498     07B2  0099               	movwf	25	;volatile
   499     07B3                     l850:
   500                           
   501                           ;tx.c: 57:         lcddata('D');
   502     07B3  3044               	movlw	68
   503     07B4  120A  118A  26B8  120A  118A  	fcall	_lcddata
   504                           
   505                           ;tx.c: 58:  break;
   506     07B9  2FD0               	goto	l56
   507     07BA                     l854:
   508     07BA  0879               	movf	_val,w
   509     07BB  00F5               	movwf	??_main
   510     07BC  01F6               	clrf	??_main+1
   511                           
   512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   513                           ; Switch size 1, requested type "simple"
   514                           ; Number of cases is 1, Range of values is 0 to 0
   515                           ; switch strategies available:
   516                           ; Name         Instructions Cycles
   517                           ; simple_byte            4     3 (average)
   518                           ; direct_byte           11     8 (fixed)
   519                           ; jumptable            260     6 (fixed)
   520                           ;	Chosen strategy is simple_byte
   521     07BD  0876               	movf	??_main+1,w
   522     07BE  3A00               	xorlw	0	; case 0
   523     07BF  1903               	skipnz
   524     07C0  2FC2               	goto	l888
   525     07C1  2FD0               	goto	l56
   526     07C2                     l888:
   527                           
   528                           ; Switch size 1, requested type "simple"
   529                           ; Number of cases is 4, Range of values is 112 to 224
   530                           ; switch strategies available:
   531                           ; Name         Instructions Cycles
   532                           ; simple_byte           13     7 (average)
   533                           ; jumptable            263     9 (fixed)
   534                           ;	Chosen strategy is simple_byte
   535     07C2  0875               	movf	??_main,w
   536     07C3  3A70               	xorlw	112	; case 112
   537     07C4  1903               	skipnz
   538     07C5  2FAF               	goto	l848
   539     07C6  3AC0               	xorlw	192	; case 176
   540     07C7  1903               	skipnz
   541     07C8  2FA4               	goto	l844
   542     07C9  3A60               	xorlw	96	; case 208
   543     07CA  1903               	skipnz
   544     07CB  2F99               	goto	l840
   545     07CC  3A30               	xorlw	48	; case 224
   546     07CD  1903               	skipnz
   547     07CE  2F8E               	goto	l836
   548     07CF  2FD0               	goto	l56
   549     07D0                     l56:
   550                           
   551                           ;tx.c: 62: if(PIR1 & 0x20)
   552     07D0  1283               	bcf	3,5	;RP0=0, select bank0
   553     07D1  1303               	bcf	3,6	;RP1=0, select bank0
   554     07D2  1E8C               	btfss	12,5	;volatile
   555     07D3  2FD5               	goto	u61
   556     07D4  2FD6               	goto	u60
   557     07D5                     u61:
   558     07D5  2F83               	goto	l832
   559     07D6                     u60:
   560     07D6                     l856:
   561                           
   562                           ;tx.c: 63:  {;tx.c: 64:     lcdcmd(0xC8);
   563     07D6  30C8               	movlw	200
   564     07D7  120A  118A  26CF  120A  118A  	fcall	_lcdcmd
   565     07DC                     l858:
   566                           
   567                           ;tx.c: 65:     rxval = RCREG;
   568     07DC  1283               	bcf	3,5	;RP0=0, select bank0
   569     07DD  1303               	bcf	3,6	;RP1=0, select bank0
   570     07DE  081A               	movf	26,w	;volatile
   571     07DF  00F8               	movwf	_rxval
   572     07E0                     l860:
   573                           
   574                           ;tx.c: 66:     lcddata(rxval);
   575     07E0  0878               	movf	_rxval,w
   576     07E1  120A  118A  26B8  120A  118A  	fcall	_lcddata
   577     07E6  2F83               	goto	l832
   578     07E7  120A  118A  2800   	ljmp	start
   579     07EA                     __end_of_main:
   580                           
   581                           	psect	text1
   582     06B8                     __ptext1:	
   583 ;; *************** function _lcddata *****************
   584 ;; Defined at:
   585 ;;		line 104 in file "tx.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  j               1    wreg     unsigned char 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  j               1    2[COMMON] unsigned char 
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, status,2, status,0, btemp+1
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   599 ;;      Params:         0       0       0       0       0
   600 ;;      Locals:         1       0       0       0       0
   601 ;;      Temps:          2       0       0       0       0
   602 ;;      Totals:         3       0       0       0       0
   603 ;;Total ram usage:        3 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; This function calls:
   606 ;;		Nothing
   607 ;; This function is called by:
   608 ;;		_main
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612     06B8                     _lcddata:	
   613                           ;psect for function _lcddata
   614                           
   615                           
   616                           ;incstack = 0
   617                           ; Regs used in _lcddata: [wreg+status,2+status,0+btemp+1]
   618                           ;lcddata@j stored from wreg
   619     06B8  00F2               	movwf	lcddata@j
   620     06B9                     l796:
   621                           
   622                           ;tx.c: 104: void lcddata(unsigned char j);tx.c: 105: {;tx.c: 106:     PORTB|=0x01;
   623     06B9  1283               	bcf	3,5	;RP0=0, select bank0
   624     06BA  1303               	bcf	3,6	;RP1=0, select bank0
   625     06BB  1406               	bsf	6,0	;volatile
   626     06BC                     l798:
   627                           
   628                           ;tx.c: 107:     PORTD=j;
   629     06BC  0872               	movf	lcddata@j,w
   630     06BD  0088               	movwf	8	;volatile
   631     06BE                     l800:
   632                           
   633                           ;tx.c: 108:     PORTB|=0x02;
   634     06BE  1486               	bsf	6,1	;volatile
   635                           
   636                           ;tx.c: 109:     _delay((unsigned long)((50)*(6000000/4000.0)));
   637     06BF  3062               	movlw	98
   638     06C0  00F1               	movwf	??_lcddata+1
   639     06C1  3065               	movlw	101
   640     06C2  00F0               	movwf	??_lcddata
   641     06C3                     u77:
   642     06C3  0BF0               	decfsz	??_lcddata,f
   643     06C4  2EC3               	goto	u77
   644     06C5  0BF1               	decfsz	??_lcddata+1,f
   645     06C6  2EC3               	goto	u77
   646     06C7  2EC8               	nop2
   647     06C8                     l802:
   648                           
   649                           ;tx.c: 110:     PORTB&=~0x02;
   650     06C8  30FD               	movlw	253
   651     06C9  00FF               	movwf	btemp+1
   652     06CA  087F               	movf	btemp+1,w
   653     06CB  1283               	bcf	3,5	;RP0=0, select bank0
   654     06CC  1303               	bcf	3,6	;RP1=0, select bank0
   655     06CD  0586               	andwf	6,f	;volatile
   656     06CE                     l72:
   657     06CE  0008               	return
   658     06CF                     __end_of_lcddata:
   659                           
   660                           	psect	text2
   661     06E9                     __ptext2:	
   662 ;; *************** function _init *****************
   663 ;; Defined at:
   664 ;;		line 75 in file "tx.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0
   680 ;;      Temps:          2       0       0       0       0
   681 ;;      Totals:         2       0       0       0       0
   682 ;;Total ram usage:        2 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; Hardware stack levels required when called: 1
   685 ;; This function calls:
   686 ;;		_lcdcmd
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692     06E9                     _init:	
   693                           ;psect for function _init
   694                           
   695     06E9                     l760:	
   696                           ;incstack = 0
   697                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   698                           
   699                           
   700                           ;tx.c: 77:  TRISB=0xF0;
   701     06E9  30F0               	movlw	240
   702     06EA  1683               	bsf	3,5	;RP0=1, select bank1
   703     06EB  1303               	bcf	3,6	;RP1=0, select bank1
   704     06EC  0086               	movwf	6	;volatile
   705     06ED                     l762:
   706                           
   707                           ;tx.c: 78:     PORTB=0x00;
   708     06ED  1283               	bcf	3,5	;RP0=0, select bank0
   709     06EE  1303               	bcf	3,6	;RP1=0, select bank0
   710     06EF  0186               	clrf	6	;volatile
   711     06F0                     l764:
   712                           
   713                           ;tx.c: 79:     TRISD=0x00;
   714     06F0  1683               	bsf	3,5	;RP0=1, select bank1
   715     06F1  1303               	bcf	3,6	;RP1=0, select bank1
   716     06F2  0188               	clrf	8	;volatile
   717     06F3                     l766:
   718                           
   719                           ;tx.c: 80:  OPTION_REG&=0x7F;
   720     06F3  307F               	movlw	127
   721     06F4  00FF               	movwf	btemp+1
   722     06F5  087F               	movf	btemp+1,w
   723     06F6  0581               	andwf	1,f	;volatile
   724     06F7                     l768:
   725                           
   726                           ;tx.c: 81:  TRISC=0xC0;
   727     06F7  30C0               	movlw	192
   728     06F8  0087               	movwf	7	;volatile
   729     06F9                     l770:
   730                           
   731                           ;tx.c: 82:  RCSTA=0x90;
   732     06F9  3090               	movlw	144
   733     06FA  1283               	bcf	3,5	;RP0=0, select bank0
   734     06FB  1303               	bcf	3,6	;RP1=0, select bank0
   735     06FC  0098               	movwf	24	;volatile
   736     06FD                     l772:
   737                           
   738                           ;tx.c: 83:  TXSTA=0x20;
   739     06FD  3020               	movlw	32
   740     06FE  1683               	bsf	3,5	;RP0=1, select bank1
   741     06FF  1303               	bcf	3,6	;RP1=0, select bank1
   742     0700  0098               	movwf	24	;volatile
   743     0701                     l774:
   744                           
   745                           ;tx.c: 84:  SPBRG=0x09;
   746     0701  3009               	movlw	9
   747     0702  0099               	movwf	25	;volatile
   748     0703                     l776:
   749                           
   750                           ;tx.c: 85:      lcdcmd(0x30);
   751     0703  3030               	movlw	48
   752     0704  120A  118A  26CF  120A  118A  	fcall	_lcdcmd
   753     0709                     l778:
   754                           
   755                           ;tx.c: 86:     _delay((unsigned long)((100)*(6000000/4000.0)));
   756     0709  30C3               	movlw	195
   757     070A  00F4               	movwf	??_init+1
   758     070B  30CD               	movlw	205
   759     070C  00F3               	movwf	??_init
   760     070D                     u87:
   761     070D  0BF3               	decfsz	??_init,f
   762     070E  2F0D               	goto	u87
   763     070F  0BF4               	decfsz	??_init+1,f
   764     0710  2F0D               	goto	u87
   765     0711                     l780:
   766                           
   767                           ;tx.c: 87:     lcdcmd(0x30);
   768     0711  3030               	movlw	48
   769     0712  120A  118A  26CF  120A  118A  	fcall	_lcdcmd
   770     0717                     l782:
   771                           
   772                           ;tx.c: 88:     _delay((unsigned long)((100)*(6000000/4000.0)));
   773     0717  30C3               	movlw	195
   774     0718  00F4               	movwf	??_init+1
   775     0719  30CD               	movlw	205
   776     071A  00F3               	movwf	??_init
   777     071B                     u97:
   778     071B  0BF3               	decfsz	??_init,f
   779     071C  2F1B               	goto	u97
   780     071D  0BF4               	decfsz	??_init+1,f
   781     071E  2F1B               	goto	u97
   782     071F                     l784:
   783                           
   784                           ;tx.c: 89:     lcdcmd(0x30);
   785     071F  3030               	movlw	48
   786     0720  120A  118A  26CF  120A  118A  	fcall	_lcdcmd
   787     0725                     l786:
   788                           
   789                           ;tx.c: 90:     _delay((unsigned long)((100)*(6000000/4000.0)));
   790     0725  30C3               	movlw	195
   791     0726  00F4               	movwf	??_init+1
   792     0727  30CD               	movlw	205
   793     0728  00F3               	movwf	??_init
   794     0729                     u107:
   795     0729  0BF3               	decfsz	??_init,f
   796     072A  2F29               	goto	u107
   797     072B  0BF4               	decfsz	??_init+1,f
   798     072C  2F29               	goto	u107
   799     072D                     l788:
   800                           
   801                           ;tx.c: 91:     lcdcmd(0x38);
   802     072D  3038               	movlw	56
   803     072E  120A  118A  26CF  120A  118A  	fcall	_lcdcmd
   804     0733                     l790:
   805                           
   806                           ;tx.c: 92:     lcdcmd(0x0C);
   807     0733  300C               	movlw	12
   808     0734  120A  118A  26CF  120A  118A  	fcall	_lcdcmd
   809     0739                     l792:
   810                           
   811                           ;tx.c: 93:     lcdcmd(0x01);
   812     0739  3001               	movlw	1
   813     073A  120A  118A  26CF  120A  118A  	fcall	_lcdcmd
   814     073F                     l794:
   815                           
   816                           ;tx.c: 94:     _delay((unsigned long)((100)*(6000000/4000.0)));
   817     073F  30C3               	movlw	195
   818     0740  00F4               	movwf	??_init+1
   819     0741  30CD               	movlw	205
   820     0742  00F3               	movwf	??_init
   821     0743                     u117:
   822     0743  0BF3               	decfsz	??_init,f
   823     0744  2F43               	goto	u117
   824     0745  0BF4               	decfsz	??_init+1,f
   825     0746  2F43               	goto	u117
   826     0747                     l66:
   827     0747  0008               	return
   828     0748                     __end_of_init:
   829                           
   830                           	psect	text3
   831     06CF                     __ptext3:	
   832 ;; *************** function _lcdcmd *****************
   833 ;; Defined at:
   834 ;;		line 96 in file "tx.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  j               1    wreg     unsigned char 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  j               1    2[COMMON] unsigned char 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, status,2, status,0, btemp+1
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   848 ;;      Params:         0       0       0       0       0
   849 ;;      Locals:         1       0       0       0       0
   850 ;;      Temps:          2       0       0       0       0
   851 ;;      Totals:         3       0       0       0       0
   852 ;;Total ram usage:        3 bytes
   853 ;; Hardware stack levels used: 1
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_main
   858 ;;		_init
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862     06CF                     _lcdcmd:	
   863                           ;psect for function _lcdcmd
   864                           
   865                           
   866                           ;incstack = 0
   867                           ; Regs used in _lcdcmd: [wreg+status,2+status,0+btemp+1]
   868                           ;lcdcmd@j stored from wreg
   869     06CF  00F2               	movwf	lcdcmd@j
   870     06D0                     l752:
   871                           
   872                           ;tx.c: 96: void lcdcmd(unsigned char j);tx.c: 97: {;tx.c: 98:     PORTB&=~0x01;
   873     06D0  30FE               	movlw	254
   874     06D1  00FF               	movwf	btemp+1
   875     06D2  087F               	movf	btemp+1,w
   876     06D3  1283               	bcf	3,5	;RP0=0, select bank0
   877     06D4  1303               	bcf	3,6	;RP1=0, select bank0
   878     06D5  0586               	andwf	6,f	;volatile
   879     06D6                     l754:
   880                           
   881                           ;tx.c: 99:     PORTD=j;
   882     06D6  0872               	movf	lcdcmd@j,w
   883     06D7  0088               	movwf	8	;volatile
   884     06D8                     l756:
   885                           
   886                           ;tx.c: 100:     PORTB|=0x02;
   887     06D8  1486               	bsf	6,1	;volatile
   888     06D9                     l758:
   889                           
   890                           ;tx.c: 101:     _delay((unsigned long)((50)*(6000000/4000.0)));
   891     06D9  3062               	movlw	98
   892     06DA  00F1               	movwf	??_lcdcmd+1
   893     06DB  3065               	movlw	101
   894     06DC  00F0               	movwf	??_lcdcmd
   895     06DD                     u127:
   896     06DD  0BF0               	decfsz	??_lcdcmd,f
   897     06DE  2EDD               	goto	u127
   898     06DF  0BF1               	decfsz	??_lcdcmd+1,f
   899     06E0  2EDD               	goto	u127
   900     06E1  2EE2               	nop2
   901                           
   902                           ;tx.c: 102:     PORTB&=~0x02;
   903     06E2  30FD               	movlw	253
   904     06E3  00FF               	movwf	btemp+1
   905     06E4  087F               	movf	btemp+1,w
   906     06E5  1283               	bcf	3,5	;RP0=0, select bank0
   907     06E6  1303               	bcf	3,6	;RP1=0, select bank0
   908     06E7  0586               	andwf	6,f	;volatile
   909     06E8                     l69:
   910     06E8  0008               	return
   911     06E9                     __end_of_lcdcmd:
   912     007E                     btemp	set	126	;btemp
   913     007E                     wtemp0	set	126
   914                           
   915                           	psect	config
   916                           
   917                           ;Config register CONFIG @ 0x2007
   918                           ;	Oscillator Selection bits
   919                           ;	FOSC = EXTRC, RC oscillator
   920                           ;	Watchdog Timer Enable bit
   921                           ;	WDTE = OFF, WDT disabled
   922                           ;	Power-up Timer Enable bit
   923                           ;	PWRTE = OFF, PWRT disabled
   924                           ;	Brown-out Reset Enable bit
   925                           ;	BOREN = OFF, BOR disabled
   926                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   927                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   928                           ;	Data EEPROM Memory Code Protection bit
   929                           ;	CPD = OFF, Data EEPROM code protection off
   930                           ;	Flash Program Memory Write Enable bits
   931                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   932                           ;	In-Circuit Debugger Mode bit
   933                           ;	DEBUG = 0x1, unprogrammed default
   934                           ;	Flash Program Memory Code Protection bit
   935                           ;	CP = OFF, Code protection off
   936     2007                     	org	8199
   937     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_init
    _init->_lcdcmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      66
                                              5 COMMON     2     2      0
                               _init
                             _lcdcmd
                            _lcddata
 ---------------------------------------------------------------------------------
 (1) _lcddata                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                             _lcdcmd
 ---------------------------------------------------------------------------------
 (1) _lcdcmd                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _lcdcmd
   _lcdcmd
   _lcddata

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 01 20:03:12 2024

                      _i 007A                        _j 0077                        pc 0002  
                     l72 06CE                       l56 07D0                       l66 0747  
                     l69 06E8                       u40 0768                       u41 0767  
                     u50 0783                       u51 0782                       u60 07D6  
                     u61 07D5                       u77 06C3                       u87 070D  
                     u97 071B                       _rx 0020                       _tx 002A  
                     fsr 0004                      l800 06BE                      l802 06C8  
                    l820 076E                      l812 0754                      l804 0748  
                    l830 077D                      l814 075E                      l806 0753  
                    l752 06D0                      l760 06E9                      l840 0799  
                    l832 0783                      l816 0762                      l754 06D6  
                    l770 06F9                      l762 06ED                      l850 07B3  
                    l842 079D                      l834 0787                      l826 076F  
                    l818 0768                      l756 06D8                      l780 0711  
                    l772 06FD                      l764 06F0                      l860 07E0  
                    l844 07A4                      l836 078E                      l828 0779  
                    l758 06D9                      l790 0733                      l782 0717  
                    l774 0701                      l766 06F3                      l846 07A8  
                    l838 0792                      l854 07BA                      l792 0739  
                    l784 071F                      l776 0703                      l768 06F7  
                    l856 07D6                      l848 07AF                      l794 073F  
                    l786 0725                      l778 0709                      l858 07DC  
                    l788 072D                      l796 06B9                      l798 06BC  
                    l888 07C2                      u107 0729                      u117 0743  
                    u127 06DD                      _val 0079                      fsr0 0004  
                    indf 0000                     _PIR1 000C                     _main 0748  
                   _init 06E9                     btemp 007E                     start 0000  
                  ?_main 0070                    ?_init 0070                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TXREG 0019                    _TXSTA 0098  
        __end_of_lcddata 06CF                    _rxval 0078                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EA  
           __end_of_main 07EA             __end_of_init 0748                   ??_main 0075  
                 ??_init 0073                   _lcdcmd 06CF                ??_lcddata 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 06A4  
             __pmaintext 0748                  ?_lcdcmd 0070                  __ptext1 06B8  
                __ptext2 06E9                  __ptext3 06CF                  _lcddata 06B8  
                lcdcmd@j 0072     end_of_initialization 07FC           __end_of_lcdcmd 06E9  
    start_initialization 07EA               init_fetch0 0691                 ??_lcdcmd 0070  
            __pdataBANK0 0020              __pbssCOMMON 0077                ___latbits 0002  
               ?_lcddata 0070                 lcddata@j 0072                 init_ram0 0695  
             _OPTION_REG 0081  
