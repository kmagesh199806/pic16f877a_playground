

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 01 20:03:17 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 22/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171                           
   172                           	psect	idataBANK0
   173     066F                     __pidataBANK0:
   174                           
   175                           ;initializer for _tx
   176     066F  3454               	retlw	84
   177     0670  3458               	retlw	88
   178     0671  3420               	retlw	32
   179     0672  3444               	retlw	68
   180     0673  3441               	retlw	65
   181     0674  3454               	retlw	84
   182     0675  3441               	retlw	65
   183     0676  343D               	retlw	61
   184     0677  3400               	retlw	0
   185     0678  3400               	retlw	0
   186                           
   187                           ;initializer for _rx
   188     0679  3452               	retlw	82
   189     067A  3458               	retlw	88
   190     067B  3420               	retlw	32
   191     067C  3444               	retlw	68
   192     067D  3441               	retlw	65
   193     067E  3454               	retlw	84
   194     067F  3441               	retlw	65
   195     0680  343D               	retlw	61
   196     0681  3400               	retlw	0
   197     0682  3400               	retlw	0
   198     0008                     _PORTD	set	8
   199     0006                     _PORTB	set	6
   200     0018                     _RCSTA	set	24
   201     0019                     _TXREG	set	25
   202     001A                     _RCREG	set	26
   203     000C                     _PIR1	set	12
   204     0099                     _SPBRG	set	153
   205     0098                     _TXSTA	set	152
   206     0087                     _TRISC	set	135
   207     0086                     _TRISB	set	134
   208     0088                     _TRISD	set	136
   209                           
   210                           	psect	cinit
   211     07EC                     start_initialization:	
   212                           ; #config settings
   213                           
   214     07EC                     __initialization:
   215                           
   216                           ; Initialize objects allocated to BANK0
   217     07EC  1383               	bcf	3,7	;select IRP bank0
   218     07ED  3034               	movlw	low (__pdataBANK0+20)
   219     07EE  00FD               	movwf	btemp+-1
   220     07EF  3006               	movlw	high __pidataBANK0
   221     07F0  00FE               	movwf	btemp
   222     07F1  306F               	movlw	low __pidataBANK0
   223     07F2  00FF               	movwf	btemp+1
   224     07F3  3020               	movlw	low __pdataBANK0
   225     07F4  0084               	movwf	4
   226     07F5  120A  118A  2660  120A  118A  	fcall	init_ram0
   227                           
   228                           ; Clear objects allocated to COMMON
   229     07FA  01F7               	clrf	__pbssCOMMON& (0+127)
   230     07FB  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   231     07FC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234     07FC                     __end_of__initialization:
   235     07FC  0183               	clrf	3
   236     07FD  120A  118A  2F09   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMMON
   239     0077                     __pbssCOMMON:
   240     0077                     _rec_val:
   241     0077                     	ds	1
   242     0078                     _i:
   243     0078                     	ds	1
   244                           
   245                           	psect	dataBANK0
   246     0020                     __pdataBANK0:
   247     0020                     _tx:
   248     0020                     	ds	10
   249     002A                     _rx:
   250     002A                     	ds	10
   251                           
   252                           	psect	inittext
   253     065C                     init_fetch0:	
   254                           ;	Called with low address in FSR and high address in W
   255                           
   256     065C  087E               	movf	btemp,w
   257     065D  008A               	movwf	10
   258     065E  087F               	movf	btemp+1,w
   259     065F  0082               	movwf	2
   260     0660                     init_ram0:	
   261                           ;Called with:
   262                           ;	high address of idata address in btemp 
   263                           ;	low address of idata address in btemp+1 
   264                           ;	low address of data in FSR
   265                           ;	high address + 1 of data in btemp-1
   266                           
   267     0660  120A  118A  265C  120A  118A  	fcall	init_fetch0
   268     0665  0080               	movwf	0
   269     0666  0A84               	incf	4,f
   270     0667  0804               	movf	4,w
   271     0668  067D               	xorwf	btemp+-1,w
   272     0669  1903               	btfsc	3,2
   273     066A  3400               	retlw	0
   274     066B  0AFF               	incf	btemp+1,f
   275     066C  1903               	btfsc	3,2
   276     066D  0AFE               	incf	btemp,f
   277     066E  2E60               	goto	init_ram0
   278                           
   279                           	psect	cstackCOMMON
   280     0070                     __pcstackCOMMON:
   281     0070                     ?_receivee_init:
   282     0070                     ?_lcdcmd:	
   283                           ; 1 bytes @ 0x0
   284                           
   285     0070                     ??_lcdcmd:	
   286                           ; 1 bytes @ 0x0
   287                           
   288     0070                     ?_lcddata:	
   289                           ; 1 bytes @ 0x0
   290                           
   291     0070                     ??_lcddata:	
   292                           ; 1 bytes @ 0x0
   293                           
   294     0070                     ?_main:	
   295                           ; 1 bytes @ 0x0
   296                           
   297                           
   298                           ; 1 bytes @ 0x0
   299     0070                     	ds	2
   300     0072                     lcdcmd@j:
   301     0072                     lcddata@j:	
   302                           ; 1 bytes @ 0x2
   303                           
   304                           
   305                           ; 1 bytes @ 0x2
   306     0072                     	ds	1
   307     0073                     ??_receivee_init:
   308                           
   309                           ; 1 bytes @ 0x3
   310     0073                     	ds	2
   311     0075                     ??_main:
   312                           
   313                           ; 1 bytes @ 0x5
   314     0075                     	ds	2
   315                           
   316                           	psect	maintext
   317     0709                     __pmaintext:	
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   320 ;;
   321 ;; *************** function _main *****************
   322 ;; Defined at:
   323 ;;		line 25 in file "rx.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : B00/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         0       0       0       0       0
   339 ;;      Temps:          2       0       0       0       0
   340 ;;      Totals:         2       0       0       0       0
   341 ;;Total ram usage:        2 bytes
   342 ;; Hardware stack levels required when called: 2
   343 ;; This function calls:
   344 ;;		_lcdcmd
   345 ;;		_lcddata
   346 ;;		_receivee_init
   347 ;; This function is called by:
   348 ;;		Startup code after reset
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352     0709                     _main:	
   353                           ;psect for function _main
   354                           
   355     0709                     l794:	
   356                           ;incstack = 0
   357                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   358                           
   359                           
   360                           ;rx.c: 27:  receivee_init();
   361     0709  120A  118A  26B4  120A  118A  	fcall	_receivee_init
   362                           
   363                           ;rx.c: 28:     lcdcmd(0x80);
   364     070E  3080               	movlw	128
   365     070F  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   366     0714                     l796:
   367                           
   368                           ;rx.c: 29:     for(i=0;i!=8;i++)
   369     0714  01F8               	clrf	_i
   370     0715                     l802:
   371                           
   372                           ;rx.c: 30:         lcddata(rx[i]);
   373     0715  0878               	movf	_i,w
   374     0716  3E2A               	addlw	(low (_rx| 0))& (0+255)
   375     0717  0084               	movwf	4
   376     0718  1383               	bcf	3,7	;select IRP bank0
   377     0719  0800               	movf	0,w
   378     071A  120A  118A  2683  120A  118A  	fcall	_lcddata
   379     071F                     l804:
   380     071F  3001               	movlw	1
   381     0720  00FF               	movwf	btemp+1
   382     0721  087F               	movf	btemp+1,w
   383     0722  07F8               	addwf	_i,f
   384     0723                     l806:
   385     0723  3008               	movlw	8
   386     0724  0678               	xorwf	_i,w
   387     0725  1D03               	btfss	3,2
   388     0726  2F28               	goto	u41
   389     0727  2F29               	goto	u40
   390     0728                     u41:
   391     0728  2F15               	goto	l802
   392     0729                     u40:
   393     0729                     l808:
   394                           
   395                           ;rx.c: 31:     lcdcmd(0xC0);
   396     0729  30C0               	movlw	192
   397     072A  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   398     072F                     l810:
   399                           
   400                           ;rx.c: 32:     for(i=0;i!=8;i++)
   401     072F  01F8               	clrf	_i
   402     0730                     l816:
   403                           
   404                           ;rx.c: 33:         lcddata(tx[i]);
   405     0730  0878               	movf	_i,w
   406     0731  3E20               	addlw	(low (_tx| 0))& (0+255)
   407     0732  0084               	movwf	4
   408     0733  1383               	bcf	3,7	;select IRP bank0
   409     0734  0800               	movf	0,w
   410     0735  120A  118A  2683  120A  118A  	fcall	_lcddata
   411     073A                     l818:
   412     073A  3001               	movlw	1
   413     073B  00FF               	movwf	btemp+1
   414     073C  087F               	movf	btemp+1,w
   415     073D  07F8               	addwf	_i,f
   416     073E                     l820:
   417     073E  3008               	movlw	8
   418     073F  0678               	xorwf	_i,w
   419     0740  1D03               	btfss	3,2
   420     0741  2F43               	goto	u51
   421     0742  2F44               	goto	u50
   422     0743                     u51:
   423     0743  2F30               	goto	l816
   424     0744                     u50:
   425     0744                     l47:	
   426                           ;rx.c: 34:  while(1)
   427                           
   428                           
   429                           ;rx.c: 35:  {;rx.c: 36:   if(PIR1 & 0x20)
   430     0744  1283               	bcf	3,5	;RP0=0, select bank0
   431     0745  1303               	bcf	3,6	;RP1=0, select bank0
   432     0746  1E8C               	btfss	12,5	;volatile
   433     0747  2F49               	goto	u61
   434     0748  2F4A               	goto	u60
   435     0749                     u61:
   436     0749  2FDF               	goto	l860
   437     074A                     u60:
   438     074A                     l822:
   439                           
   440                           ;rx.c: 37:   {;rx.c: 38:   rec_val = RCREG;
   441     074A  081A               	movf	26,w	;volatile
   442     074B  00F7               	movwf	_rec_val
   443                           
   444                           ;rx.c: 39:   switch(rec_val)
   445     074C  2FC9               	goto	l858
   446     074D                     l824:
   447                           
   448                           ;rx.c: 42:     lcdcmd(0x88);
   449     074D  3088               	movlw	136
   450     074E  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   451                           
   452                           ;rx.c: 43:                 lcddata(rec_val);
   453     0753  0877               	movf	_rec_val,w
   454     0754  120A  118A  2683  120A  118A  	fcall	_lcddata
   455     0759                     l826:
   456                           
   457                           ;rx.c: 44:                 TXREG=rec_val+32;
   458     0759  0877               	movf	_rec_val,w
   459     075A  3E20               	addlw	32
   460     075B  1283               	bcf	3,5	;RP0=0, select bank0
   461     075C  1303               	bcf	3,6	;RP1=0, select bank0
   462     075D  0099               	movwf	25	;volatile
   463     075E                     l828:
   464                           
   465                           ;rx.c: 45:                 lcdcmd(0xC8);
   466     075E  30C8               	movlw	200
   467     075F  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   468     0764                     l830:
   469                           
   470                           ;rx.c: 46:                 lcddata(rec_val+32);
   471     0764  0877               	movf	_rec_val,w
   472     0765  3E20               	addlw	32
   473     0766  120A  118A  2683  120A  118A  	fcall	_lcddata
   474                           
   475                           ;rx.c: 47:    break;
   476     076B  2FDF               	goto	l860
   477     076C                     l832:
   478                           
   479                           ;rx.c: 49:     lcdcmd(0x88);
   480     076C  3088               	movlw	136
   481     076D  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   482                           
   483                           ;rx.c: 50:                 lcddata(rec_val);
   484     0772  0877               	movf	_rec_val,w
   485     0773  120A  118A  2683  120A  118A  	fcall	_lcddata
   486     0778                     l834:
   487                           
   488                           ;rx.c: 51:                 TXREG=rec_val+32;
   489     0778  0877               	movf	_rec_val,w
   490     0779  3E20               	addlw	32
   491     077A  1283               	bcf	3,5	;RP0=0, select bank0
   492     077B  1303               	bcf	3,6	;RP1=0, select bank0
   493     077C  0099               	movwf	25	;volatile
   494     077D                     l836:
   495                           
   496                           ;rx.c: 52:                 lcdcmd(0xC8);
   497     077D  30C8               	movlw	200
   498     077E  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   499     0783                     l838:
   500                           
   501                           ;rx.c: 53:                 lcddata(rec_val+32);
   502     0783  0877               	movf	_rec_val,w
   503     0784  3E20               	addlw	32
   504     0785  120A  118A  2683  120A  118A  	fcall	_lcddata
   505                           
   506                           ;rx.c: 54:    break;
   507     078A  2FDF               	goto	l860
   508     078B                     l840:
   509                           
   510                           ;rx.c: 56:     lcdcmd(0x88);
   511     078B  3088               	movlw	136
   512     078C  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   513                           
   514                           ;rx.c: 57:                 lcddata(rec_val);
   515     0791  0877               	movf	_rec_val,w
   516     0792  120A  118A  2683  120A  118A  	fcall	_lcddata
   517     0797                     l842:
   518                           
   519                           ;rx.c: 58:                 TXREG=rec_val+32;
   520     0797  0877               	movf	_rec_val,w
   521     0798  3E20               	addlw	32
   522     0799  1283               	bcf	3,5	;RP0=0, select bank0
   523     079A  1303               	bcf	3,6	;RP1=0, select bank0
   524     079B  0099               	movwf	25	;volatile
   525     079C                     l844:
   526                           
   527                           ;rx.c: 59:                 lcdcmd(0xC8);
   528     079C  30C8               	movlw	200
   529     079D  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   530     07A2                     l846:
   531                           
   532                           ;rx.c: 60:                 lcddata(rec_val+32);
   533     07A2  0877               	movf	_rec_val,w
   534     07A3  3E20               	addlw	32
   535     07A4  120A  118A  2683  120A  118A  	fcall	_lcddata
   536                           
   537                           ;rx.c: 61:    break;
   538     07A9  2FDF               	goto	l860
   539     07AA                     l848:
   540                           
   541                           ;rx.c: 63:     lcdcmd(0x88);
   542     07AA  3088               	movlw	136
   543     07AB  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   544                           
   545                           ;rx.c: 64:                 lcddata(rec_val);
   546     07B0  0877               	movf	_rec_val,w
   547     07B1  120A  118A  2683  120A  118A  	fcall	_lcddata
   548     07B6                     l850:
   549                           
   550                           ;rx.c: 65:                 TXREG=rec_val+32;
   551     07B6  0877               	movf	_rec_val,w
   552     07B7  3E20               	addlw	32
   553     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   554     07B9  1303               	bcf	3,6	;RP1=0, select bank0
   555     07BA  0099               	movwf	25	;volatile
   556     07BB                     l852:
   557                           
   558                           ;rx.c: 66:                 lcdcmd(0xC8);
   559     07BB  30C8               	movlw	200
   560     07BC  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   561     07C1                     l854:
   562                           
   563                           ;rx.c: 67:                 lcddata(rec_val+32);
   564     07C1  0877               	movf	_rec_val,w
   565     07C2  3E20               	addlw	32
   566     07C3  120A  118A  2683  120A  118A  	fcall	_lcddata
   567                           
   568                           ;rx.c: 68:    break;
   569     07C8  2FDF               	goto	l860
   570     07C9                     l858:
   571     07C9  0877               	movf	_rec_val,w
   572     07CA  00F5               	movwf	??_main
   573     07CB  01F6               	clrf	??_main+1
   574                           
   575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   576                           ; Switch size 1, requested type "simple"
   577                           ; Number of cases is 1, Range of values is 0 to 0
   578                           ; switch strategies available:
   579                           ; Name         Instructions Cycles
   580                           ; simple_byte            4     3 (average)
   581                           ; direct_byte           11     8 (fixed)
   582                           ; jumptable            260     6 (fixed)
   583                           ;	Chosen strategy is simple_byte
   584     07CC  0876               	movf	??_main+1,w
   585     07CD  3A00               	xorlw	0	; case 0
   586     07CE  1903               	skipnz
   587     07CF  2FD1               	goto	l886
   588     07D0  2FDF               	goto	l860
   589     07D1                     l886:
   590                           
   591                           ; Switch size 1, requested type "simple"
   592                           ; Number of cases is 4, Range of values is 65 to 68
   593                           ; switch strategies available:
   594                           ; Name         Instructions Cycles
   595                           ; simple_byte           13     7 (average)
   596                           ; direct_byte           23    11 (fixed)
   597                           ; jumptable            263     9 (fixed)
   598                           ;	Chosen strategy is simple_byte
   599     07D1  0875               	movf	??_main,w
   600     07D2  3A41               	xorlw	65	; case 65
   601     07D3  1903               	skipnz
   602     07D4  2F4D               	goto	l824
   603     07D5  3A03               	xorlw	3	; case 66
   604     07D6  1903               	skipnz
   605     07D7  2F6C               	goto	l832
   606     07D8  3A01               	xorlw	1	; case 67
   607     07D9  1903               	skipnz
   608     07DA  2F8B               	goto	l840
   609     07DB  3A07               	xorlw	7	; case 68
   610     07DC  1903               	skipnz
   611     07DD  2FAA               	goto	l848
   612     07DE  2FDF               	goto	l860
   613     07DF                     l860:
   614                           
   615                           ;rx.c: 71:         _delay((unsigned long)((10)*(6000000/4000.0)));
   616     07DF  3014               	movlw	20
   617     07E0  00F6               	movwf	??_main+1
   618     07E1  3079               	movlw	121
   619     07E2  00F5               	movwf	??_main
   620     07E3                     u77:
   621     07E3  0BF5               	decfsz	??_main,f
   622     07E4  2FE3               	goto	u77
   623     07E5  0BF6               	decfsz	??_main+1,f
   624     07E6  2FE3               	goto	u77
   625     07E7  2FE8               	nop2
   626     07E8  2F44               	goto	l47
   627     07E9  120A  118A  2800   	ljmp	start
   628     07EC                     __end_of_main:
   629                           
   630                           	psect	text1
   631     06B4                     __ptext1:	
   632 ;; *************** function _receivee_init *****************
   633 ;; Defined at:
   634 ;;		line 78 in file "rx.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;		None
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   648 ;;      Params:         0       0       0       0       0
   649 ;;      Locals:         0       0       0       0       0
   650 ;;      Temps:          2       0       0       0       0
   651 ;;      Totals:         2       0       0       0       0
   652 ;;Total ram usage:        2 bytes
   653 ;; Hardware stack levels used: 1
   654 ;; Hardware stack levels required when called: 1
   655 ;; This function calls:
   656 ;;		_lcdcmd
   657 ;; This function is called by:
   658 ;;		_main
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662     06B4                     _receivee_init:	
   663                           ;psect for function _receivee_init
   664                           
   665     06B4                     l756:	
   666                           ;incstack = 0
   667                           ; Regs used in _receivee_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   668                           
   669                           
   670                           ;rx.c: 80:  TRISD=0x00;
   671     06B4  1683               	bsf	3,5	;RP0=1, select bank1
   672     06B5  1303               	bcf	3,6	;RP1=0, select bank1
   673     06B6  0188               	clrf	8	;volatile
   674                           
   675                           ;rx.c: 81:  TRISB=0x00;
   676     06B7  0186               	clrf	6	;volatile
   677     06B8                     l758:
   678                           
   679                           ;rx.c: 82:  TRISC=0xC0;
   680     06B8  30C0               	movlw	192
   681     06B9  0087               	movwf	7	;volatile
   682     06BA                     l760:
   683                           
   684                           ;rx.c: 83:  RCSTA=0x90;
   685     06BA  3090               	movlw	144
   686     06BB  1283               	bcf	3,5	;RP0=0, select bank0
   687     06BC  1303               	bcf	3,6	;RP1=0, select bank0
   688     06BD  0098               	movwf	24	;volatile
   689     06BE                     l762:
   690                           
   691                           ;rx.c: 84:  TXSTA=0x20;
   692     06BE  3020               	movlw	32
   693     06BF  1683               	bsf	3,5	;RP0=1, select bank1
   694     06C0  1303               	bcf	3,6	;RP1=0, select bank1
   695     06C1  0098               	movwf	24	;volatile
   696     06C2                     l764:
   697                           
   698                           ;rx.c: 85:  SPBRG=0x09;
   699     06C2  3009               	movlw	9
   700     06C3  0099               	movwf	25	;volatile
   701     06C4                     l766:
   702                           
   703                           ;rx.c: 86:     lcdcmd(0x30);
   704     06C4  3030               	movlw	48
   705     06C5  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   706     06CA                     l768:
   707                           
   708                           ;rx.c: 87:     _delay((unsigned long)((100)*(6000000/4000.0)));
   709     06CA  30C3               	movlw	195
   710     06CB  00F4               	movwf	??_receivee_init+1
   711     06CC  30CD               	movlw	205
   712     06CD  00F3               	movwf	??_receivee_init
   713     06CE                     u87:
   714     06CE  0BF3               	decfsz	??_receivee_init,f
   715     06CF  2ECE               	goto	u87
   716     06D0  0BF4               	decfsz	??_receivee_init+1,f
   717     06D1  2ECE               	goto	u87
   718     06D2                     l770:
   719                           
   720                           ;rx.c: 88:     lcdcmd(0x30);
   721     06D2  3030               	movlw	48
   722     06D3  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   723     06D8                     l772:
   724                           
   725                           ;rx.c: 89:     _delay((unsigned long)((100)*(6000000/4000.0)));
   726     06D8  30C3               	movlw	195
   727     06D9  00F4               	movwf	??_receivee_init+1
   728     06DA  30CD               	movlw	205
   729     06DB  00F3               	movwf	??_receivee_init
   730     06DC                     u97:
   731     06DC  0BF3               	decfsz	??_receivee_init,f
   732     06DD  2EDC               	goto	u97
   733     06DE  0BF4               	decfsz	??_receivee_init+1,f
   734     06DF  2EDC               	goto	u97
   735     06E0                     l774:
   736                           
   737                           ;rx.c: 90:     lcdcmd(0x30);
   738     06E0  3030               	movlw	48
   739     06E1  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   740     06E6                     l776:
   741                           
   742                           ;rx.c: 91:     _delay((unsigned long)((100)*(6000000/4000.0)));
   743     06E6  30C3               	movlw	195
   744     06E7  00F4               	movwf	??_receivee_init+1
   745     06E8  30CD               	movlw	205
   746     06E9  00F3               	movwf	??_receivee_init
   747     06EA                     u107:
   748     06EA  0BF3               	decfsz	??_receivee_init,f
   749     06EB  2EEA               	goto	u107
   750     06EC  0BF4               	decfsz	??_receivee_init+1,f
   751     06ED  2EEA               	goto	u107
   752     06EE                     l778:
   753                           
   754                           ;rx.c: 92:     lcdcmd(0x38);
   755     06EE  3038               	movlw	56
   756     06EF  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   757     06F4                     l780:
   758                           
   759                           ;rx.c: 93:     lcdcmd(0x0C);
   760     06F4  300C               	movlw	12
   761     06F5  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   762     06FA                     l782:
   763                           
   764                           ;rx.c: 94:     lcdcmd(0x01);
   765     06FA  3001               	movlw	1
   766     06FB  120A  118A  269A  120A  118A  	fcall	_lcdcmd
   767     0700                     l784:
   768                           
   769                           ;rx.c: 95:     _delay((unsigned long)((100)*(6000000/4000.0)));
   770     0700  30C3               	movlw	195
   771     0701  00F4               	movwf	??_receivee_init+1
   772     0702  30CD               	movlw	205
   773     0703  00F3               	movwf	??_receivee_init
   774     0704                     u117:
   775     0704  0BF3               	decfsz	??_receivee_init,f
   776     0705  2F04               	goto	u117
   777     0706  0BF4               	decfsz	??_receivee_init+1,f
   778     0707  2F04               	goto	u117
   779     0708                     l60:
   780     0708  0008               	return
   781     0709                     __end_of_receivee_init:
   782                           
   783                           	psect	text2
   784     069A                     __ptext2:	
   785 ;; *************** function _lcdcmd *****************
   786 ;; Defined at:
   787 ;;		line 99 in file "rx.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;  j               1    wreg     unsigned char 
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  j               1    2[COMMON] unsigned char 
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, status,2, status,0, btemp+1
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   801 ;;      Params:         0       0       0       0       0
   802 ;;      Locals:         1       0       0       0       0
   803 ;;      Temps:          2       0       0       0       0
   804 ;;      Totals:         3       0       0       0       0
   805 ;;Total ram usage:        3 bytes
   806 ;; Hardware stack levels used: 1
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_main
   811 ;;		_receivee_init
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815     069A                     _lcdcmd:	
   816                           ;psect for function _lcdcmd
   817                           
   818                           
   819                           ;incstack = 0
   820                           ; Regs used in _lcdcmd: [wreg+status,2+status,0+btemp+1]
   821                           ;lcdcmd@j stored from wreg
   822     069A  00F2               	movwf	lcdcmd@j
   823     069B                     l748:
   824                           
   825                           ;rx.c: 99: void lcdcmd(unsigned char j);rx.c: 100: {;rx.c: 101:     PORTB&=~0x08;
   826     069B  30F7               	movlw	247
   827     069C  00FF               	movwf	btemp+1
   828     069D  087F               	movf	btemp+1,w
   829     069E  1283               	bcf	3,5	;RP0=0, select bank0
   830     069F  1303               	bcf	3,6	;RP1=0, select bank0
   831     06A0  0586               	andwf	6,f	;volatile
   832     06A1                     l750:
   833                           
   834                           ;rx.c: 102:     PORTD=j;
   835     06A1  0872               	movf	lcdcmd@j,w
   836     06A2  0088               	movwf	8	;volatile
   837     06A3                     l752:
   838                           
   839                           ;rx.c: 103:     PORTB|=0x04;
   840     06A3  1506               	bsf	6,2	;volatile
   841     06A4                     l754:
   842                           
   843                           ;rx.c: 104:     _delay((unsigned long)((50)*(6000000/4000.0)));
   844     06A4  3062               	movlw	98
   845     06A5  00F1               	movwf	??_lcdcmd+1
   846     06A6  3065               	movlw	101
   847     06A7  00F0               	movwf	??_lcdcmd
   848     06A8                     u127:
   849     06A8  0BF0               	decfsz	??_lcdcmd,f
   850     06A9  2EA8               	goto	u127
   851     06AA  0BF1               	decfsz	??_lcdcmd+1,f
   852     06AB  2EA8               	goto	u127
   853     06AC  2EAD               	nop2
   854                           
   855                           ;rx.c: 105:     PORTB&=~0x04;
   856     06AD  30FB               	movlw	251
   857     06AE  00FF               	movwf	btemp+1
   858     06AF  087F               	movf	btemp+1,w
   859     06B0  1283               	bcf	3,5	;RP0=0, select bank0
   860     06B1  1303               	bcf	3,6	;RP1=0, select bank0
   861     06B2  0586               	andwf	6,f	;volatile
   862     06B3                     l63:
   863     06B3  0008               	return
   864     06B4                     __end_of_lcdcmd:
   865                           
   866                           	psect	text3
   867     0683                     __ptext3:	
   868 ;; *************** function _lcddata *****************
   869 ;; Defined at:
   870 ;;		line 108 in file "rx.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  j               1    wreg     unsigned char 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  j               1    2[COMMON] unsigned char 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, status,2, status,0, btemp+1
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   884 ;;      Params:         0       0       0       0       0
   885 ;;      Locals:         1       0       0       0       0
   886 ;;      Temps:          2       0       0       0       0
   887 ;;      Totals:         3       0       0       0       0
   888 ;;Total ram usage:        3 bytes
   889 ;; Hardware stack levels used: 1
   890 ;; This function calls:
   891 ;;		Nothing
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897     0683                     _lcddata:	
   898                           ;psect for function _lcddata
   899                           
   900                           
   901                           ;incstack = 0
   902                           ; Regs used in _lcddata: [wreg+status,2+status,0+btemp+1]
   903                           ;lcddata@j stored from wreg
   904     0683  00F2               	movwf	lcddata@j
   905     0684                     l786:
   906                           
   907                           ;rx.c: 108: void lcddata(unsigned char j);rx.c: 109: {;rx.c: 110:     PORTB|=0x08;
   908     0684  1283               	bcf	3,5	;RP0=0, select bank0
   909     0685  1303               	bcf	3,6	;RP1=0, select bank0
   910     0686  1586               	bsf	6,3	;volatile
   911     0687                     l788:
   912                           
   913                           ;rx.c: 111:     PORTD=j;
   914     0687  0872               	movf	lcddata@j,w
   915     0688  0088               	movwf	8	;volatile
   916     0689                     l790:
   917                           
   918                           ;rx.c: 112:     PORTB|=0x04;
   919     0689  1506               	bsf	6,2	;volatile
   920                           
   921                           ;rx.c: 113:     _delay((unsigned long)((50)*(6000000/4000.0)));
   922     068A  3062               	movlw	98
   923     068B  00F1               	movwf	??_lcddata+1
   924     068C  3065               	movlw	101
   925     068D  00F0               	movwf	??_lcddata
   926     068E                     u137:
   927     068E  0BF0               	decfsz	??_lcddata,f
   928     068F  2E8E               	goto	u137
   929     0690  0BF1               	decfsz	??_lcddata+1,f
   930     0691  2E8E               	goto	u137
   931     0692  2E93               	nop2
   932     0693                     l792:
   933                           
   934                           ;rx.c: 114:     PORTB&=~0x04;
   935     0693  30FB               	movlw	251
   936     0694  00FF               	movwf	btemp+1
   937     0695  087F               	movf	btemp+1,w
   938     0696  1283               	bcf	3,5	;RP0=0, select bank0
   939     0697  1303               	bcf	3,6	;RP1=0, select bank0
   940     0698  0586               	andwf	6,f	;volatile
   941     0699                     l66:
   942     0699  0008               	return
   943     069A                     __end_of_lcddata:
   944     007E                     btemp	set	126	;btemp
   945     007E                     wtemp0	set	126
   946                           
   947                           	psect	config
   948                           
   949                           ;Config register CONFIG @ 0x2007
   950                           ;	Oscillator Selection bits
   951                           ;	FOSC = EXTRC, RC oscillator
   952                           ;	Watchdog Timer Enable bit
   953                           ;	WDTE = OFF, WDT disabled
   954                           ;	Power-up Timer Enable bit
   955                           ;	PWRTE = OFF, PWRT disabled
   956                           ;	Brown-out Reset Enable bit
   957                           ;	BOREN = OFF, BOR disabled
   958                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   959                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   960                           ;	Data EEPROM Memory Code Protection bit
   961                           ;	CPD = OFF, Data EEPROM code protection off
   962                           ;	Flash Program Memory Write Enable bits
   963                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   964                           ;	In-Circuit Debugger Mode bit
   965                           ;	DEBUG = 0x1, unprogrammed default
   966                           ;	Flash Program Memory Code Protection bit
   967                           ;	CP = OFF, Code protection off
   968     2007                     	org	8199
   969     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_receivee_init
    _receivee_init->_lcdcmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      66
                                              5 COMMON     2     2      0
                             _lcdcmd
                            _lcddata
                      _receivee_init
 ---------------------------------------------------------------------------------
 (1) _receivee_init                                        2     2      0      22
                                              3 COMMON     2     2      0
                             _lcdcmd
 ---------------------------------------------------------------------------------
 (2) _lcdcmd                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcddata                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcdcmd
   _lcddata
   _receivee_init
     _lcdcmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      12        0.0%
ABS                  0      0      1D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 01 20:03:17 2024

                      _i 0078                        pc 0002                       l60 0708  
                     l63 06B3                       l47 0744                       l66 0699  
                     u40 0729                       u41 0728                       u50 0744  
                     u51 0743                       u60 074A                       u61 0749  
                     u77 07E3                       u87 06CE                       u97 06DC  
                     _rx 002A                       _tx 0020                       fsr 0004  
                    l810 072F                      l802 0715                      l820 073E  
                    l804 071F                      l750 06A1                      l830 0764  
                    l822 074A                      l806 0723                      l752 06A3  
                    l760 06BA                      l840 078B                      l832 076C  
                    l824 074D                      l816 0730                      l808 0729  
                    l754 06A4                      l770 06D2                      l762 06BE  
                    l850 07B6                      l842 0797                      l834 0778  
                    l826 0759                      l818 073A                      l748 069B  
                    l780 06F4                      l772 06D8                      l764 06C2  
                    l756 06B4                      l852 07BB                      l844 079C  
                    l836 077D                      l828 075E                      l860 07DF  
                    l790 0689                      l782 06FA                      l774 06E0  
                    l766 06C4                      l758 06B8                      l854 07C1  
                    l846 07A2                      l838 0783                      l792 0693  
                    l784 0700                      l776 06E6                      l768 06CA  
                    l848 07AA                      l786 0684                      l778 06EE  
                    l858 07C9                      l794 0709                      l788 0687  
                    l796 0714                      l886 07D1                      u107 06EA  
                    u117 0704                      u127 06A8                      u137 068E  
                    fsr0 0004                      indf 0000                     _PIR1 000C  
                   _main 0709                     btemp 007E                     start 0000  
                  ?_main 0070                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TXREG 0019                    _TXSTA 0098          __end_of_lcddata 069A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EC             __end_of_main 07EC                   ??_main 0075  
                 _lcdcmd 069A                ??_lcddata 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 066F               __pmaintext 0709  
                ?_lcdcmd 0070                  __ptext1 06B4                  __ptext2 069A  
                __ptext3 0683                  _lcddata 0683                  _rec_val 0077  
                lcdcmd@j 0072            _receivee_init 06B4     end_of_initialization 07FC  
         ?_receivee_init 0070           __end_of_lcdcmd 06B4      start_initialization 07EC  
             init_fetch0 065C                 ??_lcdcmd 0070              __pdataBANK0 0020  
            __pbssCOMMON 0077          ??_receivee_init 0073                ___latbits 0002  
               ?_lcddata 0070                 lcddata@j 0072                 init_ram0 0660  
  __end_of_receivee_init 0709  
