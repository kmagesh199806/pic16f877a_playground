

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Feb 24 19:30:08 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0000                     	;# 
   169     0001                     	;# 
   170     0002                     	;# 
   171     0003                     	;# 
   172     0004                     	;# 
   173     0005                     	;# 
   174     0006                     	;# 
   175     0007                     	;# 
   176     0008                     	;# 
   177     0009                     	;# 
   178     000A                     	;# 
   179     000B                     	;# 
   180     000C                     	;# 
   181     000D                     	;# 
   182     000E                     	;# 
   183     000E                     	;# 
   184     000F                     	;# 
   185     0010                     	;# 
   186     0011                     	;# 
   187     0012                     	;# 
   188     0013                     	;# 
   189     0014                     	;# 
   190     0015                     	;# 
   191     0015                     	;# 
   192     0016                     	;# 
   193     0017                     	;# 
   194     0018                     	;# 
   195     0019                     	;# 
   196     001A                     	;# 
   197     001B                     	;# 
   198     001B                     	;# 
   199     001C                     	;# 
   200     001D                     	;# 
   201     001E                     	;# 
   202     001F                     	;# 
   203     0081                     	;# 
   204     0085                     	;# 
   205     0086                     	;# 
   206     0087                     	;# 
   207     0088                     	;# 
   208     0089                     	;# 
   209     008C                     	;# 
   210     008D                     	;# 
   211     008E                     	;# 
   212     0091                     	;# 
   213     0092                     	;# 
   214     0093                     	;# 
   215     0094                     	;# 
   216     0098                     	;# 
   217     0099                     	;# 
   218     009C                     	;# 
   219     009D                     	;# 
   220     009E                     	;# 
   221     009F                     	;# 
   222     010C                     	;# 
   223     010D                     	;# 
   224     010E                     	;# 
   225     010F                     	;# 
   226     018C                     	;# 
   227     018D                     	;# 
   228     000B                     _INTCON	set	11
   229     0008                     _PORTD	set	8
   230     0006                     _PORTB	set	6
   231     0007                     _PORTC	set	7
   232     0087                     _TRISC	set	135
   233     0088                     _TRISD	set	136
   234     0086                     _TRISB	set	134
   235                           
   236                           	psect	cinit
   237     0011                     start_initialization:	
   238                           ; #config settings
   239                           
   240     0011                     __initialization:
   241                           
   242                           ; Clear objects allocated to COMMON
   243     0011  01F5               	clrf	__pbssCOMMON& (0+127)
   244     0012                     end_of_initialization:	
   245                           ;End of C runtime variable initialization code
   246                           
   247     0012                     __end_of__initialization:
   248     0012  0183               	clrf	3
   249     0013  120A  118A  284C   	ljmp	_main	;jump to C main() function
   250                           
   251                           	psect	bssCOMMON
   252     0075                     __pbssCOMMON:
   253     0075                     _val:
   254     0075                     	ds	1
   255                           
   256                           	psect	cstackCOMMON
   257     0070                     __pcstackCOMMON:
   258     0070                     ?_init:
   259     0070                     ?_main:	
   260                           ; 1 bytes @ 0x0
   261                           
   262     0070                     ?_ISR:	
   263                           ; 1 bytes @ 0x0
   264                           
   265     0070                     ??_ISR:	
   266                           ; 1 bytes @ 0x0
   267                           
   268                           
   269                           ; 1 bytes @ 0x0
   270     0070                     	ds	3
   271     0073                     ??_init:
   272     0073                     ??_main:	
   273                           ; 1 bytes @ 0x3
   274                           
   275                           
   276                           ; 1 bytes @ 0x3
   277     0073                     	ds	2
   278                           
   279                           	psect	maintext
   280     004C                     __pmaintext:	
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 22 in file "intrupttask.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;		None
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : B00/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   300 ;;      Params:         0       0       0       0       0
   301 ;;      Locals:         0       0       0       0       0
   302 ;;      Temps:          2       0       0       0       0
   303 ;;      Totals:         2       0       0       0       0
   304 ;;Total ram usage:        2 bytes
   305 ;; Hardware stack levels required when called: 2
   306 ;; This function calls:
   307 ;;		_init
   308 ;; This function is called by:
   309 ;;		Startup code after reset
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313     004C                     _main:	
   314                           ;psect for function _main
   315                           
   316     004C                     l594:	
   317                           ;incstack = 0
   318                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   319                           
   320                           
   321                           ;intrupttask.c: 24:     init();
   322     004C  120A  118A  2033  120A  118A  	fcall	_init
   323     0051                     l596:
   324                           
   325                           ;intrupttask.c: 26:     {;intrupttask.c: 27:         PORTC=~PORTC;
   326     0051  1283               	bcf	3,5	;RP0=0, select bank0
   327     0052  1303               	bcf	3,6	;RP1=0, select bank0
   328     0053  0987               	comf	7,f	;volatile
   329     0054                     l598:
   330                           
   331                           ;intrupttask.c: 28:         _delay((unsigned long)((50)*(6000000/4000.0)));
   332     0054  3062               	movlw	98
   333     0055  00F4               	movwf	??_main+1
   334     0056  3065               	movlw	101
   335     0057  00F3               	movwf	??_main
   336     0058                     u37:
   337     0058  0BF3               	decfsz	??_main,f
   338     0059  2858               	goto	u37
   339     005A  0BF4               	decfsz	??_main+1,f
   340     005B  2858               	goto	u37
   341     005C  285D               	nop2
   342     005D  2851               	goto	l596
   343     005E  120A  118A  280E   	ljmp	start
   344     0061                     __end_of_main:
   345                           
   346                           	psect	text1
   347     0033                     __ptext1:	
   348 ;; *************** function _init *****************
   349 ;; Defined at:
   350 ;;		line 14 in file "driver.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, status,2, status,0, btemp+1
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0
   367 ;;      Totals:         0       0       0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels used: 1
   370 ;; Hardware stack levels required when called: 1
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378     0033                     _init:	
   379                           ;psect for function _init
   380                           
   381     0033                     l586:	
   382                           ;incstack = 0
   383                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1]
   384                           
   385                           
   386                           ;driver.c: 16:     TRISB=0x01;
   387     0033  3001               	movlw	1
   388     0034  1683               	bsf	3,5	;RP0=1, select bank1
   389     0035  1303               	bcf	3,6	;RP1=0, select bank1
   390     0036  0086               	movwf	6	;volatile
   391     0037                     l588:
   392                           
   393                           ;driver.c: 17:     PORTB=0x00;
   394     0037  1283               	bcf	3,5	;RP0=0, select bank0
   395     0038  1303               	bcf	3,6	;RP1=0, select bank0
   396     0039  0186               	clrf	6	;volatile
   397     003A                     l590:
   398                           
   399                           ;driver.c: 18:     TRISD=0xFE;
   400     003A  30FE               	movlw	254
   401     003B  1683               	bsf	3,5	;RP0=1, select bank1
   402     003C  1303               	bcf	3,6	;RP1=0, select bank1
   403     003D  0088               	movwf	8	;volatile
   404                           
   405                           ;driver.c: 19:     PORTD=0x00;
   406     003E  1283               	bcf	3,5	;RP0=0, select bank0
   407     003F  1303               	bcf	3,6	;RP1=0, select bank0
   408     0040  0188               	clrf	8	;volatile
   409                           
   410                           ;driver.c: 20:     TRISC=0x00;
   411     0041  1683               	bsf	3,5	;RP0=1, select bank1
   412     0042  1303               	bcf	3,6	;RP1=0, select bank1
   413     0043  0187               	clrf	7	;volatile
   414                           
   415                           ;driver.c: 21:     PORTC=0x00;
   416     0044  1283               	bcf	3,5	;RP0=0, select bank0
   417     0045  1303               	bcf	3,6	;RP1=0, select bank0
   418     0046  0187               	clrf	7	;volatile
   419     0047                     l592:
   420                           
   421                           ;driver.c: 23:     INTCON|=0x90;
   422     0047  3090               	movlw	144
   423     0048  00FF               	movwf	btemp+1
   424     0049  087F               	movf	btemp+1,w
   425     004A  048B               	iorwf	11,f	;volatile
   426     004B                     l33:
   427     004B  0008               	return
   428     004C                     __end_of_init:
   429                           
   430                           	psect	text2
   431     0016                     __ptext2:	
   432 ;; *************** function _ISR *****************
   433 ;; Defined at:
   434 ;;		line 26 in file "driver.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, status,2, status,0, btemp+1
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   448 ;;      Params:         0       0       0       0       0
   449 ;;      Locals:         0       0       0       0       0
   450 ;;      Temps:          3       0       0       0       0
   451 ;;      Totals:         3       0       0       0       0
   452 ;;Total ram usage:        3 bytes
   453 ;; Hardware stack levels used: 1
   454 ;; This function calls:
   455 ;;		Nothing
   456 ;; This function is called by:
   457 ;;		Interrupt level 1
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461     0016                     _ISR:	
   462                           ;psect for function _ISR
   463                           
   464     0016                     i1l600:
   465                           
   466                           ;driver.c: 28:     if(INTCON & 0x02)
   467     0016  1C8B               	btfss	11,1	;volatile
   468     0017  2819               	goto	u1_21
   469     0018  281A               	goto	u1_20
   470     0019                     u1_21:
   471     0019  2826               	goto	i1l38
   472     001A                     u1_20:
   473     001A                     i1l602:
   474                           
   475                           ;driver.c: 29:     {;driver.c: 30:          PORTD |= 0x01;
   476     001A  1283               	bcf	3,5	;RP0=0, select bank0
   477     001B  1303               	bcf	3,6	;RP1=0, select bank0
   478     001C  1408               	bsf	8,0	;volatile
   479     001D                     i1l604:	
   480                           ;driver.c: 31:          while(PORTB!=0);
   481                           
   482     001D  0806               	movf	6,w	;volatile
   483     001E  1D03               	btfss	3,2
   484     001F  2821               	goto	u2_21
   485     0020  2822               	goto	u2_20
   486     0021                     u2_21:
   487     0021  281D               	goto	i1l604
   488     0022                     u2_20:
   489     0022                     i1l606:
   490                           
   491                           ;driver.c: 32:          PORTD &=~0x01;
   492     0022  30FE               	movlw	254
   493     0023  00FF               	movwf	btemp+1
   494     0024  087F               	movf	btemp+1,w
   495     0025  0588               	andwf	8,f	;volatile
   496     0026                     i1l38:	
   497                           ;driver.c: 33:     }
   498                           
   499                           
   500                           ;driver.c: 34:     INTCON&=~0x02;
   501     0026  30FD               	movlw	253
   502     0027  00FF               	movwf	btemp+1
   503     0028  087F               	movf	btemp+1,w
   504     0029  058B               	andwf	11,f	;volatile
   505     002A                     i1l42:
   506     002A  0872               	movf	??_ISR+2,w
   507     002B  00FF               	movwf	btemp+1
   508     002C  0871               	movf	??_ISR+1,w
   509     002D  008A               	movwf	10
   510     002E  0E70               	swapf	??_ISR,w
   511     002F  0083               	movwf	3
   512     0030  0EFE               	swapf	btemp,f
   513     0031  0E7E               	swapf	btemp,w
   514     0032  0009               	retfie
   515     0033                     __end_of_ISR:
   516     007E                     btemp	set	126	;btemp
   517     007E                     wtemp0	set	126
   518                           
   519                           	psect	intentry
   520     0004                     __pintentry:	
   521                           ;incstack = 0
   522                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   523                           
   524     0004                     interrupt_function:
   525     007E                     saved_w	set	btemp
   526     0004  00FE               	movwf	btemp
   527     0005  0E03               	swapf	3,w
   528     0006  00F0               	movwf	??_ISR
   529     0007  080A               	movf	10,w
   530     0008  00F1               	movwf	??_ISR+1
   531     0009  087F               	movf	btemp+1,w
   532     000A  00F2               	movwf	??_ISR+2
   533     000B  120A  118A  2816   	ljmp	_ISR
   534                           
   535                           	psect	config
   536                           
   537                           ;Config register CONFIG @ 0x2007
   538                           ;	Oscillator Selection bits
   539                           ;	FOSC = EXTRC, RC oscillator
   540                           ;	Watchdog Timer Enable bit
   541                           ;	WDTE = OFF, WDT disabled
   542                           ;	Power-up Timer Enable bit
   543                           ;	PWRTE = OFF, PWRT disabled
   544                           ;	Brown-out Reset Enable bit
   545                           ;	BOREN = OFF, BOR disabled
   546                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   547                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   548                           ;	Data EEPROM Memory Code Protection bit
   549                           ;	CPD = OFF, Data EEPROM code protection off
   550                           ;	Flash Program Memory Write Enable bits
   551                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   552                           ;	In-Circuit Debugger Mode bit
   553                           ;	DEBUG = 0x1, unprogrammed default
   554                           ;	Flash Program Memory Code Protection bit
   555                           ;	CP = OFF, Code protection off
   556     2007                     	org	8199
   557     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMMON     2     2      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Feb 24 19:30:08 2024

                     l33 004B                       u37 0058                      l590 003A  
                    l592 0047                      l586 0033                      l594 004C  
                    l588 0037                      l596 0051                      l598 0054  
                    _ISR 0016                      _val 0075                     ?_ISR 0070  
                   i1l42 002A                     i1l38 0026                     u1_20 001A  
                   u1_21 0019                     u2_20 0022                     u2_21 0021  
                   _main 004C                     _init 0033                     btemp 007E  
                   start 000E                    ??_ISR 0070                    ?_main 0070  
                  ?_init 0070                    i1l600 0016                    i1l602 001A  
                  i1l604 001D                    i1l606 0022                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0061             __end_of_init 004C                   ??_main 0073  
                 ??_init 0073                   _INTCON 000B                   saved_w 007E  
__end_of__initialization 0012           __pcstackCOMMON 0070               __pmaintext 004C  
             __pintentry 0004                  __ptext1 0033                  __ptext2 0016  
   end_of_initialization 0012      start_initialization 0011              __end_of_ISR 0033  
            __pbssCOMMON 0075                ___latbits 0002        interrupt_function 0004  
               intlevel1 0000  
