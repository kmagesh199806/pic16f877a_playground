

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Mar 30 19:21:26 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 22/03/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0098                     	;# 
   105     0099                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     010C                     	;# 
   111     010D                     	;# 
   112     010E                     	;# 
   113     010F                     	;# 
   114     018C                     	;# 
   115     018D                     	;# 
   116     0000                     	;# 
   117     0001                     	;# 
   118     0002                     	;# 
   119     0003                     	;# 
   120     0004                     	;# 
   121     0005                     	;# 
   122     0006                     	;# 
   123     0007                     	;# 
   124     0008                     	;# 
   125     0009                     	;# 
   126     000A                     	;# 
   127     000B                     	;# 
   128     000C                     	;# 
   129     000D                     	;# 
   130     000E                     	;# 
   131     000E                     	;# 
   132     000F                     	;# 
   133     0010                     	;# 
   134     0011                     	;# 
   135     0012                     	;# 
   136     0013                     	;# 
   137     0014                     	;# 
   138     0015                     	;# 
   139     0015                     	;# 
   140     0016                     	;# 
   141     0017                     	;# 
   142     0018                     	;# 
   143     0019                     	;# 
   144     001A                     	;# 
   145     001B                     	;# 
   146     001B                     	;# 
   147     001C                     	;# 
   148     001D                     	;# 
   149     001E                     	;# 
   150     001F                     	;# 
   151     0081                     	;# 
   152     0085                     	;# 
   153     0086                     	;# 
   154     0087                     	;# 
   155     0088                     	;# 
   156     0089                     	;# 
   157     008C                     	;# 
   158     008D                     	;# 
   159     008E                     	;# 
   160     0091                     	;# 
   161     0092                     	;# 
   162     0093                     	;# 
   163     0094                     	;# 
   164     0098                     	;# 
   165     0099                     	;# 
   166     009C                     	;# 
   167     009D                     	;# 
   168     009E                     	;# 
   169     009F                     	;# 
   170     010C                     	;# 
   171     010D                     	;# 
   172     010E                     	;# 
   173     010F                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     0000                     	;# 
   177     0001                     	;# 
   178     0002                     	;# 
   179     0003                     	;# 
   180     0004                     	;# 
   181     0005                     	;# 
   182     0006                     	;# 
   183     0007                     	;# 
   184     0008                     	;# 
   185     0009                     	;# 
   186     000A                     	;# 
   187     000B                     	;# 
   188     000C                     	;# 
   189     000D                     	;# 
   190     000E                     	;# 
   191     000E                     	;# 
   192     000F                     	;# 
   193     0010                     	;# 
   194     0011                     	;# 
   195     0012                     	;# 
   196     0013                     	;# 
   197     0014                     	;# 
   198     0015                     	;# 
   199     0015                     	;# 
   200     0016                     	;# 
   201     0017                     	;# 
   202     0018                     	;# 
   203     0019                     	;# 
   204     001A                     	;# 
   205     001B                     	;# 
   206     001B                     	;# 
   207     001C                     	;# 
   208     001D                     	;# 
   209     001E                     	;# 
   210     001F                     	;# 
   211     0081                     	;# 
   212     0085                     	;# 
   213     0086                     	;# 
   214     0087                     	;# 
   215     0088                     	;# 
   216     0089                     	;# 
   217     008C                     	;# 
   218     008D                     	;# 
   219     008E                     	;# 
   220     0091                     	;# 
   221     0092                     	;# 
   222     0093                     	;# 
   223     0094                     	;# 
   224     0098                     	;# 
   225     0099                     	;# 
   226     009C                     	;# 
   227     009D                     	;# 
   228     009E                     	;# 
   229     009F                     	;# 
   230     010C                     	;# 
   231     010D                     	;# 
   232     010E                     	;# 
   233     010F                     	;# 
   234     018C                     	;# 
   235     018D                     	;# 
   236     0013                     _SSPBUF	set	19
   237     0014                     _SSPCON	set	20
   238     0008                     _PORTD	set	8
   239     0063                     _SSPIF	set	99
   240     0087                     _TRISC	set	135
   241     0094                     _SSPSTAT	set	148
   242     0093                     _SSPADD	set	147
   243     0091                     _SSPCON2	set	145
   244     0088                     _TRISD	set	136
   245     048E                     _ACKSTAT	set	1166
   246     048C                     _ACKEN	set	1164
   247     048D                     _ACKDT	set	1165
   248                           
   249                           	psect	cinit
   250     07FC                     start_initialization:	
   251                           ; #config settings
   252                           
   253     07FC                     __initialization:
   254     07FC                     end_of_initialization:	
   255                           ;End of C runtime variable initialization code
   256                           
   257     07FC                     __end_of__initialization:
   258     07FC  0183               	clrf	3
   259     07FD  120A  118A  2F59   	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	cstackCOMMON
   262     0070                     __pcstackCOMMON:
   263     0070                     ?_i2c_master_wait:
   264     0070                     ??_i2c_master_wait:	
   265                           ; 1 bytes @ 0x0
   266                           
   267     0070                     ?_main:	
   268                           ; 1 bytes @ 0x0
   269                           
   270     0070                     ?_i2c_master_start:	
   271                           ; 1 bytes @ 0x0
   272                           
   273     0070                     ??_i2c_master_start:	
   274                           ; 1 bytes @ 0x0
   275                           
   276     0070                     ?_i2c_master_stop:	
   277                           ; 1 bytes @ 0x0
   278                           
   279     0070                     ??_i2c_master_stop:	
   280                           ; 1 bytes @ 0x0
   281                           
   282     0070                     ?_i2c_nack:	
   283                           ; 1 bytes @ 0x0
   284                           
   285     0070                     ??_i2c_nack:	
   286                           ; 1 bytes @ 0x0
   287                           
   288     0070                     ?_i2c_master_repeatedstart:	
   289                           ; 1 bytes @ 0x0
   290                           
   291     0070                     ??_i2c_master_repeatedstart:	
   292                           ; 1 bytes @ 0x0
   293                           
   294     0070                     ?_i2c_read_byte:	
   295                           ; 1 bytes @ 0x0
   296                           
   297     0070                     ??_i2c_read_byte:	
   298                           ; 1 bytes @ 0x0
   299                           
   300     0070                     ?_i2c_master_write:	
   301                           ; 1 bytes @ 0x0
   302                           
   303     0070                     ??_i2c_master_write:	
   304                           ; 1 bytes @ 0x0
   305                           
   306     0070                     ?___lldiv:	
   307                           ; 1 bytes @ 0x0
   308                           
   309     0070                     i2c_master_write@data:	
   310                           ; 4 bytes @ 0x0
   311                           
   312     0070                     ___lldiv@divisor:	
   313                           ; 1 bytes @ 0x0
   314                           
   315                           
   316                           ; 4 bytes @ 0x0
   317     0070                     	ds	1
   318     0071                     ?_eprom_write:
   319     0071                     ?_eprom_read:	
   320                           ; 1 bytes @ 0x1
   321                           
   322     0071                     eprom_write@ad:	
   323                           ; 1 bytes @ 0x1
   324                           
   325     0071                     eprom_read@add:	
   326                           ; 2 bytes @ 0x1
   327                           
   328                           
   329                           ; 2 bytes @ 0x1
   330     0071                     	ds	2
   331     0073                     ??_eprom_read:
   332     0073                     eprom_write@data:	
   333                           ; 1 bytes @ 0x3
   334                           
   335     0073                     eprom_read@data:	
   336                           ; 1 bytes @ 0x3
   337                           
   338                           
   339                           ; 1 bytes @ 0x3
   340     0073                     	ds	1
   341     0074                     ??_eprom_write:
   342     0074                     ___lldiv@dividend:	
   343                           ; 1 bytes @ 0x4
   344                           
   345                           
   346                           ; 4 bytes @ 0x4
   347     0074                     	ds	4
   348     0078                     ??___lldiv:
   349                           
   350                           ; 1 bytes @ 0x8
   351     0078                     	ds	1
   352     0079                     ___lldiv@quotient:
   353                           
   354                           ; 4 bytes @ 0x9
   355     0079                     	ds	4
   356     007D                     ___lldiv@counter:
   357                           
   358                           ; 1 bytes @ 0xD
   359     007D                     	ds	1
   360                           
   361                           	psect	cstackBANK0
   362     0020                     __pcstackBANK0:
   363     0020                     ?_i2c_master_init:
   364     0020                     i2c_master_init@baud:	
   365                           ; 1 bytes @ 0x0
   366                           
   367                           
   368                           ; 4 bytes @ 0x0
   369     0020                     	ds	4
   370     0024                     ??_i2c_master_init:
   371                           
   372                           ; 1 bytes @ 0x4
   373     0024                     	ds	4
   374     0028                     ??_main:
   375                           
   376                           ; 1 bytes @ 0x8
   377     0028                     	ds	3
   378                           
   379                           	psect	maintext
   380     0759                     __pmaintext:	
   381 ;;
   382 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   383 ;;
   384 ;; *************** function _main *****************
   385 ;; Defined at:
   386 ;;		line 23 in file "mian_1.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : B00/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   400 ;;      Params:         0       0       0       0       0
   401 ;;      Locals:         0       0       0       0       0
   402 ;;      Temps:          0       3       0       0       0
   403 ;;      Totals:         0       3       0       0       0
   404 ;;Total ram usage:        3 bytes
   405 ;; Hardware stack levels required when called: 3
   406 ;; This function calls:
   407 ;;		_eprom_read
   408 ;;		_eprom_write
   409 ;;		_i2c_master_init
   410 ;; This function is called by:
   411 ;;		Startup code after reset
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415     0759                     _main:	
   416                           ;psect for function _main
   417                           
   418     0759                     l849:	
   419                           ;incstack = 0
   420                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   421                           
   422                           
   423                           ;mian_1.c: 25:     i2c_master_init(100000);
   424     0759  3000               	movlw	0
   425     075A  1283               	bcf	3,5	;RP0=0, select bank0
   426     075B  1303               	bcf	3,6	;RP1=0, select bank0
   427     075C  00A3               	movwf	i2c_master_init@baud+3
   428     075D  3001               	movlw	1
   429     075E  00A2               	movwf	i2c_master_init@baud+2
   430     075F  3086               	movlw	134
   431     0760  00A1               	movwf	i2c_master_init@baud+1
   432     0761  30A0               	movlw	160
   433     0762  00A0               	movwf	i2c_master_init@baud
   434     0763  120A  118A  262E  120A  118A  	fcall	_i2c_master_init
   435     0768                     l851:
   436                           
   437                           ;mian_1.c: 26:     eprom_write(0x0023,'A');
   438     0768  3023               	movlw	35
   439     0769  00F1               	movwf	eprom_write@ad
   440     076A  3000               	movlw	0
   441     076B  00F2               	movwf	eprom_write@ad+1
   442     076C  3041               	movlw	65
   443     076D  00F3               	movwf	eprom_write@data
   444     076E  120A  118A  2668  120A  118A  	fcall	_eprom_write
   445     0773                     l853:
   446                           
   447                           ;mian_1.c: 27:     _delay((unsigned long)((10)*(6000000/4000.0)));
   448     0773  3014               	movlw	20
   449     0774  1283               	bcf	3,5	;RP0=0, select bank0
   450     0775  1303               	bcf	3,6	;RP1=0, select bank0
   451     0776  00A9               	movwf	??_main+1
   452     0777  3079               	movlw	121
   453     0778  00A8               	movwf	??_main
   454     0779                     u377:
   455     0779  0BA8               	decfsz	??_main,f
   456     077A  2F79               	goto	u377
   457     077B  0BA9               	decfsz	??_main+1,f
   458     077C  2F79               	goto	u377
   459     077D                     l855:
   460                           
   461                           ;mian_1.c: 28:     eprom_write(0x0028,'B');
   462     077D  3028               	movlw	40
   463     077E  00F1               	movwf	eprom_write@ad
   464     077F  3000               	movlw	0
   465     0780  00F2               	movwf	eprom_write@ad+1
   466     0781  3042               	movlw	66
   467     0782  00F3               	movwf	eprom_write@data
   468     0783  120A  118A  2668  120A  118A  	fcall	_eprom_write
   469     0788                     l857:
   470                           
   471                           ;mian_1.c: 29:     _delay((unsigned long)((10)*(6000000/4000.0)));
   472     0788  3014               	movlw	20
   473     0789  1283               	bcf	3,5	;RP0=0, select bank0
   474     078A  1303               	bcf	3,6	;RP1=0, select bank0
   475     078B  00A9               	movwf	??_main+1
   476     078C  3079               	movlw	121
   477     078D  00A8               	movwf	??_main
   478     078E                     u387:
   479     078E  0BA8               	decfsz	??_main,f
   480     078F  2F8E               	goto	u387
   481     0790  0BA9               	decfsz	??_main+1,f
   482     0791  2F8E               	goto	u387
   483     0792                     l859:
   484                           
   485                           ;mian_1.c: 30:     eprom_write(0x0036,'C');
   486     0792  3036               	movlw	54
   487     0793  00F1               	movwf	eprom_write@ad
   488     0794  3000               	movlw	0
   489     0795  00F2               	movwf	eprom_write@ad+1
   490     0796  3043               	movlw	67
   491     0797  00F3               	movwf	eprom_write@data
   492     0798  120A  118A  2668  120A  118A  	fcall	_eprom_write
   493     079D                     l861:
   494                           
   495                           ;mian_1.c: 31:     _delay((unsigned long)((10)*(6000000/4000.0)));
   496     079D  3014               	movlw	20
   497     079E  1283               	bcf	3,5	;RP0=0, select bank0
   498     079F  1303               	bcf	3,6	;RP1=0, select bank0
   499     07A0  00A9               	movwf	??_main+1
   500     07A1  3079               	movlw	121
   501     07A2  00A8               	movwf	??_main
   502     07A3                     u397:
   503     07A3  0BA8               	decfsz	??_main,f
   504     07A4  2FA3               	goto	u397
   505     07A5  0BA9               	decfsz	??_main+1,f
   506     07A6  2FA3               	goto	u397
   507     07A7                     l863:
   508                           
   509                           ;mian_1.c: 32:     TRISD=0x00;
   510     07A7  1683               	bsf	3,5	;RP0=1, select bank1
   511     07A8  1303               	bcf	3,6	;RP1=0, select bank1
   512     07A9  0188               	clrf	8	;volatile
   513     07AA                     l865:
   514                           
   515                           ;mian_1.c: 33:     PORTD=eprom_read(0x0023);
   516     07AA  3023               	movlw	35
   517     07AB  00F1               	movwf	eprom_read@add
   518     07AC  3000               	movlw	0
   519     07AD  00F2               	movwf	eprom_read@add+1
   520     07AE  120A  118A  26A5  120A  118A  	fcall	_eprom_read
   521     07B3  1283               	bcf	3,5	;RP0=0, select bank0
   522     07B4  1303               	bcf	3,6	;RP1=0, select bank0
   523     07B5  0088               	movwf	8	;volatile
   524     07B6                     l867:
   525                           
   526                           ;mian_1.c: 34:     _delay((unsigned long)((1000)*(6000000/4000.0)));
   527     07B6  3008               	movlw	8
   528     07B7  1283               	bcf	3,5	;RP0=0, select bank0
   529     07B8  1303               	bcf	3,6	;RP1=0, select bank0
   530     07B9  00AA               	movwf	??_main+2
   531     07BA  309D               	movlw	157
   532     07BB  00A9               	movwf	??_main+1
   533     07BC  3005               	movlw	5
   534     07BD  00A8               	movwf	??_main
   535     07BE                     u407:
   536     07BE  0BA8               	decfsz	??_main,f
   537     07BF  2FBE               	goto	u407
   538     07C0  0BA9               	decfsz	??_main+1,f
   539     07C1  2FBE               	goto	u407
   540     07C2  0BAA               	decfsz	??_main+2,f
   541     07C3  2FBE               	goto	u407
   542     07C4                     l869:
   543                           
   544                           ;mian_1.c: 35:     PORTD=eprom_read(0x0028);
   545     07C4  3028               	movlw	40
   546     07C5  00F1               	movwf	eprom_read@add
   547     07C6  3000               	movlw	0
   548     07C7  00F2               	movwf	eprom_read@add+1
   549     07C8  120A  118A  26A5  120A  118A  	fcall	_eprom_read
   550     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   551     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   552     07CF  0088               	movwf	8	;volatile
   553     07D0                     l871:
   554                           
   555                           ;mian_1.c: 36:     _delay((unsigned long)((1000)*(6000000/4000.0)));
   556     07D0  3008               	movlw	8
   557     07D1  1283               	bcf	3,5	;RP0=0, select bank0
   558     07D2  1303               	bcf	3,6	;RP1=0, select bank0
   559     07D3  00AA               	movwf	??_main+2
   560     07D4  309D               	movlw	157
   561     07D5  00A9               	movwf	??_main+1
   562     07D6  3005               	movlw	5
   563     07D7  00A8               	movwf	??_main
   564     07D8                     u417:
   565     07D8  0BA8               	decfsz	??_main,f
   566     07D9  2FD8               	goto	u417
   567     07DA  0BA9               	decfsz	??_main+1,f
   568     07DB  2FD8               	goto	u417
   569     07DC  0BAA               	decfsz	??_main+2,f
   570     07DD  2FD8               	goto	u417
   571     07DE                     l873:
   572                           
   573                           ;mian_1.c: 37:     PORTD=eprom_read(0x0036);
   574     07DE  3036               	movlw	54
   575     07DF  00F1               	movwf	eprom_read@add
   576     07E0  3000               	movlw	0
   577     07E1  00F2               	movwf	eprom_read@add+1
   578     07E2  120A  118A  26A5  120A  118A  	fcall	_eprom_read
   579     07E7  1283               	bcf	3,5	;RP0=0, select bank0
   580     07E8  1303               	bcf	3,6	;RP1=0, select bank0
   581     07E9  0088               	movwf	8	;volatile
   582     07EA                     l875:
   583                           
   584                           ;mian_1.c: 38:     _delay((unsigned long)((1000)*(6000000/4000.0)));
   585     07EA  3008               	movlw	8
   586     07EB  1283               	bcf	3,5	;RP0=0, select bank0
   587     07EC  1303               	bcf	3,6	;RP1=0, select bank0
   588     07ED  00AA               	movwf	??_main+2
   589     07EE  309D               	movlw	157
   590     07EF  00A9               	movwf	??_main+1
   591     07F0  3005               	movlw	5
   592     07F1  00A8               	movwf	??_main
   593     07F2                     u427:
   594     07F2  0BA8               	decfsz	??_main,f
   595     07F3  2FF2               	goto	u427
   596     07F4  0BA9               	decfsz	??_main+1,f
   597     07F5  2FF2               	goto	u427
   598     07F6  0BAA               	decfsz	??_main+2,f
   599     07F7  2FF2               	goto	u427
   600     07F8                     l17:	
   601                           ;mian_1.c: 39:     while(1);
   602                           
   603     07F8                     l18:
   604     07F8  2FF8               	goto	l17
   605     07F9  120A  118A  2800   	ljmp	start
   606     07FC                     __end_of_main:
   607                           
   608                           	psect	text1
   609     062E                     __ptext1:	
   610 ;; *************** function _i2c_master_init *****************
   611 ;; Defined at:
   612 ;;		line 5 in file "driver_1.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  baud            4    0[BANK0 ] const unsigned long 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       4       0       0       0
   627 ;;      Locals:         0       0       0       0       0
   628 ;;      Temps:          0       4       0       0       0
   629 ;;      Totals:         0       8       0       0       0
   630 ;;Total ram usage:        8 bytes
   631 ;; Hardware stack levels used: 1
   632 ;; Hardware stack levels required when called: 1
   633 ;; This function calls:
   634 ;;		___lldiv
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640     062E                     _i2c_master_init:	
   641                           ;psect for function _i2c_master_init
   642                           
   643     062E                     l809:	
   644                           ;incstack = 0
   645                           ; Regs used in _i2c_master_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   646                           
   647                           
   648                           ;driver_1.c: 5:  void i2c_master_init(const unsigned long baud);driver_1.c: 6:  {;driver
      +                          _1.c: 7:      SSPCON=0x28;
   649     062E  3028               	movlw	40
   650     062F  1283               	bcf	3,5	;RP0=0, select bank0
   651     0630  1303               	bcf	3,6	;RP1=0, select bank0
   652     0631  0094               	movwf	20	;volatile
   653     0632                     l811:
   654                           
   655                           ;driver_1.c: 8:      SSPCON2=0x00;
   656     0632  1683               	bsf	3,5	;RP0=1, select bank1
   657     0633  1303               	bcf	3,6	;RP1=0, select bank1
   658     0634  0191               	clrf	17	;volatile
   659     0635                     l813:
   660                           
   661                           ;driver_1.c: 9:      SSPADD=(6000000/(4*baud))-1;
   662     0635  1283               	bcf	3,5	;RP0=0, select bank0
   663     0636  1303               	bcf	3,6	;RP1=0, select bank0
   664     0637  0820               	movf	i2c_master_init@baud,w
   665     0638  00A4               	movwf	??_i2c_master_init
   666     0639  0821               	movf	i2c_master_init@baud+1,w
   667     063A  00A5               	movwf	??_i2c_master_init+1
   668     063B  0822               	movf	i2c_master_init@baud+2,w
   669     063C  00A6               	movwf	??_i2c_master_init+2
   670     063D  0823               	movf	i2c_master_init@baud+3,w
   671     063E  00A7               	movwf	??_i2c_master_init+3
   672     063F  3002               	movlw	2
   673     0640                     u285:
   674     0640  1003               	clrc
   675     0641  0DA4               	rlf	??_i2c_master_init,f
   676     0642  0DA5               	rlf	??_i2c_master_init+1,f
   677     0643  0DA6               	rlf	??_i2c_master_init+2,f
   678     0644  0DA7               	rlf	??_i2c_master_init+3,f
   679     0645                     u280:
   680     0645  3EFF               	addlw	-1
   681     0646  1D03               	skipz
   682     0647  2E40               	goto	u285
   683     0648  0827               	movf	??_i2c_master_init+3,w
   684     0649  00F3               	movwf	___lldiv@divisor+3
   685     064A  0826               	movf	??_i2c_master_init+2,w
   686     064B  00F2               	movwf	___lldiv@divisor+2
   687     064C  0825               	movf	??_i2c_master_init+1,w
   688     064D  00F1               	movwf	___lldiv@divisor+1
   689     064E  0824               	movf	??_i2c_master_init,w
   690     064F  00F0               	movwf	___lldiv@divisor
   691     0650  3000               	movlw	0
   692     0651  00F7               	movwf	___lldiv@dividend+3
   693     0652  305B               	movlw	91
   694     0653  00F6               	movwf	___lldiv@dividend+2
   695     0654  308D               	movlw	141
   696     0655  00F5               	movwf	___lldiv@dividend+1
   697     0656  3080               	movlw	128
   698     0657  00F4               	movwf	___lldiv@dividend
   699     0658  120A  118A  26F3  120A  118A  	fcall	___lldiv
   700     065D  0870               	movf	?___lldiv,w
   701     065E  3EFF               	addlw	255
   702     065F  1683               	bsf	3,5	;RP0=1, select bank1
   703     0660  1303               	bcf	3,6	;RP1=0, select bank1
   704     0661  0093               	movwf	19	;volatile
   705     0662                     l815:
   706                           
   707                           ;driver_1.c: 10:      SSPSTAT=0x00;
   708     0662  0194               	clrf	20	;volatile
   709     0663                     l817:
   710                           
   711                           ;driver_1.c: 11:      TRISC|=0x18;
   712     0663  3018               	movlw	24
   713     0664  00FF               	movwf	btemp+1
   714     0665  087F               	movf	btemp+1,w
   715     0666  0487               	iorwf	7,f	;volatile
   716     0667                     l45:
   717     0667  0008               	return
   718     0668                     __end_of_i2c_master_init:
   719                           
   720                           	psect	text2
   721     06F3                     __ptext2:	
   722 ;; *************** function ___lldiv *****************
   723 ;; Defined at:
   724 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  divisor         4    0[COMMON] unsigned long 
   727 ;;  dividend        4    4[COMMON] unsigned long 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  quotient        4    9[COMMON] unsigned long 
   730 ;;  counter         1   13[COMMON] unsigned char 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  4    0[COMMON] unsigned long 
   733 ;; Registers used:
   734 ;;		wreg, status,2, status,0, btemp+1
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         8       0       0       0       0
   741 ;;      Locals:         5       0       0       0       0
   742 ;;      Temps:          1       0       0       0       0
   743 ;;      Totals:        14       0       0       0       0
   744 ;;Total ram usage:       14 bytes
   745 ;; Hardware stack levels used: 1
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_i2c_master_init
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753     06F3                     ___lldiv:	
   754                           ;psect for function ___lldiv
   755                           
   756     06F3                     l783:	
   757                           ;incstack = 0
   758                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
   759                           
   760     06F3  3000               	movlw	0
   761     06F4  00FC               	movwf	___lldiv@quotient+3
   762     06F5  3000               	movlw	0
   763     06F6  00FB               	movwf	___lldiv@quotient+2
   764     06F7  3000               	movlw	0
   765     06F8  00FA               	movwf	___lldiv@quotient+1
   766     06F9  3000               	movlw	0
   767     06FA  00F9               	movwf	___lldiv@quotient
   768     06FB  0873               	movf	___lldiv@divisor+3,w
   769     06FC  0472               	iorwf	___lldiv@divisor+2,w
   770     06FD  0471               	iorwf	___lldiv@divisor+1,w
   771     06FE  0470               	iorwf	___lldiv@divisor,w
   772     06FF  1903               	skipnz
   773     0700  2F02               	goto	u211
   774     0701  2F03               	goto	u210
   775     0702                     u211:
   776     0702  2F50               	goto	l805
   777     0703                     u210:
   778     0703                     l785:
   779     0703  01FD               	clrf	___lldiv@counter
   780     0704  0AFD               	incf	___lldiv@counter,f
   781     0705  2F13               	goto	l791
   782     0706                     l787:
   783     0706  3001               	movlw	1
   784     0707  00F8               	movwf	??___lldiv
   785     0708                     u225:
   786     0708  1003               	clrc
   787     0709  0DF0               	rlf	___lldiv@divisor,f
   788     070A  0DF1               	rlf	___lldiv@divisor+1,f
   789     070B  0DF2               	rlf	___lldiv@divisor+2,f
   790     070C  0DF3               	rlf	___lldiv@divisor+3,f
   791     070D  0BF8               	decfsz	??___lldiv,f
   792     070E  2F08               	goto	u225
   793     070F                     l789:
   794     070F  3001               	movlw	1
   795     0710  00FF               	movwf	btemp+1
   796     0711  087F               	movf	btemp+1,w
   797     0712  07FD               	addwf	___lldiv@counter,f
   798     0713                     l791:
   799     0713  1FF3               	btfss	___lldiv@divisor+3,7
   800     0714  2F16               	goto	u231
   801     0715  2F17               	goto	u230
   802     0716                     u231:
   803     0716  2F06               	goto	l787
   804     0717                     u230:
   805     0717                     l793:
   806     0717  3001               	movlw	1
   807     0718  00F8               	movwf	??___lldiv
   808     0719                     u245:
   809     0719  1003               	clrc
   810     071A  0DF9               	rlf	___lldiv@quotient,f
   811     071B  0DFA               	rlf	___lldiv@quotient+1,f
   812     071C  0DFB               	rlf	___lldiv@quotient+2,f
   813     071D  0DFC               	rlf	___lldiv@quotient+3,f
   814     071E  0BF8               	decfsz	??___lldiv,f
   815     071F  2F19               	goto	u245
   816     0720                     l795:
   817     0720  0873               	movf	___lldiv@divisor+3,w
   818     0721  0277               	subwf	___lldiv@dividend+3,w
   819     0722  1D03               	skipz
   820     0723  2F2E               	goto	u255
   821     0724  0872               	movf	___lldiv@divisor+2,w
   822     0725  0276               	subwf	___lldiv@dividend+2,w
   823     0726  1D03               	skipz
   824     0727  2F2E               	goto	u255
   825     0728  0871               	movf	___lldiv@divisor+1,w
   826     0729  0275               	subwf	___lldiv@dividend+1,w
   827     072A  1D03               	skipz
   828     072B  2F2E               	goto	u255
   829     072C  0870               	movf	___lldiv@divisor,w
   830     072D  0274               	subwf	___lldiv@dividend,w
   831     072E                     u255:
   832     072E  1C03               	skipc
   833     072F  2F31               	goto	u251
   834     0730  2F32               	goto	u250
   835     0731                     u251:
   836     0731  2F41               	goto	l801
   837     0732                     u250:
   838     0732                     l797:
   839     0732  0870               	movf	___lldiv@divisor,w
   840     0733  02F4               	subwf	___lldiv@dividend,f
   841     0734  0871               	movf	___lldiv@divisor+1,w
   842     0735  1C03               	skipc
   843     0736  0F71               	incfsz	___lldiv@divisor+1,w
   844     0737  02F5               	subwf	___lldiv@dividend+1,f
   845     0738  0872               	movf	___lldiv@divisor+2,w
   846     0739  1C03               	skipc
   847     073A  0F72               	incfsz	___lldiv@divisor+2,w
   848     073B  02F6               	subwf	___lldiv@dividend+2,f
   849     073C  0873               	movf	___lldiv@divisor+3,w
   850     073D  1C03               	skipc
   851     073E  0F73               	incfsz	___lldiv@divisor+3,w
   852     073F  02F7               	subwf	___lldiv@dividend+3,f
   853     0740                     l799:
   854     0740  1479               	bsf	___lldiv@quotient,0
   855     0741                     l801:
   856     0741  3001               	movlw	1
   857     0742                     u265:
   858     0742  1003               	clrc
   859     0743  0CF3               	rrf	___lldiv@divisor+3,f
   860     0744  0CF2               	rrf	___lldiv@divisor+2,f
   861     0745  0CF1               	rrf	___lldiv@divisor+1,f
   862     0746  0CF0               	rrf	___lldiv@divisor,f
   863     0747  3EFF               	addlw	-1
   864     0748  1D03               	skipz
   865     0749  2F42               	goto	u265
   866     074A                     l803:
   867     074A  3001               	movlw	1
   868     074B  02FD               	subwf	___lldiv@counter,f
   869     074C  1D03               	btfss	3,2
   870     074D  2F4F               	goto	u271
   871     074E  2F50               	goto	u270
   872     074F                     u271:
   873     074F  2F17               	goto	l793
   874     0750                     u270:
   875     0750                     l805:
   876     0750  087C               	movf	___lldiv@quotient+3,w
   877     0751  00F3               	movwf	?___lldiv+3
   878     0752  087B               	movf	___lldiv@quotient+2,w
   879     0753  00F2               	movwf	?___lldiv+2
   880     0754  087A               	movf	___lldiv@quotient+1,w
   881     0755  00F1               	movwf	?___lldiv+1
   882     0756  0879               	movf	___lldiv@quotient,w
   883     0757  00F0               	movwf	?___lldiv
   884     0758                     l227:
   885     0758  0008               	return
   886     0759                     __end_of___lldiv:
   887                           
   888                           	psect	text3
   889     0668                     __ptext3:	
   890 ;; *************** function _eprom_write *****************
   891 ;; Defined at:
   892 ;;		line 55 in file "driver_1.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  ad              2    1[COMMON] unsigned int 
   895 ;;  data            1    3[COMMON] unsigned char 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, status,2, status,0, pclath, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   907 ;;      Params:         3       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0
   910 ;;      Totals:         3       0       0       0       0
   911 ;;Total ram usage:        3 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; Hardware stack levels required when called: 2
   914 ;; This function calls:
   915 ;;		_i2c_master_repeatedstart
   916 ;;		_i2c_master_start
   917 ;;		_i2c_master_stop
   918 ;;		_i2c_master_write
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924     0668                     _eprom_write:	
   925                           ;psect for function _eprom_write
   926                           
   927     0668                     l819:	
   928                           ;incstack = 0
   929                           ; Regs used in _eprom_write: [wreg+status,2+status,0+pclath+cstack]
   930                           
   931                           
   932                           ;driver_1.c: 55:  void eprom_write(unsigned int ad,unsigned char data);driver_1.c: 56:  
      +                          {;driver_1.c: 57:      i2c_master_start();
   933     0668  120A  118A  25D7  120A  118A  	fcall	_i2c_master_start
   934                           
   935                           ;driver_1.c: 58:      while(i2c_master_write(0xA0))
   936     066D  2E73               	goto	l78
   937     066E                     l821:
   938                           
   939                           ;driver_1.c: 59:         i2c_master_repeatedstart();
   940     066E  120A  118A  25CE  120A  118A  	fcall	_i2c_master_repeatedstart
   941     0673                     l78:
   942                           
   943                           ;driver_1.c: 58:      while(i2c_master_write(0xA0))
   944     0673  30A0               	movlw	160
   945     0674  120A  118A  2602  120A  118A  	fcall	_i2c_master_write
   946     0679  3A00               	xorlw	0
   947     067A  1D03               	skipz
   948     067B  2E7D               	goto	u291
   949     067C  2E7E               	goto	u290
   950     067D                     u291:
   951     067D  2E6E               	goto	l821
   952     067E                     u290:
   953     067E                     l823:
   954     067E  0872               	movf	eprom_write@ad+1,w
   955     067F  120A  118A  2602  120A  118A  	fcall	_i2c_master_write
   956     0684  3A00               	xorlw	0
   957     0685  1D03               	skipz
   958     0686  2E88               	goto	u301
   959     0687  2E89               	goto	u300
   960     0688                     u301:
   961     0688  2E7E               	goto	l823
   962     0689                     u300:
   963     0689                     l825:
   964     0689  0871               	movf	eprom_write@ad,w
   965     068A  120A  118A  2602  120A  118A  	fcall	_i2c_master_write
   966     068F  3A00               	xorlw	0
   967     0690  1D03               	skipz
   968     0691  2E93               	goto	u311
   969     0692  2E94               	goto	u310
   970     0693                     u311:
   971     0693  2E89               	goto	l825
   972     0694                     u310:
   973     0694                     l827:
   974     0694  0873               	movf	eprom_write@data,w
   975     0695  120A  118A  2602  120A  118A  	fcall	_i2c_master_write
   976     069A  3A00               	xorlw	0
   977     069B  1D03               	skipz
   978     069C  2E9E               	goto	u321
   979     069D  2E9F               	goto	u320
   980     069E                     u321:
   981     069E  2E94               	goto	l827
   982     069F                     u320:
   983     069F                     l829:
   984                           
   985                           ;driver_1.c: 63:      i2c_master_stop();
   986     069F  120A  118A  25E0  120A  118A  	fcall	_i2c_master_stop
   987     06A4                     l90:
   988     06A4  0008               	return
   989     06A5                     __end_of_eprom_write:
   990                           
   991                           	psect	text4
   992     06A5                     __ptext4:	
   993 ;; *************** function _eprom_read *****************
   994 ;; Defined at:
   995 ;;		line 65 in file "driver_1.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  add             2    1[COMMON] unsigned int 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  data            1    3[COMMON] unsigned char 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      unsigned char 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         2       0       0       0       0
  1010 ;;      Locals:         1       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0
  1012 ;;      Totals:         3       0       0       0       0
  1013 ;;Total ram usage:        3 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 2
  1016 ;; This function calls:
  1017 ;;		_i2c_master_repeatedstart
  1018 ;;		_i2c_master_start
  1019 ;;		_i2c_master_stop
  1020 ;;		_i2c_master_write
  1021 ;;		_i2c_nack
  1022 ;;		_i2c_read_byte
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028     06A5                     _eprom_read:	
  1029                           ;psect for function _eprom_read
  1030                           
  1031     06A5                     l831:	
  1032                           ;incstack = 0
  1033                           ; Regs used in _eprom_read: [wreg+status,2+status,0+pclath+cstack]
  1034                           
  1035                           
  1036                           ;driver_1.c: 65:  unsigned char eprom_read(unsigned int add);driver_1.c: 66:  {;driver_1
      +                          .c: 67:      unsigned char data;;driver_1.c: 68:      i2c_master_start();
  1037     06A5  120A  118A  25D7  120A  118A  	fcall	_i2c_master_start
  1038                           
  1039                           ;driver_1.c: 69:      while(i2c_master_write(0xA0))
  1040     06AA  2EB0               	goto	l93
  1041     06AB                     l833:
  1042                           
  1043                           ;driver_1.c: 70:         i2c_master_repeatedstart();
  1044     06AB  120A  118A  25CE  120A  118A  	fcall	_i2c_master_repeatedstart
  1045     06B0                     l93:
  1046                           
  1047                           ;driver_1.c: 69:      while(i2c_master_write(0xA0))
  1048     06B0  30A0               	movlw	160
  1049     06B1  120A  118A  2602  120A  118A  	fcall	_i2c_master_write
  1050     06B6  3A00               	xorlw	0
  1051     06B7  1D03               	skipz
  1052     06B8  2EBA               	goto	u331
  1053     06B9  2EBB               	goto	u330
  1054     06BA                     u331:
  1055     06BA  2EAB               	goto	l833
  1056     06BB                     u330:
  1057     06BB                     l835:
  1058     06BB  0872               	movf	eprom_read@add+1,w
  1059     06BC  120A  118A  2602  120A  118A  	fcall	_i2c_master_write
  1060     06C1  3A00               	xorlw	0
  1061     06C2  1D03               	skipz
  1062     06C3  2EC5               	goto	u341
  1063     06C4  2EC6               	goto	u340
  1064     06C5                     u341:
  1065     06C5  2EBB               	goto	l835
  1066     06C6                     u340:
  1067     06C6                     l837:
  1068     06C6  0871               	movf	eprom_read@add,w
  1069     06C7  120A  118A  2602  120A  118A  	fcall	_i2c_master_write
  1070     06CC  3A00               	xorlw	0
  1071     06CD  1D03               	skipz
  1072     06CE  2ED0               	goto	u351
  1073     06CF  2ED1               	goto	u350
  1074     06D0                     u351:
  1075     06D0  2EC6               	goto	l837
  1076     06D1                     u350:
  1077     06D1                     l839:
  1078                           
  1079                           ;driver_1.c: 73:      i2c_master_repeatedstart();
  1080     06D1  120A  118A  25CE  120A  118A  	fcall	_i2c_master_repeatedstart
  1081     06D6                     l841:	
  1082                           ;driver_1.c: 74:      while(i2c_master_write(0xA1));
  1083                           
  1084     06D6  30A1               	movlw	161
  1085     06D7  120A  118A  2602  120A  118A  	fcall	_i2c_master_write
  1086     06DC  3A00               	xorlw	0
  1087     06DD  1D03               	skipz
  1088     06DE  2EE0               	goto	u361
  1089     06DF  2EE1               	goto	u360
  1090     06E0                     u361:
  1091     06E0  2ED6               	goto	l841
  1092     06E1                     u360:
  1093     06E1                     l843:
  1094                           
  1095                           ;driver_1.c: 75:      data=i2c_read_byte();
  1096     06E1  120A  118A  2617  120A  118A  	fcall	_i2c_read_byte
  1097     06E6  00F3               	movwf	eprom_read@data
  1098                           
  1099                           ;driver_1.c: 76:      i2c_nack();
  1100     06E7  120A  118A  25E9  120A  118A  	fcall	_i2c_nack
  1101                           
  1102                           ;driver_1.c: 77:      i2c_master_stop();
  1103     06EC  120A  118A  25E0  120A  118A  	fcall	_i2c_master_stop
  1104     06F1                     l845:
  1105                           
  1106                           ;driver_1.c: 78:      return data;
  1107     06F1  0873               	movf	eprom_read@data,w
  1108     06F2                     l105:
  1109     06F2  0008               	return
  1110     06F3                     __end_of_eprom_read:
  1111                           
  1112                           	psect	text5
  1113     0617                     __ptext5:	
  1114 ;; *************** function _i2c_read_byte *****************
  1115 ;; Defined at:
  1116 ;;		line 38 in file "driver_1.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      unsigned char 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, status,0, pclath, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1130 ;;      Params:         0       0       0       0       0
  1131 ;;      Locals:         0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0
  1133 ;;      Totals:         0       0       0       0       0
  1134 ;;Total ram usage:        0 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 1
  1137 ;; This function calls:
  1138 ;;		_i2c_master_wait
  1139 ;; This function is called by:
  1140 ;;		_eprom_read
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144     0617                     _i2c_read_byte:	
  1145                           ;psect for function _i2c_read_byte
  1146                           
  1147     0617                     l671:	
  1148                           ;incstack = 0
  1149                           ; Regs used in _i2c_read_byte: [wreg+status,2+status,0+pclath+cstack]
  1150                           
  1151                           
  1152                           ;driver_1.c: 40:      i2c_master_wait();
  1153     0617  120A  118A  25F5  120A  118A  	fcall	_i2c_master_wait
  1154     061C                     l673:
  1155                           
  1156                           ;driver_1.c: 41:      SSPCON2|=0x08;
  1157     061C  1683               	bsf	3,5	;RP0=1, select bank1
  1158     061D  1303               	bcf	3,6	;RP1=0, select bank1
  1159     061E  1591               	bsf	17,3	;volatile
  1160     061F                     l66:	
  1161                           ;driver_1.c: 42:      while(!SSPIF);
  1162                           
  1163     061F  1283               	bcf	3,5	;RP0=0, select bank0
  1164     0620  1D8C               	btfss	12,3	;volatile
  1165     0621  2E23               	goto	u31
  1166     0622  2E24               	goto	u30
  1167     0623                     u31:
  1168     0623  2E1F               	goto	l66
  1169     0624                     u30:
  1170     0624                     l68:
  1171                           
  1172                           ;driver_1.c: 43:      SSPIF=0;
  1173     0624  118C               	bcf	12,3	;volatile
  1174     0625                     l675:
  1175                           
  1176                           ;driver_1.c: 44:      i2c_master_wait();
  1177     0625  120A  118A  25F5  120A  118A  	fcall	_i2c_master_wait
  1178     062A                     l677:
  1179                           
  1180                           ;driver_1.c: 45:      return SSPBUF;
  1181     062A  1283               	bcf	3,5	;RP0=0, select bank0
  1182     062B  1303               	bcf	3,6	;RP1=0, select bank0
  1183     062C  0813               	movf	19,w	;volatile
  1184     062D                     l69:
  1185     062D  0008               	return
  1186     062E                     __end_of_i2c_read_byte:
  1187                           
  1188                           	psect	text6
  1189     05E9                     __ptext6:	
  1190 ;; *************** function _i2c_nack *****************
  1191 ;; Defined at:
  1192 ;;		line 27 in file "driver_1.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0, pclath, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1206 ;;      Params:         0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0
  1209 ;;      Totals:         0       0       0       0       0
  1210 ;;Total ram usage:        0 bytes
  1211 ;; Hardware stack levels used: 1
  1212 ;; Hardware stack levels required when called: 1
  1213 ;; This function calls:
  1214 ;;		_i2c_master_wait
  1215 ;; This function is called by:
  1216 ;;		_eprom_read
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220     05E9                     _i2c_nack:	
  1221                           ;psect for function _i2c_nack
  1222                           
  1223     05E9                     l661:	
  1224                           ;incstack = 0
  1225                           ; Regs used in _i2c_nack: [wreg+status,2+status,0+pclath+cstack]
  1226                           
  1227                           
  1228                           ;driver_1.c: 29:      ACKDT=1;
  1229     05E9  1683               	bsf	3,5	;RP0=1, select bank1
  1230     05EA  1303               	bcf	3,6	;RP1=0, select bank1
  1231     05EB  1691               	bsf	17,5	;volatile
  1232     05EC                     l663:
  1233                           
  1234                           ;driver_1.c: 30:      i2c_master_wait();
  1235     05EC  120A  118A  25F5  120A  118A  	fcall	_i2c_master_wait
  1236     05F1                     l665:
  1237                           
  1238                           ;driver_1.c: 31:      ACKEN=1;
  1239     05F1  1683               	bsf	3,5	;RP0=1, select bank1
  1240     05F2  1303               	bcf	3,6	;RP1=0, select bank1
  1241     05F3  1611               	bsf	17,4	;volatile
  1242     05F4                     l60:
  1243     05F4  0008               	return
  1244     05F5                     __end_of_i2c_nack:
  1245                           
  1246                           	psect	text7
  1247     0602                     __ptext7:	
  1248 ;; *************** function _i2c_master_write *****************
  1249 ;; Defined at:
  1250 ;;		line 47 in file "driver_1.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  data            1    wreg     unsigned char 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  data            1    0[COMMON] unsigned char 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      unsigned char 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0, pclath, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1264 ;;      Params:         0       0       0       0       0
  1265 ;;      Locals:         1       0       0       0       0
  1266 ;;      Temps:          0       0       0       0       0
  1267 ;;      Totals:         1       0       0       0       0
  1268 ;;Total ram usage:        1 bytes
  1269 ;; Hardware stack levels used: 1
  1270 ;; Hardware stack levels required when called: 1
  1271 ;; This function calls:
  1272 ;;		_i2c_master_wait
  1273 ;; This function is called by:
  1274 ;;		_eprom_write
  1275 ;;		_eprom_read
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279     0602                     _i2c_master_write:	
  1280                           ;psect for function _i2c_master_write
  1281                           
  1282                           
  1283                           ;incstack = 0
  1284                           ; Regs used in _i2c_master_write: [wreg+status,2+status,0+pclath+cstack]
  1285                           ;i2c_master_write@data stored from wreg
  1286     0602  00F0               	movwf	i2c_master_write@data
  1287     0603                     l681:
  1288                           
  1289                           ;driver_1.c: 47:  unsigned char i2c_master_write(unsigned char data);driver_1.c: 48:  {;
      +                          driver_1.c: 49:      i2c_master_wait();
  1290     0603  120A  118A  25F5  120A  118A  	fcall	_i2c_master_wait
  1291     0608                     l683:
  1292                           
  1293                           ;driver_1.c: 50:      SSPBUF=data;
  1294     0608  0870               	movf	i2c_master_write@data,w
  1295     0609  1283               	bcf	3,5	;RP0=0, select bank0
  1296     060A  1303               	bcf	3,6	;RP1=0, select bank0
  1297     060B  0093               	movwf	19	;volatile
  1298     060C                     l72:	
  1299                           ;driver_1.c: 51:      while(!SSPIF);
  1300                           
  1301     060C  1D8C               	btfss	12,3	;volatile
  1302     060D  2E0F               	goto	u41
  1303     060E  2E10               	goto	u40
  1304     060F                     u41:
  1305     060F  2E0C               	goto	l72
  1306     0610                     u40:
  1307     0610                     l74:
  1308                           
  1309                           ;driver_1.c: 52:      SSPIF=0;
  1310     0610  118C               	bcf	12,3	;volatile
  1311     0611                     l685:
  1312                           
  1313                           ;driver_1.c: 53:      return ACKSTAT;
  1314     0611  3000               	movlw	0
  1315     0612  1683               	bsf	3,5	;RP0=1, select bank1
  1316     0613  1303               	bcf	3,6	;RP1=0, select bank1
  1317     0614  1B11               	btfsc	17,6	;volatile
  1318     0615  3001               	movlw	1
  1319     0616                     l75:
  1320     0616  0008               	return
  1321     0617                     __end_of_i2c_master_write:
  1322                           
  1323                           	psect	text8
  1324     05E0                     __ptext8:	
  1325 ;; *************** function _i2c_master_stop *****************
  1326 ;; Defined at:
  1327 ;;		line 18 in file "driver_1.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0, pclath, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1341 ;;      Params:         0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0
  1344 ;;      Totals:         0       0       0       0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 1
  1348 ;; This function calls:
  1349 ;;		_i2c_master_wait
  1350 ;; This function is called by:
  1351 ;;		_eprom_write
  1352 ;;		_eprom_read
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356     05E0                     _i2c_master_stop:	
  1357                           ;psect for function _i2c_master_stop
  1358                           
  1359     05E0                     l657:	
  1360                           ;incstack = 0
  1361                           ; Regs used in _i2c_master_stop: [wreg+status,2+status,0+pclath+cstack]
  1362                           
  1363                           
  1364                           ;driver_1.c: 20:      i2c_master_wait();
  1365     05E0  120A  118A  25F5  120A  118A  	fcall	_i2c_master_wait
  1366     05E5                     l659:
  1367                           
  1368                           ;driver_1.c: 21:      SSPCON2|=0x04;
  1369     05E5  1683               	bsf	3,5	;RP0=1, select bank1
  1370     05E6  1303               	bcf	3,6	;RP1=0, select bank1
  1371     05E7  1511               	bsf	17,2	;volatile
  1372     05E8                     l51:
  1373     05E8  0008               	return
  1374     05E9                     __end_of_i2c_master_stop:
  1375                           
  1376                           	psect	text9
  1377     05D7                     __ptext9:	
  1378 ;; *************** function _i2c_master_start *****************
  1379 ;; Defined at:
  1380 ;;		line 13 in file "driver_1.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2, status,0, pclath, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1394 ;;      Params:         0       0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0
  1397 ;;      Totals:         0       0       0       0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; Hardware stack levels required when called: 1
  1401 ;; This function calls:
  1402 ;;		_i2c_master_wait
  1403 ;; This function is called by:
  1404 ;;		_eprom_write
  1405 ;;		_eprom_read
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409     05D7                     _i2c_master_start:	
  1410                           ;psect for function _i2c_master_start
  1411                           
  1412     05D7                     l653:	
  1413                           ;incstack = 0
  1414                           ; Regs used in _i2c_master_start: [wreg+status,2+status,0+pclath+cstack]
  1415                           
  1416                           
  1417                           ;driver_1.c: 15:      i2c_master_wait();
  1418     05D7  120A  118A  25F5  120A  118A  	fcall	_i2c_master_wait
  1419     05DC                     l655:
  1420                           
  1421                           ;driver_1.c: 16:      SSPCON2|=0x01;
  1422     05DC  1683               	bsf	3,5	;RP0=1, select bank1
  1423     05DD  1303               	bcf	3,6	;RP1=0, select bank1
  1424     05DE  1411               	bsf	17,0	;volatile
  1425     05DF                     l48:
  1426     05DF  0008               	return
  1427     05E0                     __end_of_i2c_master_start:
  1428                           
  1429                           	psect	text10
  1430     05CE                     __ptext10:	
  1431 ;; *************** function _i2c_master_repeatedstart *****************
  1432 ;; Defined at:
  1433 ;;		line 33 in file "driver_1.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0, pclath, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0
  1450 ;;      Totals:         0       0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; Hardware stack levels required when called: 1
  1454 ;; This function calls:
  1455 ;;		_i2c_master_wait
  1456 ;; This function is called by:
  1457 ;;		_eprom_write
  1458 ;;		_eprom_read
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462     05CE                     _i2c_master_repeatedstart:	
  1463                           ;psect for function _i2c_master_repeatedstart
  1464                           
  1465     05CE                     l667:	
  1466                           ;incstack = 0
  1467                           ; Regs used in _i2c_master_repeatedstart: [wreg+status,2+status,0+pclath+cstack]
  1468                           
  1469                           
  1470                           ;driver_1.c: 35:      i2c_master_wait();
  1471     05CE  120A  118A  25F5  120A  118A  	fcall	_i2c_master_wait
  1472     05D3                     l669:
  1473                           
  1474                           ;driver_1.c: 36:           SSPCON2|=0x02;
  1475     05D3  1683               	bsf	3,5	;RP0=1, select bank1
  1476     05D4  1303               	bcf	3,6	;RP1=0, select bank1
  1477     05D5  1491               	bsf	17,1	;volatile
  1478     05D6                     l63:
  1479     05D6  0008               	return
  1480     05D7                     __end_of_i2c_master_repeatedstart:
  1481                           
  1482                           	psect	text11
  1483     05F5                     __ptext11:	
  1484 ;; *************** function _i2c_master_wait *****************
  1485 ;; Defined at:
  1486 ;;		line 23 in file "driver_1.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1500 ;;      Params:         0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0
  1503 ;;      Totals:         0       0       0       0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_i2c_master_start
  1510 ;;		_i2c_master_stop
  1511 ;;		_i2c_nack
  1512 ;;		_i2c_master_repeatedstart
  1513 ;;		_i2c_read_byte
  1514 ;;		_i2c_master_write
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518     05F5                     _i2c_master_wait:	
  1519                           ;psect for function _i2c_master_wait
  1520                           
  1521     05F5                     l649:	
  1522                           ;incstack = 0
  1523                           ; Regs used in _i2c_master_wait: [wreg+status,2]
  1524                           
  1525     05F5                     l54:	
  1526                           ;driver_1.c: 25:      while((SSPSTAT&0x04)||(SSPCON2&0x1F));
  1527                           
  1528     05F5  1683               	bsf	3,5	;RP0=1, select bank1
  1529     05F6  1303               	bcf	3,6	;RP1=0, select bank1
  1530     05F7  1914               	btfsc	20,2	;volatile
  1531     05F8  2DFA               	goto	u11
  1532     05F9  2DFB               	goto	u10
  1533     05FA                     u11:
  1534     05FA  2DF5               	goto	l54
  1535     05FB                     u10:
  1536     05FB                     l651:
  1537     05FB  0811               	movf	17,w	;volatile
  1538     05FC  391F               	andlw	31
  1539     05FD  1D03               	btfss	3,2
  1540     05FE  2E00               	goto	u21
  1541     05FF  2E01               	goto	u20
  1542     0600                     u21:
  1543     0600  2DF5               	goto	l54
  1544     0601                     u20:
  1545     0601                     l57:
  1546     0601  0008               	return
  1547     0602                     __end_of_i2c_master_wait:
  1548     007E                     btemp	set	126	;btemp
  1549     007E                     wtemp0	set	126
  1550                           
  1551                           	psect	config
  1552                           
  1553                           ;Config register CONFIG @ 0x2007
  1554                           ;	Oscillator Selection bits
  1555                           ;	FOSC = EXTRC, RC oscillator
  1556                           ;	Watchdog Timer Enable bit
  1557                           ;	WDTE = OFF, WDT disabled
  1558                           ;	Power-up Timer Enable bit
  1559                           ;	PWRTE = OFF, PWRT disabled
  1560                           ;	Brown-out Reset Enable bit
  1561                           ;	BOREN = OFF, BOR disabled
  1562                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1563                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1564                           ;	Data EEPROM Memory Code Protection bit
  1565                           ;	CPD = OFF, Data EEPROM code protection off
  1566                           ;	Flash Program Memory Write Enable bits
  1567                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1568                           ;	In-Circuit Debugger Mode bit
  1569                           ;	DEBUG = 0x1, unprogrammed default
  1570                           ;	Flash Program Memory Code Protection bit
  1571                           ;	CP = OFF, Code protection off
  1572     2007                     	org	8199
  1573     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _i2c_master_init->___lldiv
    _eprom_write->_i2c_master_write
    _eprom_read->_i2c_master_write

Critical Paths under _main in BANK0

    _main->_i2c_master_init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1259
                                              8 BANK0      3     3      0
                         _eprom_read
                        _eprom_write
                    _i2c_master_init
 ---------------------------------------------------------------------------------
 (1) _i2c_master_init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _eprom_write                                          3     0      3     537
                                              1 COMMON     3     0      3
           _i2c_master_repeatedstart
                   _i2c_master_start
                    _i2c_master_stop
                   _i2c_master_write
 ---------------------------------------------------------------------------------
 (1) _eprom_read                                           3     1      2     310
                                              1 COMMON     3     1      2
           _i2c_master_repeatedstart
                   _i2c_master_start
                    _i2c_master_stop
                   _i2c_master_write
                           _i2c_nack
                      _i2c_read_byte
 ---------------------------------------------------------------------------------
 (2) _i2c_read_byte                                        0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_nack                                             0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_master_write                                     1     1      0      15
                                              0 COMMON     1     1      0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_master_stop                                      0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_master_start                                     0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_master_repeatedstart                             0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_master_wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _eprom_read
     _i2c_master_repeatedstart
       _i2c_master_wait
     _i2c_master_start
       _i2c_master_wait
     _i2c_master_stop
       _i2c_master_wait
     _i2c_master_write
       _i2c_master_wait
     _i2c_nack
       _i2c_master_wait
     _i2c_read_byte
       _i2c_master_wait
   _eprom_write
     _i2c_master_repeatedstart
     _i2c_master_start
     _i2c_master_stop
     _i2c_master_write
   _i2c_master_init
     ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Mar 30 19:21:26 2024

                              l17 07F8                                l18 07F8                                l51 05E8  
                              l60 05F4                                l45 0667                                l54 05F5  
                              l63 05D6                                l48 05DF                                l72 060C  
                              l57 0601                                l74 0610                                l66 061F  
                              l90 06A4                                l75 0616                                l68 0624  
                              l69 062D                                l93 06B0                                l78 0673  
                              u10 05FB                                u11 05FA                                u20 0601  
                              u21 0600                                u30 0624                                u31 0623  
                              u40 0610                                u41 060F                               l105 06F2  
                             l227 0758                               l801 0741                               l651 05FB  
                             l803 074A                               l811 0632                               l653 05D7  
                             l661 05E9                               l821 066E                               l805 0750  
                             l813 0635                               l655 05DC                               l663 05EC  
                             l671 0617                               l831 06A5                               l823 067E  
                             l815 0662                               l649 05F5                               l657 05E0  
                             l681 0603                               l665 05F1                               l673 061C  
                             l841 06D6                               l833 06AB                               l825 0689  
                             l817 0663                               l809 062E                               l667 05CE  
                             l659 05E5                               l683 0608                               l675 0625  
                             l843 06E1                               l835 06BB                               l827 0694  
                             l819 0668                               l851 0768                               l669 05D3  
                             l685 0611                               l677 062A                               l845 06F1  
                             l837 06C6                               l829 069F                               l861 079D  
                             l853 0773                               l839 06D1                               l791 0713  
                             l783 06F3                               l871 07D0                               l863 07A7  
                             l855 077D                               l793 0717                               l785 0703  
                             l873 07DE                               l865 07AA                               l857 0788  
                             l849 0759                               l795 0720                               l787 0706  
                             l875 07EA                               l867 07B6                               l859 0792  
                             l797 0732                               l789 070F                               l869 07C4  
                             l799 0740                               u210 0703                               u211 0702  
                             u300 0689                               u301 0688                               u310 0694  
                             u230 0717                               u311 0693                               u231 0716  
                             u320 069F                               u321 069E                               u225 0708  
                             u330 06BB                               u250 0732                               u331 06BA  
                             u251 0731                               u340 06C6                               u341 06C5  
                             u245 0719                               u350 06D1                               u270 0750  
                             u351 06D0                               u271 074F                               u255 072E  
                             u407 07BE                               u360 06E1                               u280 0645  
                             u361 06E0                               u265 0742                               u417 07D8  
                             u290 067E                               u291 067D                               u427 07F2  
                             u285 0640                               u377 0779                               u387 078E  
                             u397 07A3                     _i2c_read_byte 0617                              _main 0759  
                            btemp 007E                              start 0000                      ?_eprom_write 0071  
                           ?_main 0070                             _ACKEN 048C                             _ACKDT 048D  
                 __end_of___lldiv 0759                             _PORTD 0008                             _TRISC 0087  
                           _TRISD 0088                             _SSPIF 0063                    ?_i2c_read_byte 0070  
                           status 0003                             wtemp0 007E                   __initialization 07FC  
                    __end_of_main 07FC                  __end_of_i2c_nack 05F5                            ??_main 0028  
       ?_i2c_master_repeatedstart 0070                            _SSPADD 0093                            _SSPCON 0014  
                          _SSPBUF 0013                   _i2c_master_init 062E                         ??___lldiv 0078  
                 _i2c_master_wait 05F5                   _i2c_master_stop 05E0                   eprom_write@data 0073  
                 ??_i2c_read_byte 0070           __end_of__initialization 07FC                    __pcstackCOMMON 0070  
                       ?_i2c_nack 0070           __end_of_i2c_master_init 0668           __end_of_i2c_master_wait 0602  
         __end_of_i2c_master_stop 05E9                        __pmaintext 0759                           _ACKSTAT 048E  
                         _SSPCON2 0091                           _SSPSTAT 0094                        ??_i2c_nack 0070  
__end_of_i2c_master_repeatedstart 05D7                        _eprom_read 06A5                           ___lldiv 06F3  
                _i2c_master_start 05D7                           __ptext1 062E                           __ptext2 06F3  
                         __ptext3 0668                           __ptext4 06A5                           __ptext5 0617  
                         __ptext6 05E9                           __ptext7 0602                           __ptext8 05E0  
                         __ptext9 05D7                  _i2c_master_write 0602              end_of_initialization 07FC  
                ?_i2c_master_init 0020                  ?_i2c_master_wait 0070                   ___lldiv@divisor 0070  
                ?_i2c_master_stop 0070                   ___lldiv@counter 007D                       ?_eprom_read 0071  
                  eprom_read@data 0073          _i2c_master_repeatedstart 05CE               start_initialization 07FC  
           __end_of_i2c_read_byte 062E                     ??_eprom_write 0074                         ___latbits 0002  
                   __pcstackBANK0 0020          __end_of_i2c_master_start 05E0          __end_of_i2c_master_write 0617  
                        ?___lldiv 0070               __end_of_eprom_write 06A5                     eprom_read@add 0071  
                        _i2c_nack 05E9        ??_i2c_master_repeatedstart 0070                      ??_eprom_read 0073  
                   eprom_write@ad 0071                       _eprom_write 0668                          __ptext10 05CE  
                        __ptext11 05F5                __end_of_eprom_read 06F3               i2c_master_init@baud 0020  
                ___lldiv@dividend 0074                 ?_i2c_master_start 0070                 ?_i2c_master_write 0070  
              ??_i2c_master_start 0070                ??_i2c_master_write 0070                  ___lldiv@quotient 0079  
               ??_i2c_master_init 0024                 ??_i2c_master_wait 0070                 ??_i2c_master_stop 0070  
            i2c_master_write@data 0070  
