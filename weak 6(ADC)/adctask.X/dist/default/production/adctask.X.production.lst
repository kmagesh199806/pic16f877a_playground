

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Jan 15 21:18:06 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Generated 22/03/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     010C                     	;# 
   118     010D                     	;# 
   119     010E                     	;# 
   120     010F                     	;# 
   121     018C                     	;# 
   122     018D                     	;# 
   123     0000                     	;# 
   124     0001                     	;# 
   125     0002                     	;# 
   126     0003                     	;# 
   127     0004                     	;# 
   128     0005                     	;# 
   129     0006                     	;# 
   130     0007                     	;# 
   131     0008                     	;# 
   132     0009                     	;# 
   133     000A                     	;# 
   134     000B                     	;# 
   135     000C                     	;# 
   136     000D                     	;# 
   137     000E                     	;# 
   138     000E                     	;# 
   139     000F                     	;# 
   140     0010                     	;# 
   141     0011                     	;# 
   142     0012                     	;# 
   143     0013                     	;# 
   144     0014                     	;# 
   145     0015                     	;# 
   146     0015                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001B                     	;# 
   154     001C                     	;# 
   155     001D                     	;# 
   156     001E                     	;# 
   157     001F                     	;# 
   158     0081                     	;# 
   159     0085                     	;# 
   160     0086                     	;# 
   161     0087                     	;# 
   162     0088                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     0091                     	;# 
   168     0092                     	;# 
   169     0093                     	;# 
   170     0094                     	;# 
   171     0098                     	;# 
   172     0099                     	;# 
   173     009C                     	;# 
   174     009D                     	;# 
   175     009E                     	;# 
   176     009F                     	;# 
   177     010C                     	;# 
   178     010D                     	;# 
   179     010E                     	;# 
   180     010F                     	;# 
   181     018C                     	;# 
   182     018D                     	;# 
   183                           
   184                           	psect	idataBANK0
   185     03AF                     __pidataBANK0:
   186                           
   187                           ;initializer for _a
   188     03AF  3443               	retlw	67
   189     03B0  3441               	retlw	65
   190     03B1  344C               	retlw	76
   191     03B2  3449               	retlw	73
   192     03B3  3442               	retlw	66
   193     03B4  343A               	retlw	58
   194     03B5  3400               	retlw	0
   195     03B6  3400               	retlw	0
   196     03B7  3400               	retlw	0
   197     03B8  3400               	retlw	0
   198                           
   199                           	psect	idataBANK1
   200     03A5                     __pidataBANK1:	
   201                           ;initializer for _b
   202                           
   203     03A5  344F               	retlw	79
   204     03A6  3452               	retlw	82
   205     03A7  3447               	retlw	71
   206     03A8  3420               	retlw	32
   207     03A9  3444               	retlw	68
   208     03AA  3441               	retlw	65
   209     03AB  3454               	retlw	84
   210     03AC  3441               	retlw	65
   211     03AD  343A               	retlw	58
   212     03AE  3400               	retlw	0
   213     0008                     _PORTD	set	8
   214     0007                     _PORTC	set	7
   215     001E                     _ADRESH	set	30
   216     001F                     _ADCON0	set	31
   217     009F                     _ADCON1	set	159
   218     0088                     _TRISD	set	136
   219     0087                     _TRISC	set	135
   220     0085                     _TRISA	set	133
   221     009E                     _ADRESL	set	158
   222                           
   223                           	psect	cinit
   224     07D9                     start_initialization:	
   225                           ; #config settings
   226                           
   227     07D9                     __initialization:
   228                           
   229                           ; Initialize objects allocated to BANK1
   230     07D9  1383               	bcf	3,7	;select IRP bank0
   231     07DA  30AA               	movlw	low (__pdataBANK1+10)
   232     07DB  00FD               	movwf	btemp+-1
   233     07DC  3003               	movlw	high __pidataBANK1
   234     07DD  00FE               	movwf	btemp
   235     07DE  30A5               	movlw	low __pidataBANK1
   236     07DF  00FF               	movwf	btemp+1
   237     07E0  30A0               	movlw	low __pdataBANK1
   238     07E1  0084               	movwf	4
   239     07E2  120A  118A  23CA  120A  118A  	fcall	init_ram0
   240                           
   241                           ; Initialize objects allocated to BANK0
   242     07E7  306F               	movlw	low (__pdataBANK0+10)
   243     07E8  00FD               	movwf	btemp+-1
   244     07E9  3003               	movlw	high __pidataBANK0
   245     07EA  00FE               	movwf	btemp
   246     07EB  30AF               	movlw	low __pidataBANK0
   247     07EC  00FF               	movwf	btemp+1
   248     07ED  3065               	movlw	low __pdataBANK0
   249     07EE  0084               	movwf	4
   250     07EF  120A  118A  23CA  120A  118A  	fcall	init_ram0
   251                           
   252                           ; Clear objects allocated to BANK0
   253     07F4  3020               	movlw	low __pbssBANK0
   254     07F5  0084               	movwf	4
   255     07F6  304C               	movlw	low (__pbssBANK0+44)
   256     07F7  120A  118A  239D  120A  118A  	fcall	clear_ram0
   257     07FC                     end_of_initialization:	
   258                           ;End of C runtime variable initialization code
   259                           
   260     07FC                     __end_of__initialization:
   261     07FC  0183               	clrf	3
   262     07FD  120A  118A  2EC4   	ljmp	_main	;jump to C main() function
   263                           
   264                           	psect	bssBANK0
   265     0020                     __pbssBANK0:
   266     0020                     _k:
   267     0020                     	ds	10
   268     002A                     _voltage:
   269     002A                     	ds	4
   270     002E                     _value:
   271     002E                     	ds	4
   272     0032                     _l:
   273     0032                     	ds	4
   274     0036                     _c:
   275     0036                     	ds	2
   276     0038                     _ones:
   277     0038                     	ds	2
   278     003A                     _tens:
   279     003A                     	ds	2
   280     003C                     _hundred:
   281     003C                     	ds	2
   282     003E                     _thousand:
   283     003E                     	ds	2
   284     0040                     _fr:
   285     0040                     	ds	2
   286     0042                     _delaycount:
   287     0042                     	ds	2
   288     0044                     _m:
   289     0044                     	ds	2
   290     0046                     _highvalue:
   291     0046                     	ds	2
   292     0048                     _lowvalue:
   293     0048                     	ds	2
   294     004A                     _j:
   295     004A                     	ds	1
   296     004B                     _n:
   297     004B                     	ds	1
   298                           
   299                           	psect	dataBANK0
   300     0065                     __pdataBANK0:
   301     0065                     _a:
   302     0065                     	ds	10
   303                           
   304                           	psect	dataBANK1
   305     00A0                     __pdataBANK1:
   306     00A0                     _b:
   307     00A0                     	ds	10
   308                           
   309                           	psect	inittext
   310     03C6                     init_fetch0:	
   311                           ;	Called with low address in FSR and high address in W
   312                           
   313     03C6  087E               	movf	btemp,w
   314     03C7  008A               	movwf	10
   315     03C8  087F               	movf	btemp+1,w
   316     03C9  0082               	movwf	2
   317     03CA                     init_ram0:	
   318                           ;Called with:
   319                           ;	high address of idata address in btemp 
   320                           ;	low address of idata address in btemp+1 
   321                           ;	low address of data in FSR
   322                           ;	high address + 1 of data in btemp-1
   323                           
   324     03CA  120A  118A  23C6  120A  118A  	fcall	init_fetch0
   325     03CF  0080               	movwf	0
   326     03D0  0A84               	incf	4,f
   327     03D1  0804               	movf	4,w
   328     03D2  067D               	xorwf	btemp+-1,w
   329     03D3  1903               	btfsc	3,2
   330     03D4  3400               	retlw	0
   331     03D5  0AFF               	incf	btemp+1,f
   332     03D6  1903               	btfsc	3,2
   333     03D7  0AFE               	incf	btemp,f
   334     03D8  2BCA               	goto	init_ram0
   335                           
   336                           	psect	clrtext
   337     039D                     clear_ram0:	
   338                           ;	Called with FSR containing the base address, and
   339                           ;	W with the last address+1
   340                           
   341     039D  0064               	clrwdt	;clear the watchdog before getting into this loop
   342     039E                     clrloop0:
   343     039E  0180               	clrf	0	;clear RAM location pointed to by FSR
   344     039F  0A84               	incf	4,f	;increment pointer
   345     03A0  0604               	xorwf	4,w	;XOR with final address
   346     03A1  1903               	btfsc	3,2	;have we reached the end yet?
   347     03A2  3400               	retlw	0	;all done for this memory range, return
   348     03A3  0604               	xorwf	4,w	;XOR again to restore value
   349     03A4  2B9E               	goto	clrloop0	;do the next byte
   350                           
   351                           	psect	cstackCOMMON
   352     0070                     __pcstackCOMMON:
   353     0070                     ?_init:
   354     0070                     ?_lcdcmd:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0070                     ?_lcddata:	
   358                           ; 1 bytes @ 0x0
   359                           
   360     0070                     ?_delay:	
   361                           ; 1 bytes @ 0x0
   362                           
   363     0070                     ?_main:	
   364                           ; 1 bytes @ 0x0
   365                           
   366     0070                     ?___lwdiv:	
   367                           ; 1 bytes @ 0x0
   368                           
   369     0070                     ?___lmul:	
   370                           ; 2 bytes @ 0x0
   371                           
   372     0070                     ?___llmod:	
   373                           ; 4 bytes @ 0x0
   374                           
   375     0070                     delay@delaycount:	
   376                           ; 4 bytes @ 0x0
   377                           
   378     0070                     ___lwdiv@divisor:	
   379                           ; 2 bytes @ 0x0
   380                           
   381     0070                     ___lmul@multiplier:	
   382                           ; 2 bytes @ 0x0
   383                           
   384     0070                     ___llmod@divisor:	
   385                           ; 4 bytes @ 0x0
   386                           
   387                           
   388                           ; 4 bytes @ 0x0
   389     0070                     	ds	2
   390     0072                     ??_lcdcmd:
   391     0072                     ??_lcddata:	
   392                           ; 1 bytes @ 0x2
   393                           
   394     0072                     ??_delay:	
   395                           ; 1 bytes @ 0x2
   396                           
   397     0072                     lcdcmd@i:	
   398                           ; 1 bytes @ 0x2
   399                           
   400     0072                     lcddata@i:	
   401                           ; 1 bytes @ 0x2
   402                           
   403     0072                     ___lwdiv@dividend:	
   404                           ; 1 bytes @ 0x2
   405                           
   406                           
   407                           ; 2 bytes @ 0x2
   408     0072                     	ds	1
   409     0073                     ??_init:
   410                           
   411                           ; 1 bytes @ 0x3
   412     0073                     	ds	1
   413     0074                     ??___lwdiv:
   414     0074                     ___lwdiv@quotient:	
   415                           ; 1 bytes @ 0x4
   416                           
   417     0074                     ___lmul@multiplicand:	
   418                           ; 2 bytes @ 0x4
   419                           
   420     0074                     ___llmod@dividend:	
   421                           ; 4 bytes @ 0x4
   422                           
   423                           
   424                           ; 4 bytes @ 0x4
   425     0074                     	ds	2
   426     0076                     ___lwdiv@counter:
   427                           
   428                           ; 1 bytes @ 0x6
   429     0076                     	ds	1
   430     0077                     ?___bmul:
   431     0077                     ___bmul@multiplicand:	
   432                           ; 1 bytes @ 0x7
   433                           
   434                           
   435                           ; 1 bytes @ 0x7
   436     0077                     	ds	1
   437     0078                     ??___lmul:
   438     0078                     ??___bmul:	
   439                           ; 1 bytes @ 0x8
   440                           
   441     0078                     ??___llmod:	
   442                           ; 1 bytes @ 0x8
   443                           
   444     0078                     ___bmul@product:	
   445                           ; 1 bytes @ 0x8
   446                           
   447                           
   448                           ; 1 bytes @ 0x8
   449     0078                     	ds	1
   450     0079                     ___bmul@multiplier:
   451     0079                     ___llmod@counter:	
   452                           ; 1 bytes @ 0x9
   453                           
   454     0079                     ___lmul@product:	
   455                           ; 1 bytes @ 0x9
   456                           
   457                           
   458                           ; 4 bytes @ 0x9
   459     0079                     	ds	1
   460     007A                     ?_lcdoutput:
   461     007A                     lcdoutput@i:	
   462                           ; 1 bytes @ 0xA
   463                           
   464                           
   465                           ; 2 bytes @ 0xA
   466     007A                     	ds	2
   467     007C                     ??_lcdoutput:
   468     007C                     lcdoutput@s:	
   469                           ; 1 bytes @ 0xC
   470                           
   471                           
   472                           ; 1 bytes @ 0xC
   473     007C                     	ds	1
   474     007D                     ??___lldiv:
   475                           
   476                           ; 1 bytes @ 0xD
   477     007D                     	ds	1
   478     007E                     ??_lcdoutput1:
   479                           
   480                           	psect	cstackBANK0
   481     004C                     __pcstackBANK0:	
   482                           ; 1 bytes @ 0xE
   483                           
   484     004C                     ?___lldiv:
   485     004C                     ___lldiv@divisor:	
   486                           ; 4 bytes @ 0x0
   487                           
   488                           
   489                           ; 4 bytes @ 0x0
   490     004C                     	ds	4
   491     0050                     ___lldiv@dividend:
   492                           
   493                           ; 4 bytes @ 0x4
   494     0050                     	ds	4
   495     0054                     ___lldiv@quotient:
   496                           
   497                           ; 4 bytes @ 0x8
   498     0054                     	ds	4
   499     0058                     ___lldiv@counter:
   500                           
   501                           ; 1 bytes @ 0xC
   502     0058                     	ds	1
   503     0059                     ?_lcdoutput1:
   504     0059                     lcdoutput1@i:	
   505                           ; 1 bytes @ 0xD
   506                           
   507                           
   508                           ; 4 bytes @ 0xD
   509     0059                     	ds	4
   510     005D                     ??_main:
   511                           
   512                           ; 1 bytes @ 0x11
   513     005D                     	ds	8
   514                           
   515                           	psect	maintext
   516     06C4                     __pmaintext:	
   517 ;;
   518 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   519 ;;
   520 ;; *************** function _main *****************
   521 ;; Defined at:
   522 ;;		line 33 in file "adctask.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : B00/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   536 ;;      Params:         0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0
   538 ;;      Temps:          0       8       0       0       0
   539 ;;      Totals:         0       8       0       0       0
   540 ;;Total ram usage:        8 bytes
   541 ;; Hardware stack levels required when called: 3
   542 ;; This function calls:
   543 ;;		___lldiv
   544 ;;		___lmul
   545 ;;		_delay
   546 ;;		_init
   547 ;;		_lcdcmd
   548 ;;		_lcddata
   549 ;;		_lcdoutput
   550 ;;		_lcdoutput1
   551 ;; This function is called by:
   552 ;;		Startup code after reset
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556     06C4                     _main:	
   557                           ;psect for function _main
   558                           
   559     06C4                     l1083:	
   560                           ;incstack = 0
   561                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   562                           
   563                           
   564                           ;adctask.c: 35:     init();
   565     06C4  120A  118A  241B  120A  118A  	fcall	_init
   566     06C9                     l1085:
   567                           
   568                           ;adctask.c: 38:     {;adctask.c: 39:         ADCON0|=0x04;
   569     06C9  1283               	bcf	3,5	;RP0=0, select bank0
   570     06CA  1303               	bcf	3,6	;RP1=0, select bank0
   571     06CB  151F               	bsf	31,2	;volatile
   572     06CC                     l72:	
   573                           ;adctask.c: 40:         while(ADCON0&0x04);
   574                           
   575     06CC  191F               	btfsc	31,2	;volatile
   576     06CD  2ECF               	goto	u671
   577     06CE  2ED0               	goto	u670
   578     06CF                     u671:
   579     06CF  2ECC               	goto	l72
   580     06D0                     u670:
   581     06D0                     l1087:
   582                           
   583                           ;adctask.c: 41:         lowvalue=ADRESL;
   584     06D0  1683               	bsf	3,5	;RP0=1, select bank1
   585     06D1  1303               	bcf	3,6	;RP1=0, select bank1
   586     06D2  081E               	movf	30,w	;volatile
   587     06D3  1283               	bcf	3,5	;RP0=0, select bank0
   588     06D4  1303               	bcf	3,6	;RP1=0, select bank0
   589     06D5  00DD               	movwf	??_main
   590     06D6  01DE               	clrf	??_main+1
   591     06D7  085D               	movf	??_main,w
   592     06D8  00C8               	movwf	_lowvalue
   593     06D9  085E               	movf	??_main+1,w
   594     06DA  00C9               	movwf	_lowvalue+1
   595                           
   596                           ;adctask.c: 42:         highvalue=ADRESH;
   597     06DB  081E               	movf	30,w	;volatile
   598     06DC  00DD               	movwf	??_main
   599     06DD  01DE               	clrf	??_main+1
   600     06DE  085D               	movf	??_main,w
   601     06DF  00C6               	movwf	_highvalue
   602     06E0  085E               	movf	??_main+1,w
   603     06E1  00C7               	movwf	_highvalue+1
   604     06E2                     l1089:
   605                           
   606                           ;adctask.c: 43:         value=((unsigned long)highvalue<<8)+(unsigned long)lowvalue;
   607     06E2  0848               	movf	_lowvalue,w
   608     06E3  00DD               	movwf	??_main
   609     06E4  0849               	movf	_lowvalue+1,w
   610     06E5  00DE               	movwf	??_main+1
   611     06E6  01DF               	clrf	??_main+2
   612     06E7  01E0               	clrf	??_main+3
   613     06E8  0846               	movf	_highvalue,w
   614     06E9  00E1               	movwf	??_main+4
   615     06EA  0847               	movf	_highvalue+1,w
   616     06EB  00E2               	movwf	??_main+5
   617     06EC  01E3               	clrf	??_main+6
   618     06ED  01E4               	clrf	??_main+7
   619     06EE  3008               	movlw	8
   620     06EF                     u685:
   621     06EF  1003               	clrc
   622     06F0  0DE1               	rlf	??_main+4,f
   623     06F1  0DE2               	rlf	??_main+5,f
   624     06F2  0DE3               	rlf	??_main+6,f
   625     06F3  0DE4               	rlf	??_main+7,f
   626     06F4                     u680:
   627     06F4  3EFF               	addlw	-1
   628     06F5  1D03               	skipz
   629     06F6  2EEF               	goto	u685
   630     06F7  0861               	movf	??_main+4,w
   631     06F8  07DD               	addwf	??_main,f
   632     06F9  0862               	movf	??_main+5,w
   633     06FA  1803               	skipnc
   634     06FB  0F62               	incfsz	??_main+5,w
   635     06FC  2EFE               	goto	u690
   636     06FD  2EFF               	goto	u691
   637     06FE                     u690:
   638     06FE  07DE               	addwf	??_main+1,f
   639     06FF                     u691:
   640     06FF  0863               	movf	??_main+6,w
   641     0700  1803               	skipnc
   642     0701  0F63               	incfsz	??_main+6,w
   643     0702  2F04               	goto	u692
   644     0703  2F05               	goto	u693
   645     0704                     u692:
   646     0704  07DF               	addwf	??_main+2,f
   647     0705                     u693:
   648     0705  0864               	movf	??_main+7,w
   649     0706  1803               	skipnc
   650     0707  0A64               	incf	??_main+7,w
   651     0708  07E0               	addwf	??_main+3,f
   652     0709  0860               	movf	??_main+3,w
   653     070A  00B1               	movwf	_value+3
   654     070B  085F               	movf	??_main+2,w
   655     070C  00B0               	movwf	_value+2
   656     070D  085E               	movf	??_main+1,w
   657     070E  00AF               	movwf	_value+1
   658     070F  085D               	movf	??_main,w
   659     0710  00AE               	movwf	_value
   660     0711                     l1091:
   661                           
   662                           ;adctask.c: 44:         lcdcmd(0x80);
   663     0711  3080               	movlw	128
   664     0712  120A  118A  2403  120A  118A  	fcall	_lcdcmd
   665     0717                     l1093:
   666                           
   667                           ;adctask.c: 45:         for(fr=0;fr!=9;fr++)
   668     0717  1283               	bcf	3,5	;RP0=0, select bank0
   669     0718  1303               	bcf	3,6	;RP1=0, select bank0
   670     0719  01C0               	clrf	_fr
   671     071A  01C1               	clrf	_fr+1
   672     071B                     l1099:
   673                           
   674                           ;adctask.c: 46:         {;adctask.c: 47:             lcddata(b[fr]);
   675     071B  0840               	movf	_fr,w
   676     071C  3EA0               	addlw	(low (_b| 0))& (0+255)
   677     071D  0084               	movwf	4
   678     071E  1383               	bcf	3,7	;select IRP bank1
   679     071F  0800               	movf	0,w
   680     0720  120A  118A  23EE  120A  118A  	fcall	_lcddata
   681     0725                     l1101:
   682                           
   683                           ;adctask.c: 48:         }
   684     0725  3001               	movlw	1
   685     0726  1283               	bcf	3,5	;RP0=0, select bank0
   686     0727  1303               	bcf	3,6	;RP1=0, select bank0
   687     0728  07C0               	addwf	_fr,f
   688     0729  1803               	skipnc
   689     072A  0AC1               	incf	_fr+1,f
   690     072B  3000               	movlw	0
   691     072C  07C1               	addwf	_fr+1,f
   692     072D                     l1103:
   693     072D  3009               	movlw	9
   694     072E  0640               	xorwf	_fr,w
   695     072F  0441               	iorwf	_fr+1,w
   696     0730  1D03               	btfss	3,2
   697     0731  2F33               	goto	u701
   698     0732  2F34               	goto	u700
   699     0733                     u701:
   700     0733  2F1B               	goto	l1099
   701     0734                     u700:
   702     0734                     l1105:
   703                           
   704                           ;adctask.c: 49:         lcdoutput1(value);
   705     0734  0831               	movf	_value+3,w
   706     0735  00DC               	movwf	lcdoutput1@i+3
   707     0736  0830               	movf	_value+2,w
   708     0737  00DB               	movwf	lcdoutput1@i+2
   709     0738  082F               	movf	_value+1,w
   710     0739  00DA               	movwf	lcdoutput1@i+1
   711     073A  082E               	movf	_value,w
   712     073B  00D9               	movwf	lcdoutput1@i
   713     073C  120A  118A  2617  120A  118A  	fcall	_lcdoutput1
   714     0741                     l1107:
   715                           
   716                           ;adctask.c: 50:         for(fr=0;fr!=4;fr++)
   717     0741  1283               	bcf	3,5	;RP0=0, select bank0
   718     0742  1303               	bcf	3,6	;RP1=0, select bank0
   719     0743  01C0               	clrf	_fr
   720     0744  01C1               	clrf	_fr+1
   721     0745                     l1113:
   722                           
   723                           ;adctask.c: 51:             lcddata((0x30)+l[fr]);
   724     0745  0840               	movf	_fr,w
   725     0746  3E32               	addlw	(low (_l| 0))& (0+255)
   726     0747  0084               	movwf	4
   727     0748  1383               	bcf	3,7	;select IRP bank0
   728     0749  0800               	movf	0,w
   729     074A  3E30               	addlw	48
   730     074B  120A  118A  23EE  120A  118A  	fcall	_lcddata
   731     0750                     l1115:
   732     0750  3001               	movlw	1
   733     0751  1283               	bcf	3,5	;RP0=0, select bank0
   734     0752  1303               	bcf	3,6	;RP1=0, select bank0
   735     0753  07C0               	addwf	_fr,f
   736     0754  1803               	skipnc
   737     0755  0AC1               	incf	_fr+1,f
   738     0756  3000               	movlw	0
   739     0757  07C1               	addwf	_fr+1,f
   740     0758                     l1117:
   741     0758  3004               	movlw	4
   742     0759  0640               	xorwf	_fr,w
   743     075A  0441               	iorwf	_fr+1,w
   744     075B  1D03               	btfss	3,2
   745     075C  2F5E               	goto	u711
   746     075D  2F5F               	goto	u710
   747     075E                     u711:
   748     075E  2F45               	goto	l1113
   749     075F                     u710:
   750     075F                     l1119:
   751                           
   752                           ;adctask.c: 52:         delay(1000);
   753     075F  30E8               	movlw	232
   754     0760  00F0               	movwf	delay@delaycount
   755     0761  3003               	movlw	3
   756     0762  00F1               	movwf	delay@delaycount+1
   757     0763  120A  118A  23B9  120A  118A  	fcall	_delay
   758     0768                     l1121:
   759                           
   760                           ;adctask.c: 53:         voltage=value*100/1023;
   761     0768  3000               	movlw	0
   762     0769  1283               	bcf	3,5	;RP0=0, select bank0
   763     076A  1303               	bcf	3,6	;RP1=0, select bank0
   764     076B  00CF               	movwf	___lldiv@divisor+3
   765     076C  3000               	movlw	0
   766     076D  00CE               	movwf	___lldiv@divisor+2
   767     076E  3003               	movlw	3
   768     076F  00CD               	movwf	___lldiv@divisor+1
   769     0770  30FF               	movlw	255
   770     0771  00CC               	movwf	___lldiv@divisor
   771     0772  0831               	movf	_value+3,w
   772     0773  00F3               	movwf	___lmul@multiplier+3
   773     0774  0830               	movf	_value+2,w
   774     0775  00F2               	movwf	___lmul@multiplier+2
   775     0776  082F               	movf	_value+1,w
   776     0777  00F1               	movwf	___lmul@multiplier+1
   777     0778  082E               	movf	_value,w
   778     0779  00F0               	movwf	___lmul@multiplier
   779     077A  3000               	movlw	0
   780     077B  00F7               	movwf	___lmul@multiplicand+3
   781     077C  3000               	movlw	0
   782     077D  00F6               	movwf	___lmul@multiplicand+2
   783     077E  3000               	movlw	0
   784     077F  00F5               	movwf	___lmul@multiplicand+1
   785     0780  3064               	movlw	100
   786     0781  00F4               	movwf	___lmul@multiplicand
   787     0782  120A  118A  249E  120A  118A  	fcall	___lmul
   788     0787  0873               	movf	?___lmul+3,w
   789     0788  1283               	bcf	3,5	;RP0=0, select bank0
   790     0789  1303               	bcf	3,6	;RP1=0, select bank0
   791     078A  00D3               	movwf	___lldiv@dividend+3
   792     078B  0872               	movf	?___lmul+2,w
   793     078C  00D2               	movwf	___lldiv@dividend+2
   794     078D  0871               	movf	?___lmul+1,w
   795     078E  00D1               	movwf	___lldiv@dividend+1
   796     078F  0870               	movf	?___lmul,w
   797     0790  00D0               	movwf	___lldiv@dividend
   798     0791  120A  118A  2538  120A  118A  	fcall	___lldiv
   799     0796  1283               	bcf	3,5	;RP0=0, select bank0
   800     0797  1303               	bcf	3,6	;RP1=0, select bank0
   801     0798  084F               	movf	?___lldiv+3,w
   802     0799  00AD               	movwf	_voltage+3
   803     079A  084E               	movf	?___lldiv+2,w
   804     079B  00AC               	movwf	_voltage+2
   805     079C  084D               	movf	?___lldiv+1,w
   806     079D  00AB               	movwf	_voltage+1
   807     079E  084C               	movf	?___lldiv,w
   808     079F  00AA               	movwf	_voltage
   809     07A0                     l1123:
   810                           
   811                           ;adctask.c: 54:         lcdcmd(0xC0);
   812     07A0  30C0               	movlw	192
   813     07A1  120A  118A  2403  120A  118A  	fcall	_lcdcmd
   814     07A6                     l1125:
   815                           
   816                           ;adctask.c: 55:         for(fr=0;fr!=6;fr++)
   817     07A6  1283               	bcf	3,5	;RP0=0, select bank0
   818     07A7  1303               	bcf	3,6	;RP1=0, select bank0
   819     07A8  01C0               	clrf	_fr
   820     07A9  01C1               	clrf	_fr+1
   821     07AA                     l1131:
   822                           
   823                           ;adctask.c: 56:         {;adctask.c: 57:             lcddata(a[fr]);
   824     07AA  0840               	movf	_fr,w
   825     07AB  3E65               	addlw	(low (_a| 0))& (0+255)
   826     07AC  0084               	movwf	4
   827     07AD  1383               	bcf	3,7	;select IRP bank0
   828     07AE  0800               	movf	0,w
   829     07AF  120A  118A  23EE  120A  118A  	fcall	_lcddata
   830     07B4                     l1133:
   831                           
   832                           ;adctask.c: 58:         }
   833     07B4  3001               	movlw	1
   834     07B5  1283               	bcf	3,5	;RP0=0, select bank0
   835     07B6  1303               	bcf	3,6	;RP1=0, select bank0
   836     07B7  07C0               	addwf	_fr,f
   837     07B8  1803               	skipnc
   838     07B9  0AC1               	incf	_fr+1,f
   839     07BA  3000               	movlw	0
   840     07BB  07C1               	addwf	_fr+1,f
   841     07BC                     l1135:
   842     07BC  3006               	movlw	6
   843     07BD  0640               	xorwf	_fr,w
   844     07BE  0441               	iorwf	_fr+1,w
   845     07BF  1D03               	btfss	3,2
   846     07C0  2FC2               	goto	u721
   847     07C1  2FC3               	goto	u720
   848     07C2                     u721:
   849     07C2  2FAA               	goto	l1131
   850     07C3                     u720:
   851     07C3                     l1137:
   852                           
   853                           ;adctask.c: 59:         lcdoutput(voltage);
   854     07C3  082B               	movf	_voltage+1,w
   855     07C4  00FB               	movwf	lcdoutput@i+1
   856     07C5  082A               	movf	_voltage,w
   857     07C6  00FA               	movwf	lcdoutput@i
   858     07C7  120A  118A  25A0  120A  118A  	fcall	_lcdoutput
   859     07CC                     l1139:
   860                           
   861                           ;adctask.c: 60:         delay(1000);
   862     07CC  30E8               	movlw	232
   863     07CD  00F0               	movwf	delay@delaycount
   864     07CE  3003               	movlw	3
   865     07CF  00F1               	movwf	delay@delaycount+1
   866     07D0  120A  118A  23B9  120A  118A  	fcall	_delay
   867     07D5  2EC9               	goto	l1085
   868     07D6  120A  118A  2800   	ljmp	start
   869     07D9                     __end_of_main:
   870                           
   871                           	psect	text1
   872     0617                     __ptext1:	
   873 ;; *************** function _lcdoutput1 *****************
   874 ;; Defined at:
   875 ;;		line 109 in file "adctask.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  i               4   13[BANK0 ] unsigned long 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   889 ;;      Params:         0       4       0       0       0
   890 ;;      Locals:         0       0       0       0       0
   891 ;;      Temps:          0       0       0       0       0
   892 ;;      Totals:         0       4       0       0       0
   893 ;;Total ram usage:        4 bytes
   894 ;; Hardware stack levels used: 1
   895 ;; Hardware stack levels required when called: 1
   896 ;; This function calls:
   897 ;;		___lldiv
   898 ;;		___llmod
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904     0617                     _lcdoutput1:	
   905                           ;psect for function _lcdoutput1
   906                           
   907     0617                     l1031:	
   908                           ;incstack = 0
   909                           ; Regs used in _lcdoutput1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   910                           
   911                           
   912                           ;adctask.c: 109: void lcdoutput1(unsigned long i);adctask.c: 110: {;adctask.c: 111: l[3]
      +                          =i%10;
   913     0617  3000               	movlw	0
   914     0618  00F3               	movwf	___llmod@divisor+3
   915     0619  3000               	movlw	0
   916     061A  00F2               	movwf	___llmod@divisor+2
   917     061B  3000               	movlw	0
   918     061C  00F1               	movwf	___llmod@divisor+1
   919     061D  300A               	movlw	10
   920     061E  00F0               	movwf	___llmod@divisor
   921     061F  1283               	bcf	3,5	;RP0=0, select bank0
   922     0620  1303               	bcf	3,6	;RP1=0, select bank0
   923     0621  085C               	movf	lcdoutput1@i+3,w
   924     0622  00F7               	movwf	___llmod@dividend+3
   925     0623  085B               	movf	lcdoutput1@i+2,w
   926     0624  00F6               	movwf	___llmod@dividend+2
   927     0625  085A               	movf	lcdoutput1@i+1,w
   928     0626  00F5               	movwf	___llmod@dividend+1
   929     0627  0859               	movf	lcdoutput1@i,w
   930     0628  00F4               	movwf	___llmod@dividend
   931     0629  120A  118A  24E4  120A  118A  	fcall	___llmod
   932     062E  0870               	movf	?___llmod,w
   933     062F  1283               	bcf	3,5	;RP0=0, select bank0
   934     0630  1303               	bcf	3,6	;RP1=0, select bank0
   935     0631  00B5               	movwf	_l+3
   936                           
   937                           ;adctask.c: 112: i/=10;
   938     0632  3000               	movlw	0
   939     0633  00CF               	movwf	___lldiv@divisor+3
   940     0634  3000               	movlw	0
   941     0635  00CE               	movwf	___lldiv@divisor+2
   942     0636  3000               	movlw	0
   943     0637  00CD               	movwf	___lldiv@divisor+1
   944     0638  300A               	movlw	10
   945     0639  00CC               	movwf	___lldiv@divisor
   946     063A  085C               	movf	lcdoutput1@i+3,w
   947     063B  00D3               	movwf	___lldiv@dividend+3
   948     063C  085B               	movf	lcdoutput1@i+2,w
   949     063D  00D2               	movwf	___lldiv@dividend+2
   950     063E  085A               	movf	lcdoutput1@i+1,w
   951     063F  00D1               	movwf	___lldiv@dividend+1
   952     0640  0859               	movf	lcdoutput1@i,w
   953     0641  00D0               	movwf	___lldiv@dividend
   954     0642  120A  118A  2538  120A  118A  	fcall	___lldiv
   955     0647  1283               	bcf	3,5	;RP0=0, select bank0
   956     0648  1303               	bcf	3,6	;RP1=0, select bank0
   957     0649  084F               	movf	?___lldiv+3,w
   958     064A  00DC               	movwf	lcdoutput1@i+3
   959     064B  084E               	movf	?___lldiv+2,w
   960     064C  00DB               	movwf	lcdoutput1@i+2
   961     064D  084D               	movf	?___lldiv+1,w
   962     064E  00DA               	movwf	lcdoutput1@i+1
   963     064F  084C               	movf	?___lldiv,w
   964     0650  00D9               	movwf	lcdoutput1@i
   965                           
   966                           ;adctask.c: 113: l[2]=i%10;
   967     0651  3000               	movlw	0
   968     0652  00F3               	movwf	___llmod@divisor+3
   969     0653  3000               	movlw	0
   970     0654  00F2               	movwf	___llmod@divisor+2
   971     0655  3000               	movlw	0
   972     0656  00F1               	movwf	___llmod@divisor+1
   973     0657  300A               	movlw	10
   974     0658  00F0               	movwf	___llmod@divisor
   975     0659  085C               	movf	lcdoutput1@i+3,w
   976     065A  00F7               	movwf	___llmod@dividend+3
   977     065B  085B               	movf	lcdoutput1@i+2,w
   978     065C  00F6               	movwf	___llmod@dividend+2
   979     065D  085A               	movf	lcdoutput1@i+1,w
   980     065E  00F5               	movwf	___llmod@dividend+1
   981     065F  0859               	movf	lcdoutput1@i,w
   982     0660  00F4               	movwf	___llmod@dividend
   983     0661  120A  118A  24E4  120A  118A  	fcall	___llmod
   984     0666  0870               	movf	?___llmod,w
   985     0667  1283               	bcf	3,5	;RP0=0, select bank0
   986     0668  1303               	bcf	3,6	;RP1=0, select bank0
   987     0669  00B4               	movwf	_l+2
   988                           
   989                           ;adctask.c: 114: i/=10;
   990     066A  3000               	movlw	0
   991     066B  00CF               	movwf	___lldiv@divisor+3
   992     066C  3000               	movlw	0
   993     066D  00CE               	movwf	___lldiv@divisor+2
   994     066E  3000               	movlw	0
   995     066F  00CD               	movwf	___lldiv@divisor+1
   996     0670  300A               	movlw	10
   997     0671  00CC               	movwf	___lldiv@divisor
   998     0672  085C               	movf	lcdoutput1@i+3,w
   999     0673  00D3               	movwf	___lldiv@dividend+3
  1000     0674  085B               	movf	lcdoutput1@i+2,w
  1001     0675  00D2               	movwf	___lldiv@dividend+2
  1002     0676  085A               	movf	lcdoutput1@i+1,w
  1003     0677  00D1               	movwf	___lldiv@dividend+1
  1004     0678  0859               	movf	lcdoutput1@i,w
  1005     0679  00D0               	movwf	___lldiv@dividend
  1006     067A  120A  118A  2538  120A  118A  	fcall	___lldiv
  1007     067F  1283               	bcf	3,5	;RP0=0, select bank0
  1008     0680  1303               	bcf	3,6	;RP1=0, select bank0
  1009     0681  084F               	movf	?___lldiv+3,w
  1010     0682  00DC               	movwf	lcdoutput1@i+3
  1011     0683  084E               	movf	?___lldiv+2,w
  1012     0684  00DB               	movwf	lcdoutput1@i+2
  1013     0685  084D               	movf	?___lldiv+1,w
  1014     0686  00DA               	movwf	lcdoutput1@i+1
  1015     0687  084C               	movf	?___lldiv,w
  1016     0688  00D9               	movwf	lcdoutput1@i
  1017                           
  1018                           ;adctask.c: 115: l[1]=i%10;
  1019     0689  3000               	movlw	0
  1020     068A  00F3               	movwf	___llmod@divisor+3
  1021     068B  3000               	movlw	0
  1022     068C  00F2               	movwf	___llmod@divisor+2
  1023     068D  3000               	movlw	0
  1024     068E  00F1               	movwf	___llmod@divisor+1
  1025     068F  300A               	movlw	10
  1026     0690  00F0               	movwf	___llmod@divisor
  1027     0691  085C               	movf	lcdoutput1@i+3,w
  1028     0692  00F7               	movwf	___llmod@dividend+3
  1029     0693  085B               	movf	lcdoutput1@i+2,w
  1030     0694  00F6               	movwf	___llmod@dividend+2
  1031     0695  085A               	movf	lcdoutput1@i+1,w
  1032     0696  00F5               	movwf	___llmod@dividend+1
  1033     0697  0859               	movf	lcdoutput1@i,w
  1034     0698  00F4               	movwf	___llmod@dividend
  1035     0699  120A  118A  24E4  120A  118A  	fcall	___llmod
  1036     069E  0870               	movf	?___llmod,w
  1037     069F  1283               	bcf	3,5	;RP0=0, select bank0
  1038     06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1039     06A1  00B3               	movwf	_l+1
  1040                           
  1041                           ;adctask.c: 116: i/=10;
  1042     06A2  3000               	movlw	0
  1043     06A3  00CF               	movwf	___lldiv@divisor+3
  1044     06A4  3000               	movlw	0
  1045     06A5  00CE               	movwf	___lldiv@divisor+2
  1046     06A6  3000               	movlw	0
  1047     06A7  00CD               	movwf	___lldiv@divisor+1
  1048     06A8  300A               	movlw	10
  1049     06A9  00CC               	movwf	___lldiv@divisor
  1050     06AA  085C               	movf	lcdoutput1@i+3,w
  1051     06AB  00D3               	movwf	___lldiv@dividend+3
  1052     06AC  085B               	movf	lcdoutput1@i+2,w
  1053     06AD  00D2               	movwf	___lldiv@dividend+2
  1054     06AE  085A               	movf	lcdoutput1@i+1,w
  1055     06AF  00D1               	movwf	___lldiv@dividend+1
  1056     06B0  0859               	movf	lcdoutput1@i,w
  1057     06B1  00D0               	movwf	___lldiv@dividend
  1058     06B2  120A  118A  2538  120A  118A  	fcall	___lldiv
  1059     06B7  1283               	bcf	3,5	;RP0=0, select bank0
  1060     06B8  1303               	bcf	3,6	;RP1=0, select bank0
  1061     06B9  084F               	movf	?___lldiv+3,w
  1062     06BA  00DC               	movwf	lcdoutput1@i+3
  1063     06BB  084E               	movf	?___lldiv+2,w
  1064     06BC  00DB               	movwf	lcdoutput1@i+2
  1065     06BD  084D               	movf	?___lldiv+1,w
  1066     06BE  00DA               	movwf	lcdoutput1@i+1
  1067     06BF  084C               	movf	?___lldiv,w
  1068     06C0  00D9               	movwf	lcdoutput1@i
  1069     06C1                     l1033:
  1070                           
  1071                           ;adctask.c: 117: l[0]=i;
  1072     06C1  0859               	movf	lcdoutput1@i,w
  1073     06C2  00B2               	movwf	_l
  1074     06C3                     l97:
  1075     06C3  0008               	return
  1076     06C4                     __end_of_lcdoutput1:
  1077                           
  1078                           	psect	text2
  1079     04E4                     __ptext2:	
  1080 ;; *************** function ___llmod *****************
  1081 ;; Defined at:
  1082 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\llmod.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  divisor         4    0[COMMON] unsigned long 
  1085 ;;  dividend        4    4[COMMON] unsigned long 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  counter         1    9[COMMON] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  4    0[COMMON] unsigned long 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0, btemp+1
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         8       0       0       0       0
  1098 ;;      Locals:         1       0       0       0       0
  1099 ;;      Temps:          1       0       0       0       0
  1100 ;;      Totals:        10       0       0       0       0
  1101 ;;Total ram usage:       10 bytes
  1102 ;; Hardware stack levels used: 1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_lcdoutput1
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110     04E4                     ___llmod:	
  1111                           ;psect for function ___llmod
  1112                           
  1113     04E4                     l963:	
  1114                           ;incstack = 0
  1115                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  1116                           
  1117     04E4  0873               	movf	___llmod@divisor+3,w
  1118     04E5  0472               	iorwf	___llmod@divisor+2,w
  1119     04E6  0471               	iorwf	___llmod@divisor+1,w
  1120     04E7  0470               	iorwf	___llmod@divisor,w
  1121     04E8  1903               	skipnz
  1122     04E9  2CEB               	goto	u471
  1123     04EA  2CEC               	goto	u470
  1124     04EB                     u471:
  1125     04EB  2D2F               	goto	l981
  1126     04EC                     u470:
  1127     04EC                     l965:
  1128     04EC  01F9               	clrf	___llmod@counter
  1129     04ED  0AF9               	incf	___llmod@counter,f
  1130     04EE  2CFC               	goto	l971
  1131     04EF                     l967:
  1132     04EF  3001               	movlw	1
  1133     04F0  00F8               	movwf	??___llmod
  1134     04F1                     u485:
  1135     04F1  1003               	clrc
  1136     04F2  0DF0               	rlf	___llmod@divisor,f
  1137     04F3  0DF1               	rlf	___llmod@divisor+1,f
  1138     04F4  0DF2               	rlf	___llmod@divisor+2,f
  1139     04F5  0DF3               	rlf	___llmod@divisor+3,f
  1140     04F6  0BF8               	decfsz	??___llmod,f
  1141     04F7  2CF1               	goto	u485
  1142     04F8                     l969:
  1143     04F8  3001               	movlw	1
  1144     04F9  00FF               	movwf	btemp+1
  1145     04FA  087F               	movf	btemp+1,w
  1146     04FB  07F9               	addwf	___llmod@counter,f
  1147     04FC                     l971:
  1148     04FC  1FF3               	btfss	___llmod@divisor+3,7
  1149     04FD  2CFF               	goto	u491
  1150     04FE  2D00               	goto	u490
  1151     04FF                     u491:
  1152     04FF  2CEF               	goto	l967
  1153     0500                     u490:
  1154     0500                     l973:
  1155     0500  0873               	movf	___llmod@divisor+3,w
  1156     0501  0277               	subwf	___llmod@dividend+3,w
  1157     0502  1D03               	skipz
  1158     0503  2D0E               	goto	u505
  1159     0504  0872               	movf	___llmod@divisor+2,w
  1160     0505  0276               	subwf	___llmod@dividend+2,w
  1161     0506  1D03               	skipz
  1162     0507  2D0E               	goto	u505
  1163     0508  0871               	movf	___llmod@divisor+1,w
  1164     0509  0275               	subwf	___llmod@dividend+1,w
  1165     050A  1D03               	skipz
  1166     050B  2D0E               	goto	u505
  1167     050C  0870               	movf	___llmod@divisor,w
  1168     050D  0274               	subwf	___llmod@dividend,w
  1169     050E                     u505:
  1170     050E  1C03               	skipc
  1171     050F  2D11               	goto	u501
  1172     0510  2D12               	goto	u500
  1173     0511                     u501:
  1174     0511  2D20               	goto	l977
  1175     0512                     u500:
  1176     0512                     l975:
  1177     0512  0870               	movf	___llmod@divisor,w
  1178     0513  02F4               	subwf	___llmod@dividend,f
  1179     0514  0871               	movf	___llmod@divisor+1,w
  1180     0515  1C03               	skipc
  1181     0516  0F71               	incfsz	___llmod@divisor+1,w
  1182     0517  02F5               	subwf	___llmod@dividend+1,f
  1183     0518  0872               	movf	___llmod@divisor+2,w
  1184     0519  1C03               	skipc
  1185     051A  0F72               	incfsz	___llmod@divisor+2,w
  1186     051B  02F6               	subwf	___llmod@dividend+2,f
  1187     051C  0873               	movf	___llmod@divisor+3,w
  1188     051D  1C03               	skipc
  1189     051E  0F73               	incfsz	___llmod@divisor+3,w
  1190     051F  02F7               	subwf	___llmod@dividend+3,f
  1191     0520                     l977:
  1192     0520  3001               	movlw	1
  1193     0521                     u515:
  1194     0521  1003               	clrc
  1195     0522  0CF3               	rrf	___llmod@divisor+3,f
  1196     0523  0CF2               	rrf	___llmod@divisor+2,f
  1197     0524  0CF1               	rrf	___llmod@divisor+1,f
  1198     0525  0CF0               	rrf	___llmod@divisor,f
  1199     0526  3EFF               	addlw	-1
  1200     0527  1D03               	skipz
  1201     0528  2D21               	goto	u515
  1202     0529                     l979:
  1203     0529  3001               	movlw	1
  1204     052A  02F9               	subwf	___llmod@counter,f
  1205     052B  1D03               	btfss	3,2
  1206     052C  2D2E               	goto	u521
  1207     052D  2D2F               	goto	u520
  1208     052E                     u521:
  1209     052E  2D00               	goto	l973
  1210     052F                     u520:
  1211     052F                     l981:
  1212     052F  0877               	movf	___llmod@dividend+3,w
  1213     0530  00F3               	movwf	?___llmod+3
  1214     0531  0876               	movf	___llmod@dividend+2,w
  1215     0532  00F2               	movwf	?___llmod+2
  1216     0533  0875               	movf	___llmod@dividend+1,w
  1217     0534  00F1               	movwf	?___llmod+1
  1218     0535  0874               	movf	___llmod@dividend,w
  1219     0536  00F0               	movwf	?___llmod
  1220     0537                     l425:
  1221     0537  0008               	return
  1222     0538                     __end_of___llmod:
  1223                           
  1224                           	psect	text3
  1225     0538                     __ptext3:	
  1226 ;; *************** function ___lldiv *****************
  1227 ;; Defined at:
  1228 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  divisor         4    0[BANK0 ] unsigned long 
  1231 ;;  dividend        4    4[BANK0 ] unsigned long 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  quotient        4    8[BANK0 ] unsigned long 
  1234 ;;  counter         1   12[BANK0 ] unsigned char 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  4    0[BANK0 ] unsigned long 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0, btemp+1
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1244 ;;      Params:         0       8       0       0       0
  1245 ;;      Locals:         0       5       0       0       0
  1246 ;;      Temps:          1       0       0       0       0
  1247 ;;      Totals:         1      13       0       0       0
  1248 ;;Total ram usage:       14 bytes
  1249 ;; Hardware stack levels used: 1
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;;		_lcdoutput1
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258     0538                     ___lldiv:	
  1259                           ;psect for function ___lldiv
  1260                           
  1261     0538                     l937:	
  1262                           ;incstack = 0
  1263                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1264                           
  1265     0538  3000               	movlw	0
  1266     0539  1283               	bcf	3,5	;RP0=0, select bank0
  1267     053A  1303               	bcf	3,6	;RP1=0, select bank0
  1268     053B  00D7               	movwf	___lldiv@quotient+3
  1269     053C  3000               	movlw	0
  1270     053D  00D6               	movwf	___lldiv@quotient+2
  1271     053E  3000               	movlw	0
  1272     053F  00D5               	movwf	___lldiv@quotient+1
  1273     0540  3000               	movlw	0
  1274     0541  00D4               	movwf	___lldiv@quotient
  1275     0542  084F               	movf	___lldiv@divisor+3,w
  1276     0543  044E               	iorwf	___lldiv@divisor+2,w
  1277     0544  044D               	iorwf	___lldiv@divisor+1,w
  1278     0545  044C               	iorwf	___lldiv@divisor,w
  1279     0546  1903               	skipnz
  1280     0547  2D49               	goto	u401
  1281     0548  2D4A               	goto	u400
  1282     0549                     u401:
  1283     0549  2D97               	goto	l959
  1284     054A                     u400:
  1285     054A                     l939:
  1286     054A  01D8               	clrf	___lldiv@counter
  1287     054B  0AD8               	incf	___lldiv@counter,f
  1288     054C  2D5A               	goto	l945
  1289     054D                     l941:
  1290     054D  3001               	movlw	1
  1291     054E  00FD               	movwf	??___lldiv
  1292     054F                     u415:
  1293     054F  1003               	clrc
  1294     0550  0DCC               	rlf	___lldiv@divisor,f
  1295     0551  0DCD               	rlf	___lldiv@divisor+1,f
  1296     0552  0DCE               	rlf	___lldiv@divisor+2,f
  1297     0553  0DCF               	rlf	___lldiv@divisor+3,f
  1298     0554  0BFD               	decfsz	??___lldiv,f
  1299     0555  2D4F               	goto	u415
  1300     0556                     l943:
  1301     0556  3001               	movlw	1
  1302     0557  00FF               	movwf	btemp+1
  1303     0558  087F               	movf	btemp+1,w
  1304     0559  07D8               	addwf	___lldiv@counter,f
  1305     055A                     l945:
  1306     055A  1FCF               	btfss	___lldiv@divisor+3,7
  1307     055B  2D5D               	goto	u421
  1308     055C  2D5E               	goto	u420
  1309     055D                     u421:
  1310     055D  2D4D               	goto	l941
  1311     055E                     u420:
  1312     055E                     l947:
  1313     055E  3001               	movlw	1
  1314     055F  00FD               	movwf	??___lldiv
  1315     0560                     u435:
  1316     0560  1003               	clrc
  1317     0561  0DD4               	rlf	___lldiv@quotient,f
  1318     0562  0DD5               	rlf	___lldiv@quotient+1,f
  1319     0563  0DD6               	rlf	___lldiv@quotient+2,f
  1320     0564  0DD7               	rlf	___lldiv@quotient+3,f
  1321     0565  0BFD               	decfsz	??___lldiv,f
  1322     0566  2D60               	goto	u435
  1323     0567                     l949:
  1324     0567  084F               	movf	___lldiv@divisor+3,w
  1325     0568  0253               	subwf	___lldiv@dividend+3,w
  1326     0569  1D03               	skipz
  1327     056A  2D75               	goto	u445
  1328     056B  084E               	movf	___lldiv@divisor+2,w
  1329     056C  0252               	subwf	___lldiv@dividend+2,w
  1330     056D  1D03               	skipz
  1331     056E  2D75               	goto	u445
  1332     056F  084D               	movf	___lldiv@divisor+1,w
  1333     0570  0251               	subwf	___lldiv@dividend+1,w
  1334     0571  1D03               	skipz
  1335     0572  2D75               	goto	u445
  1336     0573  084C               	movf	___lldiv@divisor,w
  1337     0574  0250               	subwf	___lldiv@dividend,w
  1338     0575                     u445:
  1339     0575  1C03               	skipc
  1340     0576  2D78               	goto	u441
  1341     0577  2D79               	goto	u440
  1342     0578                     u441:
  1343     0578  2D88               	goto	l955
  1344     0579                     u440:
  1345     0579                     l951:
  1346     0579  084C               	movf	___lldiv@divisor,w
  1347     057A  02D0               	subwf	___lldiv@dividend,f
  1348     057B  084D               	movf	___lldiv@divisor+1,w
  1349     057C  1C03               	skipc
  1350     057D  0F4D               	incfsz	___lldiv@divisor+1,w
  1351     057E  02D1               	subwf	___lldiv@dividend+1,f
  1352     057F  084E               	movf	___lldiv@divisor+2,w
  1353     0580  1C03               	skipc
  1354     0581  0F4E               	incfsz	___lldiv@divisor+2,w
  1355     0582  02D2               	subwf	___lldiv@dividend+2,f
  1356     0583  084F               	movf	___lldiv@divisor+3,w
  1357     0584  1C03               	skipc
  1358     0585  0F4F               	incfsz	___lldiv@divisor+3,w
  1359     0586  02D3               	subwf	___lldiv@dividend+3,f
  1360     0587                     l953:
  1361     0587  1454               	bsf	___lldiv@quotient,0
  1362     0588                     l955:
  1363     0588  3001               	movlw	1
  1364     0589                     u455:
  1365     0589  1003               	clrc
  1366     058A  0CCF               	rrf	___lldiv@divisor+3,f
  1367     058B  0CCE               	rrf	___lldiv@divisor+2,f
  1368     058C  0CCD               	rrf	___lldiv@divisor+1,f
  1369     058D  0CCC               	rrf	___lldiv@divisor,f
  1370     058E  3EFF               	addlw	-1
  1371     058F  1D03               	skipz
  1372     0590  2D89               	goto	u455
  1373     0591                     l957:
  1374     0591  3001               	movlw	1
  1375     0592  02D8               	subwf	___lldiv@counter,f
  1376     0593  1D03               	btfss	3,2
  1377     0594  2D96               	goto	u461
  1378     0595  2D97               	goto	u460
  1379     0596                     u461:
  1380     0596  2D5E               	goto	l947
  1381     0597                     u460:
  1382     0597                     l959:
  1383     0597  0857               	movf	___lldiv@quotient+3,w
  1384     0598  00CF               	movwf	?___lldiv+3
  1385     0599  0856               	movf	___lldiv@quotient+2,w
  1386     059A  00CE               	movwf	?___lldiv+2
  1387     059B  0855               	movf	___lldiv@quotient+1,w
  1388     059C  00CD               	movwf	?___lldiv+1
  1389     059D  0854               	movf	___lldiv@quotient,w
  1390     059E  00CC               	movwf	?___lldiv
  1391     059F                     l231:
  1392     059F  0008               	return
  1393     05A0                     __end_of___lldiv:
  1394                           
  1395                           	psect	text4
  1396     05A0                     __ptext4:	
  1397 ;; *************** function _lcdoutput *****************
  1398 ;; Defined at:
  1399 ;;		line 80 in file "adctask.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;  i               2   10[COMMON] unsigned int 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  s               1   12[COMMON] unsigned char 
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1413 ;;      Params:         2       0       0       0       0
  1414 ;;      Locals:         1       0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0
  1416 ;;      Totals:         3       0       0       0       0
  1417 ;;Total ram usage:        3 bytes
  1418 ;; Hardware stack levels used: 1
  1419 ;; Hardware stack levels required when called: 2
  1420 ;; This function calls:
  1421 ;;		___bmul
  1422 ;;		___lwdiv
  1423 ;;		_lcddata
  1424 ;; This function is called by:
  1425 ;;		_main
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429     05A0                     _lcdoutput:	
  1430                           ;psect for function _lcdoutput
  1431                           
  1432     05A0                     l1035:	
  1433                           ;incstack = 0
  1434                           ; Regs used in _lcdoutput: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1435                           
  1436                           
  1437                           ;adctask.c: 80: void lcdoutput(unsigned int i);adctask.c: 81: {;adctask.c: 82:     unsig
      +                          ned char s;;adctask.c: 83:     j=1;
  1438     05A0  1283               	bcf	3,5	;RP0=0, select bank0
  1439     05A1  1303               	bcf	3,6	;RP1=0, select bank0
  1440     05A2  01CA               	clrf	_j
  1441     05A3  0ACA               	incf	_j,f
  1442     05A4                     l1037:
  1443                           
  1444                           ;adctask.c: 84:     m=i;
  1445     05A4  087B               	movf	lcdoutput@i+1,w
  1446     05A5  00C5               	movwf	_m+1
  1447     05A6  087A               	movf	lcdoutput@i,w
  1448     05A7  00C4               	movwf	_m
  1449                           
  1450                           ;adctask.c: 85:     while(m!=0)
  1451     05A8  2DDF               	goto	l1047
  1452     05A9                     l1039:
  1453                           
  1454                           ;adctask.c: 86:     {;adctask.c: 87:         s=m-(m/10)*10;
  1455     05A9  30F6               	movlw	246
  1456     05AA  00F7               	movwf	___bmul@multiplicand
  1457     05AB  0845               	movf	_m+1,w
  1458     05AC  00F3               	movwf	___lwdiv@dividend+1
  1459     05AD  0844               	movf	_m,w
  1460     05AE  00F2               	movwf	___lwdiv@dividend
  1461     05AF  300A               	movlw	10
  1462     05B0  00F0               	movwf	___lwdiv@divisor
  1463     05B1  3000               	movlw	0
  1464     05B2  00F1               	movwf	___lwdiv@divisor+1
  1465     05B3  120A  118A  245A  120A  118A  	fcall	___lwdiv
  1466     05B8  0870               	movf	?___lwdiv,w
  1467     05B9  120A  118A  23D9  120A  118A  	fcall	___bmul
  1468     05BE  1283               	bcf	3,5	;RP0=0, select bank0
  1469     05BF  1303               	bcf	3,6	;RP1=0, select bank0
  1470     05C0  0744               	addwf	_m,w
  1471     05C1  00FC               	movwf	lcdoutput@s
  1472     05C2                     l1041:
  1473                           
  1474                           ;adctask.c: 88:         k[j]=s;
  1475     05C2  084A               	movf	_j,w
  1476     05C3  3E20               	addlw	(low (_k| 0))& (0+255)
  1477     05C4  0084               	movwf	4
  1478     05C5  087C               	movf	lcdoutput@s,w
  1479     05C6  1383               	bcf	3,7	;select IRP bank0
  1480     05C7  0080               	movwf	0
  1481     05C8                     l1043:
  1482                           
  1483                           ;adctask.c: 89:         j++;
  1484     05C8  3001               	movlw	1
  1485     05C9  00FF               	movwf	btemp+1
  1486     05CA  087F               	movf	btemp+1,w
  1487     05CB  07CA               	addwf	_j,f
  1488     05CC                     l1045:
  1489                           
  1490                           ;adctask.c: 90:         m=m/10;
  1491     05CC  300A               	movlw	10
  1492     05CD  00F0               	movwf	___lwdiv@divisor
  1493     05CE  3000               	movlw	0
  1494     05CF  00F1               	movwf	___lwdiv@divisor+1
  1495     05D0  0845               	movf	_m+1,w
  1496     05D1  00F3               	movwf	___lwdiv@dividend+1
  1497     05D2  0844               	movf	_m,w
  1498     05D3  00F2               	movwf	___lwdiv@dividend
  1499     05D4  120A  118A  245A  120A  118A  	fcall	___lwdiv
  1500     05D9  0871               	movf	?___lwdiv+1,w
  1501     05DA  1283               	bcf	3,5	;RP0=0, select bank0
  1502     05DB  1303               	bcf	3,6	;RP1=0, select bank0
  1503     05DC  00C5               	movwf	_m+1
  1504     05DD  0870               	movf	?___lwdiv,w
  1505     05DE  00C4               	movwf	_m
  1506     05DF                     l1047:
  1507                           
  1508                           ;adctask.c: 85:     while(m!=0)
  1509     05DF  0844               	movf	_m,w
  1510     05E0  0445               	iorwf	_m+1,w
  1511     05E1  1D03               	btfss	3,2
  1512     05E2  2DE4               	goto	u601
  1513     05E3  2DE5               	goto	u600
  1514     05E4                     u601:
  1515     05E4  2DA9               	goto	l1039
  1516     05E5                     u600:
  1517     05E5                     l1049:
  1518                           
  1519                           ;adctask.c: 92:     k[j]='\0';
  1520     05E5  084A               	movf	_j,w
  1521     05E6  3E20               	addlw	(low (_k| 0))& (0+255)
  1522     05E7  0084               	movwf	4
  1523     05E8  1383               	bcf	3,7	;select IRP bank0
  1524     05E9  0180               	clrf	0
  1525     05EA                     l1051:
  1526                           
  1527                           ;adctask.c: 93:     j--;
  1528     05EA  3001               	movlw	1
  1529     05EB  02CA               	subwf	_j,f
  1530     05EC                     l1053:
  1531                           
  1532                           ;adctask.c: 94:     if(k[2]>0)
  1533     05EC  0822               	movf	_k+2,w
  1534     05ED  1903               	btfsc	3,2
  1535     05EE  2DF0               	goto	u611
  1536     05EF  2DF1               	goto	u610
  1537     05F0                     u611:
  1538     05F0  2DFB               	goto	l1059
  1539     05F1                     u610:
  1540     05F1                     l1055:
  1541                           
  1542                           ;adctask.c: 95:     {;adctask.c: 96:         n=0x30+k[2];
  1543     05F1  0822               	movf	_k+2,w
  1544     05F2  3E30               	addlw	48
  1545     05F3  00CB               	movwf	_n
  1546     05F4                     l1057:
  1547                           
  1548                           ;adctask.c: 97:         lcddata(n);
  1549     05F4  084B               	movf	_n,w
  1550     05F5  120A  118A  23EE  120A  118A  	fcall	_lcddata
  1551                           
  1552                           ;adctask.c: 98:     }
  1553     05FA  2E01               	goto	l1061
  1554     05FB                     l1059:
  1555                           
  1556                           ;adctask.c: 100:     {;adctask.c: 101:         lcddata(0x20);
  1557     05FB  3020               	movlw	32
  1558     05FC  120A  118A  23EE  120A  118A  	fcall	_lcddata
  1559     0601                     l1061:
  1560                           
  1561                           ;adctask.c: 103:         n=0x30+k[1];
  1562     0601  1283               	bcf	3,5	;RP0=0, select bank0
  1563     0602  1303               	bcf	3,6	;RP1=0, select bank0
  1564     0603  0821               	movf	_k+1,w
  1565     0604  3E30               	addlw	48
  1566     0605  00CB               	movwf	_n
  1567     0606                     l1063:
  1568                           
  1569                           ;adctask.c: 104:         lcddata(n);
  1570     0606  084B               	movf	_n,w
  1571     0607  120A  118A  23EE  120A  118A  	fcall	_lcddata
  1572     060C                     l1065:
  1573                           
  1574                           ;adctask.c: 105:         n=0x56;
  1575     060C  3056               	movlw	86
  1576     060D  1283               	bcf	3,5	;RP0=0, select bank0
  1577     060E  1303               	bcf	3,6	;RP1=0, select bank0
  1578     060F  00CB               	movwf	_n
  1579     0610                     l1067:
  1580                           
  1581                           ;adctask.c: 106:         lcddata(n);
  1582     0610  3056               	movlw	86
  1583     0611  120A  118A  23EE  120A  118A  	fcall	_lcddata
  1584     0616                     l94:
  1585     0616  0008               	return
  1586     0617                     __end_of_lcdoutput:
  1587                           
  1588                           	psect	text5
  1589     03EE                     __ptext5:	
  1590 ;; *************** function _lcddata *****************
  1591 ;; Defined at:
  1592 ;;		line 130 in file "adctask.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  i               1    wreg     unsigned char 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  i               1    2[COMMON] unsigned char 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         0       0       0       0       0
  1607 ;;      Locals:         1       0       0       0       0
  1608 ;;      Temps:          0       0       0       0       0
  1609 ;;      Totals:         1       0       0       0       0
  1610 ;;Total ram usage:        1 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 1
  1613 ;; This function calls:
  1614 ;;		_delay
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;;		_lcdoutput
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621     03EE                     _lcddata:	
  1622                           ;psect for function _lcddata
  1623                           
  1624                           
  1625                           ;incstack = 0
  1626                           ; Regs used in _lcddata: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1627                           ;lcddata@i stored from wreg
  1628     03EE  00F2               	movwf	lcddata@i
  1629     03EF                     l911:
  1630                           
  1631                           ;adctask.c: 130: void lcddata(unsigned char i);adctask.c: 131: {;adctask.c: 132:     POR
      +                          TC|=0x08;
  1632     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1633     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1634     03F1  1587               	bsf	7,3	;volatile
  1635     03F2                     l913:
  1636                           
  1637                           ;adctask.c: 133:     PORTD=i;
  1638     03F2  0872               	movf	lcddata@i,w
  1639     03F3  0088               	movwf	8	;volatile
  1640     03F4                     l915:
  1641                           
  1642                           ;adctask.c: 134:     PORTC|=0x01;
  1643     03F4  1407               	bsf	7,0	;volatile
  1644     03F5                     l917:
  1645                           
  1646                           ;adctask.c: 135:     PORTC&=~0x01;
  1647     03F5  30FE               	movlw	254
  1648     03F6  00FF               	movwf	btemp+1
  1649     03F7  087F               	movf	btemp+1,w
  1650     03F8  0587               	andwf	7,f	;volatile
  1651     03F9                     l919:
  1652                           
  1653                           ;adctask.c: 136:     delay(100);
  1654     03F9  3064               	movlw	100
  1655     03FA  00F0               	movwf	delay@delaycount
  1656     03FB  3000               	movlw	0
  1657     03FC  00F1               	movwf	delay@delaycount+1
  1658     03FD  120A  118A  23B9  120A  118A  	fcall	_delay
  1659     0402                     l103:
  1660     0402  0008               	return
  1661     0403                     __end_of_lcddata:
  1662                           
  1663                           	psect	text6
  1664     045A                     __ptext6:	
  1665 ;; *************** function ___lwdiv *****************
  1666 ;; Defined at:
  1667 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  divisor         2    0[COMMON] unsigned int 
  1670 ;;  dividend        2    2[COMMON] unsigned int 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  quotient        2    4[COMMON] unsigned int 
  1673 ;;  counter         1    6[COMMON] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  2    0[COMMON] unsigned int 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, btemp+1
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1683 ;;      Params:         4       0       0       0       0
  1684 ;;      Locals:         3       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0
  1686 ;;      Totals:         7       0       0       0       0
  1687 ;;Total ram usage:        7 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_lcdoutput
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696     045A                     ___lwdiv:	
  1697                           ;psect for function ___lwdiv
  1698                           
  1699     045A                     l985:	
  1700                           ;incstack = 0
  1701                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1702                           
  1703     045A  01F4               	clrf	___lwdiv@quotient
  1704     045B  01F5               	clrf	___lwdiv@quotient+1
  1705     045C                     l987:
  1706     045C  0870               	movf	___lwdiv@divisor,w
  1707     045D  0471               	iorwf	___lwdiv@divisor+1,w
  1708     045E  1903               	btfsc	3,2
  1709     045F  2C61               	goto	u531
  1710     0460  2C62               	goto	u530
  1711     0461                     u531:
  1712     0461  2C99               	goto	l1007
  1713     0462                     u530:
  1714     0462                     l989:
  1715     0462  01F6               	clrf	___lwdiv@counter
  1716     0463  0AF6               	incf	___lwdiv@counter,f
  1717     0464  2C70               	goto	l995
  1718     0465                     l991:
  1719     0465  3001               	movlw	1
  1720     0466                     u545:
  1721     0466  1003               	clrc
  1722     0467  0DF0               	rlf	___lwdiv@divisor,f
  1723     0468  0DF1               	rlf	___lwdiv@divisor+1,f
  1724     0469  3EFF               	addlw	-1
  1725     046A  1D03               	skipz
  1726     046B  2C66               	goto	u545
  1727     046C                     l993:
  1728     046C  3001               	movlw	1
  1729     046D  00FF               	movwf	btemp+1
  1730     046E  087F               	movf	btemp+1,w
  1731     046F  07F6               	addwf	___lwdiv@counter,f
  1732     0470                     l995:
  1733     0470  1FF1               	btfss	___lwdiv@divisor+1,7
  1734     0471  2C73               	goto	u551
  1735     0472  2C74               	goto	u550
  1736     0473                     u551:
  1737     0473  2C65               	goto	l991
  1738     0474                     u550:
  1739     0474                     l997:
  1740     0474  3001               	movlw	1
  1741     0475                     u565:
  1742     0475  1003               	clrc
  1743     0476  0DF4               	rlf	___lwdiv@quotient,f
  1744     0477  0DF5               	rlf	___lwdiv@quotient+1,f
  1745     0478  3EFF               	addlw	-1
  1746     0479  1D03               	skipz
  1747     047A  2C75               	goto	u565
  1748     047B  0871               	movf	___lwdiv@divisor+1,w
  1749     047C  0273               	subwf	___lwdiv@dividend+1,w
  1750     047D  1D03               	skipz
  1751     047E  2C81               	goto	u575
  1752     047F  0870               	movf	___lwdiv@divisor,w
  1753     0480  0272               	subwf	___lwdiv@dividend,w
  1754     0481                     u575:
  1755     0481  1C03               	skipc
  1756     0482  2C84               	goto	u571
  1757     0483  2C85               	goto	u570
  1758     0484                     u571:
  1759     0484  2C8C               	goto	l1003
  1760     0485                     u570:
  1761     0485                     l999:
  1762     0485  0870               	movf	___lwdiv@divisor,w
  1763     0486  02F2               	subwf	___lwdiv@dividend,f
  1764     0487  0871               	movf	___lwdiv@divisor+1,w
  1765     0488  1C03               	skipc
  1766     0489  03F3               	decf	___lwdiv@dividend+1,f
  1767     048A  02F3               	subwf	___lwdiv@dividend+1,f
  1768     048B                     l1001:
  1769     048B  1474               	bsf	___lwdiv@quotient,0
  1770     048C                     l1003:
  1771     048C  3001               	movlw	1
  1772     048D                     u585:
  1773     048D  1003               	clrc
  1774     048E  0CF1               	rrf	___lwdiv@divisor+1,f
  1775     048F  0CF0               	rrf	___lwdiv@divisor,f
  1776     0490  3EFF               	addlw	-1
  1777     0491  1D03               	skipz
  1778     0492  2C8D               	goto	u585
  1779     0493                     l1005:
  1780     0493  3001               	movlw	1
  1781     0494  02F6               	subwf	___lwdiv@counter,f
  1782     0495  1D03               	btfss	3,2
  1783     0496  2C98               	goto	u591
  1784     0497  2C99               	goto	u590
  1785     0498                     u591:
  1786     0498  2C74               	goto	l997
  1787     0499                     u590:
  1788     0499                     l1007:
  1789     0499  0875               	movf	___lwdiv@quotient+1,w
  1790     049A  00F1               	movwf	?___lwdiv+1
  1791     049B  0874               	movf	___lwdiv@quotient,w
  1792     049C  00F0               	movwf	?___lwdiv
  1793     049D                     l475:
  1794     049D  0008               	return
  1795     049E                     __end_of___lwdiv:
  1796                           
  1797                           	psect	text7
  1798     03D9                     __ptext7:	
  1799 ;; *************** function ___bmul *****************
  1800 ;; Defined at:
  1801 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  multiplier      1    wreg     unsigned char 
  1804 ;;  multiplicand    1    7[COMMON] unsigned char 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  multiplier      1    9[COMMON] unsigned char 
  1807 ;;  product         1    8[COMMON] unsigned char 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      unsigned char 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0, btemp+1
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1817 ;;      Params:         1       0       0       0       0
  1818 ;;      Locals:         2       0       0       0       0
  1819 ;;      Temps:          0       0       0       0       0
  1820 ;;      Totals:         3       0       0       0       0
  1821 ;;Total ram usage:        3 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_lcdoutput
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830     03D9                     ___bmul:	
  1831                           ;psect for function ___bmul
  1832                           
  1833                           
  1834                           ;incstack = 0
  1835                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1836                           ;___bmul@multiplier stored from wreg
  1837     03D9  00F9               	movwf	___bmul@multiplier
  1838     03DA                     l921:
  1839     03DA  01F8               	clrf	___bmul@product
  1840     03DB                     l923:
  1841     03DB  1C79               	btfss	___bmul@multiplier,0
  1842     03DC  2BDE               	goto	u381
  1843     03DD  2BDF               	goto	u380
  1844     03DE                     u381:
  1845     03DE  2BE3               	goto	l927
  1846     03DF                     u380:
  1847     03DF                     l925:
  1848     03DF  0877               	movf	___bmul@multiplicand,w
  1849     03E0  00FF               	movwf	btemp+1
  1850     03E1  087F               	movf	btemp+1,w
  1851     03E2  07F8               	addwf	___bmul@product,f
  1852     03E3                     l927:
  1853     03E3  1003               	clrc
  1854     03E4  0DF7               	rlf	___bmul@multiplicand,f
  1855     03E5                     l929:
  1856     03E5  1003               	clrc
  1857     03E6  0CF9               	rrf	___bmul@multiplier,f
  1858     03E7                     l931:
  1859     03E7  0879               	movf	___bmul@multiplier,w
  1860     03E8  1D03               	btfss	3,2
  1861     03E9  2BEB               	goto	u391
  1862     03EA  2BEC               	goto	u390
  1863     03EB                     u391:
  1864     03EB  2BDB               	goto	l923
  1865     03EC                     u390:
  1866     03EC                     l933:
  1867     03EC  0878               	movf	___bmul@product,w
  1868     03ED                     l221:
  1869     03ED  0008               	return
  1870     03EE                     __end_of___bmul:
  1871                           
  1872                           	psect	text8
  1873     041B                     __ptext8:	
  1874 ;; *************** function _init *****************
  1875 ;; Defined at:
  1876 ;;		line 64 in file "adctask.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       0       0       0       0
  1891 ;;      Locals:         0       0       0       0       0
  1892 ;;      Temps:          0       0       0       0       0
  1893 ;;      Totals:         0       0       0       0       0
  1894 ;;Total ram usage:        0 bytes
  1895 ;; Hardware stack levels used: 1
  1896 ;; Hardware stack levels required when called: 2
  1897 ;; This function calls:
  1898 ;;		_delay
  1899 ;;		_lcdcmd
  1900 ;; This function is called by:
  1901 ;;		_main
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905     041B                     _init:	
  1906                           ;psect for function _init
  1907                           
  1908     041B                     l1011:	
  1909                           ;incstack = 0
  1910                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1911                           
  1912                           
  1913                           ;adctask.c: 66:     TRISA=0x04;
  1914     041B  3004               	movlw	4
  1915     041C  1683               	bsf	3,5	;RP0=1, select bank1
  1916     041D  1303               	bcf	3,6	;RP1=0, select bank1
  1917     041E  0085               	movwf	5	;volatile
  1918     041F                     l1013:
  1919                           
  1920                           ;adctask.c: 67:     TRISC=0x00;
  1921     041F  0187               	clrf	7	;volatile
  1922     0420                     l1015:
  1923                           
  1924                           ;adctask.c: 68:     TRISD=0x00;
  1925     0420  0188               	clrf	8	;volatile
  1926                           
  1927                           ;adctask.c: 69:     ADCON0=0x91;
  1928     0421  3091               	movlw	145
  1929     0422  1283               	bcf	3,5	;RP0=0, select bank0
  1930     0423  1303               	bcf	3,6	;RP1=0, select bank0
  1931     0424  009F               	movwf	31	;volatile
  1932                           
  1933                           ;adctask.c: 70:     ADCON1=0x82;
  1934     0425  3082               	movlw	130
  1935     0426  1683               	bsf	3,5	;RP0=1, select bank1
  1936     0427  1303               	bcf	3,6	;RP1=0, select bank1
  1937     0428  009F               	movwf	31	;volatile
  1938     0429                     l1017:
  1939                           
  1940                           ;adctask.c: 71:     lcdcmd(0x30);
  1941     0429  3030               	movlw	48
  1942     042A  120A  118A  2403  120A  118A  	fcall	_lcdcmd
  1943     042F                     l1019:
  1944                           
  1945                           ;adctask.c: 72:     delay(100);
  1946     042F  3064               	movlw	100
  1947     0430  00F0               	movwf	delay@delaycount
  1948     0431  3000               	movlw	0
  1949     0432  00F1               	movwf	delay@delaycount+1
  1950     0433  120A  118A  23B9  120A  118A  	fcall	_delay
  1951     0438                     l1021:
  1952                           
  1953                           ;adctask.c: 73:     lcdcmd(0x30);
  1954     0438  3030               	movlw	48
  1955     0439  120A  118A  2403  120A  118A  	fcall	_lcdcmd
  1956     043E                     l1023:
  1957                           
  1958                           ;adctask.c: 74:     delay(100);
  1959     043E  3064               	movlw	100
  1960     043F  00F0               	movwf	delay@delaycount
  1961     0440  3000               	movlw	0
  1962     0441  00F1               	movwf	delay@delaycount+1
  1963     0442  120A  118A  23B9  120A  118A  	fcall	_delay
  1964     0447                     l1025:
  1965                           
  1966                           ;adctask.c: 75:     lcdcmd(0x30);
  1967     0447  3030               	movlw	48
  1968     0448  120A  118A  2403  120A  118A  	fcall	_lcdcmd
  1969     044D                     l1027:
  1970                           
  1971                           ;adctask.c: 76:     lcdcmd(0x38);
  1972     044D  3038               	movlw	56
  1973     044E  120A  118A  2403  120A  118A  	fcall	_lcdcmd
  1974     0453                     l1029:
  1975                           
  1976                           ;adctask.c: 77:     lcdcmd(0x0C);
  1977     0453  300C               	movlw	12
  1978     0454  120A  118A  2403  120A  118A  	fcall	_lcdcmd
  1979     0459                     l86:
  1980     0459  0008               	return
  1981     045A                     __end_of_init:
  1982                           
  1983                           	psect	text9
  1984     0403                     __ptext9:	
  1985 ;; *************** function _lcdcmd *****************
  1986 ;; Defined at:
  1987 ;;		line 121 in file "adctask.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  i               1    wreg     unsigned char 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  i               1    2[COMMON] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2001 ;;      Params:         0       0       0       0       0
  2002 ;;      Locals:         1       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0
  2004 ;;      Totals:         1       0       0       0       0
  2005 ;;Total ram usage:        1 bytes
  2006 ;; Hardware stack levels used: 1
  2007 ;; Hardware stack levels required when called: 1
  2008 ;; This function calls:
  2009 ;;		_delay
  2010 ;; This function is called by:
  2011 ;;		_main
  2012 ;;		_init
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016     0403                     _lcdcmd:	
  2017                           ;psect for function _lcdcmd
  2018                           
  2019                           
  2020                           ;incstack = 0
  2021                           ; Regs used in _lcdcmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2022                           ;lcdcmd@i stored from wreg
  2023     0403  00F2               	movwf	lcdcmd@i
  2024     0404                     l901:
  2025                           
  2026                           ;adctask.c: 121: void lcdcmd(unsigned char i);adctask.c: 122: {;adctask.c: 123:     PORT
      +                          C&=~0x08;
  2027     0404  30F7               	movlw	247
  2028     0405  00FF               	movwf	btemp+1
  2029     0406  087F               	movf	btemp+1,w
  2030     0407  1283               	bcf	3,5	;RP0=0, select bank0
  2031     0408  1303               	bcf	3,6	;RP1=0, select bank0
  2032     0409  0587               	andwf	7,f	;volatile
  2033     040A                     l903:
  2034                           
  2035                           ;adctask.c: 124:     PORTD=i;
  2036     040A  0872               	movf	lcdcmd@i,w
  2037     040B  0088               	movwf	8	;volatile
  2038     040C                     l905:
  2039                           
  2040                           ;adctask.c: 125:     PORTC|=0x01;
  2041     040C  1407               	bsf	7,0	;volatile
  2042     040D                     l907:
  2043                           
  2044                           ;adctask.c: 126:     PORTC&=~0x01;
  2045     040D  30FE               	movlw	254
  2046     040E  00FF               	movwf	btemp+1
  2047     040F  087F               	movf	btemp+1,w
  2048     0410  0587               	andwf	7,f	;volatile
  2049     0411                     l909:
  2050                           
  2051                           ;adctask.c: 127:     delay(100);
  2052     0411  3064               	movlw	100
  2053     0412  00F0               	movwf	delay@delaycount
  2054     0413  3000               	movlw	0
  2055     0414  00F1               	movwf	delay@delaycount+1
  2056     0415  120A  118A  23B9  120A  118A  	fcall	_delay
  2057     041A                     l100:
  2058     041A  0008               	return
  2059     041B                     __end_of_lcdcmd:
  2060                           
  2061                           	psect	text10
  2062     03B9                     __ptext10:	
  2063 ;; *************** function _delay *****************
  2064 ;; Defined at:
  2065 ;;		line 139 in file "adctask.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  delaycount      2    0[COMMON] unsigned int 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2079 ;;      Params:         2       0       0       0       0
  2080 ;;      Locals:         0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0
  2082 ;;      Totals:         2       0       0       0       0
  2083 ;;Total ram usage:        2 bytes
  2084 ;; Hardware stack levels used: 1
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;;		_init
  2090 ;;		_lcdcmd
  2091 ;;		_lcddata
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095     03B9                     _delay:	
  2096                           ;psect for function _delay
  2097                           
  2098     03B9                     l897:	
  2099                           ;incstack = 0
  2100                           ; Regs used in _delay: [wreg+status,2+status,0]
  2101                           
  2102     03B9                     l899:	
  2103                           ;adctask.c: 139: void delay(unsigned int delaycount);adctask.c: 140: {;adctask.c: 141:  
      +                             while(--delaycount);
  2104                           
  2105     03B9  3001               	movlw	1
  2106     03BA  02F0               	subwf	delay@delaycount,f
  2107     03BB  3000               	movlw	0
  2108     03BC  1C03               	skipc
  2109     03BD  03F1               	decf	delay@delaycount+1,f
  2110     03BE  02F1               	subwf	delay@delaycount+1,f
  2111     03BF  0870               	movf	delay@delaycount,w
  2112     03C0  0471               	iorwf	delay@delaycount+1,w
  2113     03C1  1D03               	btfss	3,2
  2114     03C2  2BC4               	goto	u371
  2115     03C3  2BC5               	goto	u370
  2116     03C4                     u371:
  2117     03C4  2BB9               	goto	l899
  2118     03C5                     u370:
  2119     03C5                     l109:
  2120     03C5  0008               	return
  2121     03C6                     __end_of_delay:
  2122                           
  2123                           	psect	text11
  2124     049E                     __ptext11:	
  2125 ;; *************** function ___lmul *****************
  2126 ;; Defined at:
  2127 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  multiplier      4    0[COMMON] unsigned long 
  2130 ;;  multiplicand    4    4[COMMON] unsigned long 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  product         4    9[COMMON] unsigned long 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  4    0[COMMON] unsigned long 
  2135 ;; Registers used:
  2136 ;;		wreg, status,2, status,0
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2142 ;;      Params:         8       0       0       0       0
  2143 ;;      Locals:         4       0       0       0       0
  2144 ;;      Temps:          1       0       0       0       0
  2145 ;;      Totals:        13       0       0       0       0
  2146 ;;Total ram usage:       13 bytes
  2147 ;; Hardware stack levels used: 1
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155     049E                     ___lmul:	
  2156                           ;psect for function ___lmul
  2157                           
  2158     049E                     l1069:	
  2159                           ;incstack = 0
  2160                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2161                           
  2162     049E  3000               	movlw	0
  2163     049F  00FC               	movwf	___lmul@product+3
  2164     04A0  3000               	movlw	0
  2165     04A1  00FB               	movwf	___lmul@product+2
  2166     04A2  3000               	movlw	0
  2167     04A3  00FA               	movwf	___lmul@product+1
  2168     04A4  3000               	movlw	0
  2169     04A5  00F9               	movwf	___lmul@product
  2170     04A6                     l1071:
  2171     04A6  1C70               	btfss	___lmul@multiplier,0
  2172     04A7  2CA9               	goto	u621
  2173     04A8  2CAA               	goto	u620
  2174     04A9                     u621:
  2175     04A9  2CC1               	goto	l1075
  2176     04AA                     u620:
  2177     04AA                     l1073:
  2178     04AA  0874               	movf	___lmul@multiplicand,w
  2179     04AB  07F9               	addwf	___lmul@product,f
  2180     04AC  0875               	movf	___lmul@multiplicand+1,w
  2181     04AD  1103               	clrz
  2182     04AE  1803               	skipnc
  2183     04AF  3E01               	addlw	1
  2184     04B0  1903               	skipnz
  2185     04B1  2CB3               	goto	u631
  2186     04B2  07FA               	addwf	___lmul@product+1,f
  2187     04B3                     u631:
  2188     04B3  0876               	movf	___lmul@multiplicand+2,w
  2189     04B4  1103               	clrz
  2190     04B5  1803               	skipnc
  2191     04B6  3E01               	addlw	1
  2192     04B7  1903               	skipnz
  2193     04B8  2CBA               	goto	u632
  2194     04B9  07FB               	addwf	___lmul@product+2,f
  2195     04BA                     u632:
  2196     04BA  0877               	movf	___lmul@multiplicand+3,w
  2197     04BB  1103               	clrz
  2198     04BC  1803               	skipnc
  2199     04BD  3E01               	addlw	1
  2200     04BE  1903               	skipnz
  2201     04BF  2CC1               	goto	u633
  2202     04C0  07FC               	addwf	___lmul@product+3,f
  2203     04C1                     u633:
  2204     04C1                     l1075:
  2205     04C1  3001               	movlw	1
  2206     04C2  00F8               	movwf	??___lmul
  2207     04C3                     u645:
  2208     04C3  1003               	clrc
  2209     04C4  0DF4               	rlf	___lmul@multiplicand,f
  2210     04C5  0DF5               	rlf	___lmul@multiplicand+1,f
  2211     04C6  0DF6               	rlf	___lmul@multiplicand+2,f
  2212     04C7  0DF7               	rlf	___lmul@multiplicand+3,f
  2213     04C8  0BF8               	decfsz	??___lmul,f
  2214     04C9  2CC3               	goto	u645
  2215     04CA                     l1077:
  2216     04CA  3001               	movlw	1
  2217     04CB                     u655:
  2218     04CB  1003               	clrc
  2219     04CC  0CF3               	rrf	___lmul@multiplier+3,f
  2220     04CD  0CF2               	rrf	___lmul@multiplier+2,f
  2221     04CE  0CF1               	rrf	___lmul@multiplier+1,f
  2222     04CF  0CF0               	rrf	___lmul@multiplier,f
  2223     04D0  3EFF               	addlw	-1
  2224     04D1  1D03               	skipz
  2225     04D2  2CCB               	goto	u655
  2226     04D3  0873               	movf	___lmul@multiplier+3,w
  2227     04D4  0472               	iorwf	___lmul@multiplier+2,w
  2228     04D5  0471               	iorwf	___lmul@multiplier+1,w
  2229     04D6  0470               	iorwf	___lmul@multiplier,w
  2230     04D7  1D03               	skipz
  2231     04D8  2CDA               	goto	u661
  2232     04D9  2CDB               	goto	u660
  2233     04DA                     u661:
  2234     04DA  2CA6               	goto	l1071
  2235     04DB                     u660:
  2236     04DB                     l1079:
  2237     04DB  087C               	movf	___lmul@product+3,w
  2238     04DC  00F3               	movwf	?___lmul+3
  2239     04DD  087B               	movf	___lmul@product+2,w
  2240     04DE  00F2               	movwf	?___lmul+2
  2241     04DF  087A               	movf	___lmul@product+1,w
  2242     04E0  00F1               	movwf	?___lmul+1
  2243     04E1  0879               	movf	___lmul@product,w
  2244     04E2  00F0               	movwf	?___lmul
  2245     04E3                     l209:
  2246     04E3  0008               	return
  2247     04E4                     __end_of___lmul:
  2248     007E                     btemp	set	126	;btemp
  2249     007E                     wtemp0	set	126
  2250                           
  2251                           	psect	config
  2252                           
  2253                           ;Config register CONFIG @ 0x2007
  2254                           ;	Oscillator Selection bits
  2255                           ;	FOSC = EXTRC, RC oscillator
  2256                           ;	Watchdog Timer Enable bit
  2257                           ;	WDTE = OFF, WDT disabled
  2258                           ;	Power-up Timer Enable bit
  2259                           ;	PWRTE = OFF, PWRT disabled
  2260                           ;	Brown-out Reset Enable bit
  2261                           ;	BOREN = OFF, BOR disabled
  2262                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2263                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2264                           ;	Data EEPROM Memory Code Protection bit
  2265                           ;	CPD = OFF, Data EEPROM code protection off
  2266                           ;	Flash Program Memory Write Enable bits
  2267                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2268                           ;	In-Circuit Debugger Mode bit
  2269                           ;	DEBUG = 0x1, unprogrammed default
  2270                           ;	Flash Program Memory Code Protection bit
  2271                           ;	CP = OFF, Code protection off
  2272     2007                     	org	8199
  2273     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      79
    BANK1            80      0      10
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lldiv
    _lcdoutput1->___lldiv
    ___lldiv->___lmul
    _lcdoutput->___bmul
    _lcddata->_delay
    ___bmul->___lwdiv
    _init->_lcdcmd
    _lcdcmd->_delay

Critical Paths under _main in BANK0

    _main->_lcdoutput1
    _lcdoutput1->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    6343
                                             17 BANK0      8     8      0
                            ___lldiv
                             ___lmul
                              _delay
                               _init
                             _lcdcmd
                            _lcddata
                          _lcdoutput
                         _lcdoutput1
 ---------------------------------------------------------------------------------
 (1) _lcdoutput1                                           4     0      4    1618
                                             13 BANK0      4     0      4
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcdoutput                                            3     1      2    1255
                                             10 COMMON     3     1      2
                             ___bmul
                            ___lwdiv
                            _lcddata
 ---------------------------------------------------------------------------------
 (2) _lcddata                                              1     1      0     500
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     168
                                              7 COMMON     3     2      1
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     978
                              _delay
                             _lcdcmd
 ---------------------------------------------------------------------------------
 (1) _lcdcmd                                               1     1      0     500
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     0      2     478
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _delay
   _init
     _delay
     _lcdcmd
       _delay
   _lcdcmd
   _lcddata
     _delay
   _lcdoutput
     ___bmul
       ___lwdiv (ARG)
     ___lwdiv
     _lcddata
   _lcdoutput1
     ___lldiv
     ___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       A       7       12.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      67      12        0.0%
ABS                  0      0      67       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Jan 15 21:18:06 2024

                      _a 0065                        _b 00A0                        _c 0036  
                      _j 004A                        _k 0020                        _l 0032  
                      _m 0044                        _n 004B                        pc 0002  
         ___bmul@product 0078                       l72 06CC                       l86 0459  
                     l94 0616                       l97 06C3                       _fr 0040  
                     fsr 0004                      l100 041A                      l103 0402  
                    l109 03C5                      l221 03ED                      l231 059F  
                    l209 04E3                      l425 0537                      l475 049D  
                    l901 0404                      l903 040A                      l911 03EF  
                    l905 040C                      l921 03DA                      l913 03F2  
                    l907 040D                      l931 03E7                      l923 03DB  
                    l915 03F4                      l909 0411                      l933 03EC  
                    l925 03DF                      l917 03F5                      l941 054D  
                    l927 03E3                      l919 03F9                      l951 0579  
                    l943 0556                      l929 03E5                      l953 0587  
                    l945 055A                      l937 0538                      l955 0588  
                    l947 055E                      l939 054A                      l971 04FC  
                    l963 04E4                      l957 0591                      l949 0567  
                    l973 0500                      l965 04EC                      l981 052F  
                    l991 0465                      l959 0597                      l975 0512  
                    l967 04EF                      l897 03B9                      l993 046C  
                    l985 045A                      l977 0520                      l969 04F8  
                    l899 03B9                      l995 0470                      l987 045C  
                    l979 0529                      l997 0474                      l989 0462  
                    l999 0485                      u400 054A                      u401 0549  
                    u420 055E                      u500 0512                      u421 055D  
                    u501 0511                      u415 054F                      u600 05E5  
                    u440 0579                      u520 052F                      u601 05E4  
                    u441 0578                      u521 052E                      u505 050E  
                    u370 03C5                      u530 0462                      u610 05F1  
                    u371 03C4                      u531 0461                      u611 05F0  
                    u435 0560                      u515 0521                      u620 04AA  
                    u380 03DF                      u460 0597                      u700 0734  
                    u621 04A9                      u381 03DE                      u461 0596  
                    u445 0575                      u701 0733                      u390 03EC  
                    u550 0474                      u470 04EC                      u710 075F  
                    u631 04B3                      u391 03EB                      u551 0473  
                    u455 0589                      u471 04EB                      u711 075E  
                    u632 04BA                      u720 07C3                      u633 04C1  
                    u545 0466                      u721 07C2                      u570 0485  
                    u490 0500                      u571 0484                      u491 04FF  
                    u660 04DB                      u661 04DA                      u645 04C3  
                    u565 0475                      u485 04F1                      u590 0499  
                    u670 06D0                      u655 04CB                      u591 0498  
                    u575 0481                      u671 06CF                      u680 06F4  
                    u585 048D                      u690 06FE                      u691 06FF  
                    u692 0704                      u693 0705                      u685 06EF  
                    fsr0 0004                      indf 0000                     l1001 048B  
                   l1011 041B                     l1003 048C                     l1021 0438  
                   l1013 041F                     l1005 0493                     l1101 0725  
                   l1023 043E                     l1015 0420                     l1007 0499  
                   l1031 0617                     l1103 072D                     l1025 0447  
                   l1017 0429                     l1041 05C2                     l1033 06C1  
                   l1121 0768                     l1113 0745                     l1105 0734  
                   l1027 044D                     l1019 042F                     l1051 05EA  
                   l1043 05C8                     l1035 05A0                     l1131 07AA  
                   l1123 07A0                     l1115 0750                     l1107 0741  
                   l1029 0453                     l1061 0601                     l1053 05EC  
                   l1045 05CC                     l1037 05A4                     l1133 07B4  
                   l1125 07A6                     l1117 0758                     l1071 04A6  
                   l1063 0606                     l1055 05F1                     l1039 05A9  
                   l1047 05DF                     l1135 07BC                     l1119 075F  
                   l1073 04AA                     l1065 060C                     l1057 05F4  
                   l1049 05E5                     l1137 07C3                     l1075 04C1  
                   l1067 0610                     l1059 05FB                     l1139 07CC  
                   l1091 0711                     l1083 06C4                     l1077 04CA  
                   l1069 049E                     l1093 0717                     l1085 06C9  
                   l1079 04DB                     l1087 06D0                     l1089 06E2  
                   l1099 071B                     _main 06C4                     _init 041B  
                   _ones 0038                     _tens 003A                     btemp 007E  
                   start 0000        ___bmul@multiplier 0079                    ?_main 0070  
                  ?_init 0070          __end_of___lldiv 05A0          __end_of___llmod 0538  
        __end_of___lwdiv 049E                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
    ___lmul@multiplicand 0074          __end_of_lcddata 0403                    _delay 03B9  
                  _value 002E                    pclath 000A                    status 0003  
                  wtemp0 007E              lcdoutput1@i 0059          __initialization 07D9  
           __end_of_main 07D9             __end_of_init 045A                   ??_main 005D  
                 ??_init 0073                   ?_delay 0070                   _ADCON0 001F  
                 _ADCON1 009F         ___llmod@dividend 0074                   _ADRESH 001E  
                 _ADRESL 009E                   ___bmul 03D9                   ___lmul 049E  
              ??___lldiv 007D                ??___llmod 0078                ??___lwdiv 0074  
                 _lcdcmd 0403                ??_lcddata 0072  __end_of__initialization 07FC  
    ___bmul@multiplicand 0077           __pcstackCOMMON 0070             __pidataBANK0 03AF  
           __pidataBANK1 03A5            __end_of_delay 03C6                  ??_delay 0072  
             __pbssBANK0 0020               _delaycount 0042               __pmaintext 06C4  
                ?___bmul 0077                  ?___lmul 0070                  ?_lcdcmd 0070  
         ___lmul@product 0079               _lcdoutput1 0617                  ___lldiv 0538  
                ___llmod 04E4                  ___lwdiv 045A        __end_of_lcdoutput 0617  
                __ptext1 0617                  __ptext2 04E4                  __ptext3 0538  
                __ptext4 05A0                  __ptext5 03EE                  __ptext6 045A  
                __ptext7 03D9                  __ptext8 041B                  __ptext9 0403  
                _lcddata 03EE                  _hundred 003C                  lcdcmd@i 0072  
                clrloop0 039E                  _voltage 002A     end_of_initialization 07FC  
        ___lldiv@divisor 004C          ___lldiv@counter 0058              ?_lcdoutput1 0059  
         __end_of___bmul 03EE           __end_of___lmul 04E4           __end_of_lcdcmd 041B  
    start_initialization 07D9               lcdoutput@i 007A               lcdoutput@s 007C  
        ___llmod@divisor 0070          ___llmod@counter 0079                 ??___bmul 0078  
               ??___lmul 0078               init_fetch0 03C6                 ??_lcdcmd 0072  
            __pdataBANK0 0065              __pdataBANK1 00A0          delay@delaycount 0070  
              ___latbits 0002            __pcstackBANK0 004C         ___lwdiv@dividend 0072  
               ?___lldiv 004C                 ?___llmod 0070                 ?___lwdiv 0070  
               ?_lcddata 0070                _highvalue 0046                _lcdoutput 05A0  
       ___lwdiv@quotient 0074                clear_ram0 039D               ?_lcdoutput 007A  
      ___lmul@multiplier 0070             ??_lcdoutput1 007E       __end_of_lcdoutput1 06C4  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076                 __ptext10 03B9  
               __ptext11 049E                 _lowvalue 0048                 _thousand 003E  
               lcddata@i 0072              ??_lcdoutput 007C                 init_ram0 03CA  
       ___lldiv@dividend 0050         ___lldiv@quotient 0054  
